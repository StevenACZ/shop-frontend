{"version":3,"sources":["slices/productList.ts","slices/productDetails.ts","slices/cart.ts","slices/user.ts","slices/order.ts","store/configureStore.ts","pages/home/Styles.ts","axios/index.ts","components/product/product-list/Styles.ts","theme/variables.ts","components/product/product-list/product-list-item/Styles.ts","components/product/product-list/product-list-item/ProductListItem.tsx","components/product/product-list/ProductList.tsx","actions/productList.ts","pages/home/HomeScreen.tsx","pages/product/Styles.ts","components/product/product-details/Styles.ts","components/button/Styles.ts","components/button/Button.tsx","components/product/product-details/ProductDetails.tsx","pages/product/ProductScreen.tsx","actions/productDetails.ts","actions/cart.ts","pages/cart/Styles.ts","components/cart/cart-list/Styles.ts","components/cart/cart-list/cart-list-item/Styles.ts","components/cart/cart-list/cart-list-item/CartListItem.tsx","components/cart/cart-list/CartList.tsx","actions/order.ts","components/cart/cart-subtotal/Styles.ts","components/cart/cart-subtotal/CartSubtotal.tsx","pages/cart/CartScreen.tsx","actions/user.ts","pages/auth/login/Styles.ts","components/input/Styles.ts","components/input/Input.tsx","pages/auth/login/LoginScreen.tsx","pages/auth/register/Styles.ts","pages/auth/register/RegisterScreen.tsx","pages/profile/Styles.ts","pages/profile/ProfileScreen.tsx","pages/checkout-process/Styles.ts","components/checkout-process/shipping/Styles.ts","components/checkout-process/shipping/Shipping.tsx","components/checkout-process/payment/Styles.tsx","components/checkout-process/payment/Payment.tsx","components/checkout-process/place-order/Styles.ts","components/checkout-process/place-order/PlaceOrder.tsx","pages/checkout-process/CheckoutProcessScreen.tsx","pages/order/Styles.ts","pages/order/OrderScreen.tsx","pages/my-orders/Styles.ts","components/my-orders/order-list/Styles.ts","components/my-orders/order-list/order-list-item/Styles.ts","components/my-orders/order-list/order-list-item/OrderListItem.tsx","components/my-orders/order-list/OrderList.tsx","pages/my-orders/MyOrdersScreen.tsx","routes/Routes.tsx","theme/globalStyle.ts","components/layout/layout/Styles.ts","components/layout/header/Styles.ts","components/layout/header/Header.tsx","components/layout/layout/Layout.tsx","App.tsx","index.tsx"],"names":["productListSlice","createSlice","name","initialState","products","loading","error","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","actions","selectProducts","productList","selectLoading","selectError","productDetailsSlice","product","_id","image","description","brand","category","price","countInStock","rating","numReviews","reviews","productRequest","productSuccess","productFail","selectProduct","productDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","paymentMethodFromStorage","cartItems","shippingAddress","paymentMethod","cartSlice","cartAddItem","item","existItem","find","x","map","push","cartRemoveItem","filter","cartSaveShippingAddress","cartSavePaymentMethod","clearCart","clearCartReadyForCheckoutProcess","selectCartItems","cart","selectShippingAddress","selectPaymentMethod","userInfoFromStorage","profile","userInfo","success","errors","errorLogin","errorRegister","errorDetails","errorUpdateDetails","userSlice","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userRegisterRequest","userRegisterSuccess","userRegisterFail","userDetailsRequest","userDetailsSuccess","userDetailsFail","userUpdateProfileRequest","userUpdateProfileSuccess","userUpdateProfileFail","userUpdateProfileReset","deleteAlert","selectProfile","user","selectUserInfo","selectSuccess","selectErrorLogin","selectErrorRegister","selectErrorDetails","selectErrorUpdateDetails","orderSlice","orders","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderListMyRequest","orderListMySuccess","orderListMyFail","clearOrder","selectOrders","selectOrder","store","configureStore","reducer","HomeScreenStyled","styled","section","axios","create","baseURL","ProductListStyled","div","color","ProductListItemStyled","ProductImage","figure","ProductDetails","ProductListItem","history","useHistory","onClick","src","alt","allowHalf","disabled","defaultValue","toFixed","ProductList","dispatch","useDispatch","useSelector","useEffect","a","get","data","response","message","spinning","delay","type","showIcon","banner","HomeScreen","ProductScreenStyled","ProductDetailsStyled","Header","Main","Image","Description","AddToCart","ButtonStyled","button","p","width","height","Button","forwardRef","ref","children","props","useState","quantity","setQuantity","goBack","min","max","onChange","value","ProductScreen","productID","useParams","productId","size","addToCart","qty","getState","setItem","stringify","CartScreenStyled","Left","Right","CartListStyled","ul","CartListItemStyled","li","Name","Price","Quantity","Remove","CartListItem","removeFromCartHandler","removeFromCart","goToProduct","currentQty","DeleteFilled","CartList","clearAllOrder","removeItem","CartSubtotalStyled","Summary","Checkout","CartSubtotal","quantityItems","totalAmount","CartScreen","location","useLocation","search","Number","split","getQuantityItems","reduce","acc","deleteAlerts","setTimeout","logout","getUserDetails","token","config","headers","Authorization","LoginScreenStyled","Form","form","GoRegister","InputStyled","label","Error","Input","LoginScreen","useForm","register","handleSignIn","handleSubmit","email","password","post","login","onSubmit","placeholder","required","pattern","minLength","maxLength","RegisterScreenStyled","GoLogin","RegisterScreen","watch","useRef","current","handleSignUp","registerUser","password_repeat","validate","ProfileScreenStyled","ProfileScreen","put","updateUserProfile","CheckoutProcessScreenStyled","Container","ShippingStyled","Shipping","saveShippingAddress","address","city","postalCode","country","PaymentStyled","Payment","currentValue","setCurrentValue","e","preventDefault","Group","target","PlaceOrderStyled","Details","OrderList","OrderItem","OrderImage","OrderName","OrderCant","OrderSummary","PlaceOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","createOrder","orderItems","length","CheckoutProcessScreen","Step","Steps","currentProcess","setCurrentProcess","steps","title","content","className","OrderScreenStyled","OrderScreen","orderId","setSdkReady","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","isPaid","window","paypal","console","log","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","payOrder","MyOrdersScreenStyled","OrderListStyled","OrderListItemStyled","Body","Footer","OrderListItem","createdAt","substring","MyOrdersScreen","Routes","exact","path","component","to","GlobalStyle","createGlobalStyle","main","HeaderStyled","header","HeaderContainer","Logo","Search","DrawerStyled","Navbar","nav","Profile","menu","Item","icon","ProfileOutlined","Divider","DatabaseOutlined","LogoutOutlined","visible","setVisible","onClose","SearchOutlined","MenuOutlined","placement","closable","ShoppingCartOutlined","overlay","trigger","DownOutlined","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb2bb2c3.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface ProductListState {\n  products: [];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ProductListState = {\n  products: [],\n  loading: true,\n  error: null,\n};\n\nexport const productListSlice = createSlice({\n  name: 'productList',\n  initialState,\n  reducers: {\n    productListRequest: (state) => {\n      state.products = [];\n      state.loading = true;\n      state.error = null;\n    },\n    productListSuccess: (state, action) => {\n      state.products = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    productListFail: (state, action) => {\n      state.products = [];\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n} = productListSlice.actions;\n\nexport const selectProducts = (state: RootState) => state.productList.products;\nexport const selectLoading = (state: RootState) => state.productList.loading;\nexport const selectError = (state: RootState) => state.productList.error;\n\nexport default productListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface Product {\n  _id: string;\n  name: string;\n  image: string;\n  description: string;\n  brand: string;\n  category: string;\n  price: number;\n  countInStock: number;\n  rating: number;\n  numReviews: number;\n  reviews: [];\n}\n\ninterface ProductDetailsState {\n  product: Product;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ProductDetailsState = {\n  product: {\n    _id: '',\n    name: '',\n    image: '',\n    description: '',\n    brand: '',\n    category: '',\n    price: 0,\n    countInStock: 0,\n    rating: 0,\n    numReviews: 0,\n    reviews: [],\n  },\n  loading: true,\n  error: null,\n};\n\nexport const productDetailsSlice = createSlice({\n  name: 'productDetails',\n  initialState,\n  reducers: {\n    productRequest: (state) => {\n      state.loading = true;\n    },\n    productSuccess: (state, action) => {\n      state.product = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    productFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.product = {\n        _id: '',\n        name: '',\n        image: '',\n        description: '',\n        brand: '',\n        category: '',\n        price: 0,\n        countInStock: 0,\n        rating: 0,\n        numReviews: 0,\n        reviews: [],\n      };\n    },\n  },\n});\n\nexport const {\n  productRequest,\n  productSuccess,\n  productFail,\n} = productDetailsSlice.actions;\n\nexport const selectProduct = (state: RootState) => state.productDetails.product;\nexport const selectLoading = (state: RootState) => state.productDetails.loading;\nexport const selectError = (state: RootState) => state.productDetails.error;\n\nexport default productDetailsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems') || '{}')\n  : [];\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress') || '{}')\n  : null;\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod') || '{}')\n  : null;\n\ninterface CartState {\n  cartItems: object[];\n  shippingAddress: null | {};\n  paymentMethod: null | {};\n}\n\nconst initialState: CartState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage,\n  paymentMethod: paymentMethodFromStorage,\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    cartAddItem: (state, action) => {\n      const item = action.payload;\n\n      const existItem: any = state.cartItems.find(\n        (x: any) => x.product === item.product\n      );\n\n      if (existItem) {\n        state.cartItems = state.cartItems.map((x: any) =>\n          x.product === existItem.product ? item : x\n        ) as [];\n      } else {\n        state.cartItems.push(item);\n      }\n    },\n    cartRemoveItem: (state, action) => {\n      state.cartItems = state.cartItems.filter(\n        (x: any) => x.product !== action.payload\n      );\n    },\n    cartSaveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n    },\n    cartSavePaymentMethod: (state, action) => {\n      state.paymentMethod = action.payload;\n    },\n    clearCart: (state) => {\n      state.cartItems = [];\n      state.shippingAddress = null;\n      state.paymentMethod = null;\n    },\n    // READY FOR CHECKOUT PROCESS\n    clearCartReadyForCheckoutProcess: (state) => {\n      state.shippingAddress = null;\n      state.paymentMethod = null;\n    },\n  },\n});\n\nexport const {\n  cartAddItem,\n  cartRemoveItem,\n  cartSaveShippingAddress,\n  cartSavePaymentMethod,\n  clearCart,\n  clearCartReadyForCheckoutProcess,\n} = cartSlice.actions;\n\nexport const selectCartItems = (state: RootState) => state.cart.cartItems;\nexport const selectShippingAddress = (state: RootState) =>\n  state.cart.shippingAddress;\nexport const selectPaymentMethod = (state: RootState) =>\n  state.cart.paymentMethod;\n\nexport default cartSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '{}')\n  : null;\n\ninterface UserState {\n  profile: null | {};\n  userInfo: null | {};\n  loading: boolean;\n  success: boolean;\n  errors: {\n    errorLogin: null | string;\n    errorRegister: null | string;\n    errorDetails: null | string;\n    errorUpdateDetails: null | string;\n  };\n}\n\nconst initialState: UserState = {\n  profile: null,\n  userInfo: userInfoFromStorage,\n  loading: false,\n  success: false,\n  errors: {\n    errorLogin: null,\n    errorRegister: null,\n    errorDetails: null,\n    errorUpdateDetails: null,\n  },\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    // LOGIN\n    userLoginRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userLoginSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorLogin = null;\n      state.loading = false;\n    },\n    userLoginFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorLogin = action.payload;\n      state.loading = false;\n    },\n    // LOGOUT\n    userLogout: (state) => {\n      state.profile = null;\n      state.userInfo = null;\n      state.loading = false;\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n    },\n    // REGISTER\n    userRegisterRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userRegisterSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorRegister = null;\n      state.loading = false;\n    },\n    userRegisterFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorRegister = action.payload;\n      state.loading = false;\n    },\n    // DETAILS\n    userDetailsRequest: (state) => {\n      state.profile = null;\n      state.loading = true;\n    },\n    userDetailsSuccess: (state, action) => {\n      state.profile = action.payload;\n      state.errors.errorDetails = null;\n      state.loading = false;\n    },\n    userDetailsFail: (state, action) => {\n      state.profile = null;\n      state.errors.errorDetails = action.payload;\n      state.loading = false;\n    },\n    // UPDATE\n    userUpdateProfileRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n    },\n    userUpdateProfileSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.success = true;\n      state.errors.errorUpdateDetails = null;\n      state.loading = false;\n    },\n    userUpdateProfileFail: (state, action) => {\n      state.success = false;\n      state.errors.errorUpdateDetails = action.payload;\n      state.loading = false;\n    },\n    userUpdateProfileReset: (state, action) => {\n      state.errors.errorUpdateDetails = action.payload;\n      state.loading = false;\n    },\n    // DELETE ALERTS\n    deleteAlert: (state) => {\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n      state.errors.errorUpdateDetails = null;\n    },\n  },\n});\n\nexport const {\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginFail,\n  userLogout,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterFail,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  userUpdateProfileReset,\n  deleteAlert,\n} = userSlice.actions;\n\nexport const selectProfile = (state: RootState) => state.user.profile;\nexport const selectUserInfo = (state: RootState) => state.user.userInfo;\nexport const selectLoading = (state: RootState) => state.user.loading;\nexport const selectSuccess = (state: RootState) => state.user.success;\n\nexport const selectErrorLogin = (state: RootState) =>\n  state.user.errors.errorLogin;\nexport const selectErrorRegister = (state: RootState) =>\n  state.user.errors.errorRegister;\nexport const selectErrorDetails = (state: RootState) =>\n  state.user.errors.errorDetails;\nexport const selectErrorUpdateDetails = (state: RootState) =>\n  state.user.errors.errorUpdateDetails;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface CartState {\n  orders: null | [{}];\n  order: null | {};\n  success: boolean;\n  error: null | {};\n  loading: boolean;\n}\n\nconst initialState: CartState = {\n  orders: [{}],\n  order: null,\n  success: false,\n  error: null,\n  loading: false,\n};\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    // CREATE\n    orderCreateRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderCreateSuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderCreateFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    // DETAILS\n    orderDetailsRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderDetailsSuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderDetailsFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    // PAY\n    orderPayRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderPaySuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderPayFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    orderPayReset: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = false;\n    },\n    // LIST MY\n    orderListMyRequest: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = true;\n    },\n    orderListMySuccess: (state, action) => {\n      state.orders = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    orderListMyFail: (state, action) => {\n      state.orders = null;\n      state.error = action.payload;\n      state.loading = false;\n    },\n    // CLEAR\n    clearOrder: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  orderCreateRequest,\n  orderCreateSuccess,\n  orderCreateFail,\n  orderDetailsRequest,\n  orderDetailsSuccess,\n  orderDetailsFail,\n  orderPayRequest,\n  orderPaySuccess,\n  orderPayFail,\n  orderPayReset,\n  orderListMyRequest,\n  orderListMySuccess,\n  orderListMyFail,\n  clearOrder,\n} = orderSlice.actions;\n\nexport const selectOrders = (state: RootState) => state.order.orders;\nexport const selectOrder = (state: RootState) => state.order.order;\nexport const selectLoading = (state: RootState) => state.order.loading;\nexport const selectSuccess = (state: RootState) => state.order.success;\nexport const selectError = (state: RootState) => state.order.error;\n\nexport default orderSlice.reducer;\n","// Redux\nimport { configureStore } from '@reduxjs/toolkit';\n\n// Redux - Slices\nimport { productListSlice } from '../slices/productList';\nimport { productDetailsSlice } from '../slices/productDetails';\nimport { cartSlice } from '../slices/cart';\nimport { userSlice } from '../slices/user';\nimport { orderSlice } from '../slices/order';\n\nconst store = configureStore({\n  reducer: {\n    productList: productListSlice.reducer,\n    productDetails: productDetailsSlice.reducer,\n    cart: cartSlice.reducer,\n    user: userSlice.reducer,\n    order: orderSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;\n","import styled from 'styled-components';\n\nexport const HomeScreenStyled = styled.section`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","// Axios\nimport axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:5000',\n});\n","import styled from 'styled-components';\n\nexport const ProductListStyled = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","export const color = {\n  // colorPrimary: '#181b32',\n  colorPrimary: 'red', // test //\n\n  // colorGreyLight1: '#E8EAF0',\n  colorGreyLight1: 'blue', // test //\n  // colorGreyLight2: '#F6F7F9',\n  colorGreyLight2: 'peru', // test //\n  // colorGreyLight3: '#8D8D9D',\n  colorGreyLight3: 'green', // test //\n  // colorGreyLight4: '#DFE1E6',\n  colorGreyLight4: 'yellow', // test //\n  // colorGreyLight5: '#878FB8',\n  colorGreyLight5: 'purple', // test //\n\n  colorWhite: '#fff',\n  colorBlack: '#000',\n};\n","import styled from 'styled-components';\nimport { color } from '../../../../theme/variables';\n\nexport const ProductListItemStyled = styled.div`\n  border: 1px solid ${color.colorBlack};\n  padding: 10px;\n`;\n\nexport const ProductImage = styled.figure`\n  margin-bottom: 20px;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`;\n\nexport const ProductDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > p {\n    font-size: 16px;\n    line-height: 20px;\n    margin-bottom: 10px;\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  & > div {\n    & > ul {\n      font-size: 12px;\n    }\n    & > span {\n      margin-left: 10px;\n      font-size: 12px;\n    }\n  }\n\n  & > h3 {\n    display: inline-block;\n    margin-top: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { ProductListItemStyled, ProductDetails, ProductImage } from './Styles';\n\n// Types\nimport { Product } from '../../../../data/products';\n\n// Antd Components\nimport { Rate } from 'antd';\n\nconst ProductListItem: React.FC<Product> = ({\n  _id,\n  name,\n  image,\n  price,\n  rating,\n  numReviews,\n}) => {\n  const history = useHistory();\n\n  const productDetails = () => {\n    history.push(`/product/${_id}`);\n  };\n  return (\n    <ProductListItemStyled>\n      <ProductImage onClick={productDetails}>\n        <img src={image} alt={name} />\n      </ProductImage>\n\n      <ProductDetails>\n        <p onClick={productDetails}>{name}</p>\n        <div>\n          <Rate allowHalf disabled defaultValue={rating} />\n          <span>{numReviews} reviews</span>\n        </div>\n        <h3>${price?.toFixed(2)}</h3>\n      </ProductDetails>\n    </ProductListItemStyled>\n  );\n};\n\nexport default ProductListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProducts } from '../../../actions/productList';\n\n// Redux - Slices\nimport {\n  selectProducts,\n  selectLoading,\n  selectError,\n} from '../../../slices/productList';\n\n// Styles\nimport { ProductListStyled } from './Styles';\n\n// Types\nimport { Product } from '../../../data/products';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport ProductListItem from './product-list-item/ProductListItem';\n\ninterface Props {}\n\nconst ProductList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const productList = useSelector(selectProducts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading} delay={0}>\n      {loading ? (\n        <Spin />\n      ) : error ? (\n        <Alert message={error} type=\"error\" showIcon banner />\n      ) : (\n        <ProductListStyled>\n          {productList.map((product: Product) => (\n            <ProductListItem key={product._id} {...product} />\n          ))}\n        </ProductListStyled>\n      )}\n    </Spin>\n  );\n};\n\nexport default ProductList;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n} from '../slices/productList';\n\nexport const listProducts = () => async (dispatch: any) => {\n  try {\n    dispatch(productListRequest());\n\n    const { data } = await axios.get('/api/products');\n\n    dispatch(productListSuccess(data));\n  } catch (error) {\n    dispatch(\n      productListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// React\nimport React from 'react';\n\n// Styles\nimport { HomeScreenStyled } from './Styles';\n\n// Components\nimport ProductList from '../../components/product/product-list/ProductList';\n\ninterface Props {}\n\nconst HomeScreen: React.FC<Props> = () => {\n  return (\n    <HomeScreenStyled>\n      <h2>Product</h2>\n      <ProductList />\n    </HomeScreenStyled>\n  );\n};\n\nexport default HomeScreen;\n","import styled from 'styled-components';\n\nexport const ProductScreenStyled = styled.section`\n  & > h1 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ProductDetailsStyled = styled.section``;\n\nexport const Header = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Main = styled.div`\n  display: grid;\n  grid-template-columns: 35% 1fr 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Image = styled.div`\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Description = styled.div`\n  & > div {\n    padding: 10px 20px;\n  }\n\n  & > div:nth-child(1) {\n    font-size: 18px;\n    line-height: 35px;\n    padding: 0 20px 20px;\n  }\n\n  & > div:nth-child(2) {\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n\n    & > ul {\n      font-size: 15px;\n    }\n\n    & > p {\n      margin-left: 15px;\n    }\n  }\n\n  & > div:nth-child(3) {\n    border-bottom: 1px solid black;\n    font-size: 14px;\n  }\n\n  & > div:nth-child(4) {\n    font-size: 14px;\n  }\n`;\n\nexport const AddToCart = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(3) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(4) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\ninterface Props {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nexport const ButtonStyled = styled.button<Props>`\n  width: ${(p) => p.width};\n  height: ${(p) => p.height};\n  cursor: ${(p) => (p.loading ? 'not-allowed' : 'pointer')};\n  background-color: ${color.colorBlack};\n  color: ${color.colorWhite};\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n\n  & > div {\n    height: 100%;\n\n    & > .ant-spin-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100%;\n\n      & > span {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 0;\n\n        & > span {\n          margin: 0;\n        }\n\n        & > p {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n\n  &:disabled {\n    background-color: black;\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","// React\nimport React, { ButtonHTMLAttributes, forwardRef, Ref } from 'react';\n\n// Styles\nimport { ButtonStyled } from './Styles';\n\n// Components\nimport { Spin } from 'antd';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nconst Button = forwardRef(\n  (\n    {\n      children,\n      disabled,\n      height = '2.7rem',\n      width = '9rem',\n      loading = false,\n      ...props\n    }: Props,\n    ref: Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <ButtonStyled\n        ref={ref}\n        disabled={disabled}\n        height={height}\n        width={width}\n        loading={loading}\n        {...props}\n      >\n        <Spin spinning={loading} delay={500}>\n          <span>{children}</span>\n        </Spin>\n      </ButtonStyled>\n    );\n  }\n);\n\nexport default Button;\n","// React\nimport React, { useState } from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  ProductDetailsStyled,\n  Header,\n  Main,\n  Image,\n  Description,\n  AddToCart,\n} from './Styles';\n\n// Types\nimport { Product } from '../../../data/products';\n\n// Antd Components\nimport { InputNumber, Rate } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\nconst ProductDetails: React.FC<Product> = ({\n  _id,\n  name,\n  image,\n  description,\n  price,\n  countInStock,\n  rating,\n  numReviews,\n}) => {\n  // History\n  const history = useHistory();\n\n  const [quantity, setQuantity] = useState<number>(countInStock);\n\n  const onChange = (value: number) => setQuantity(value);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${_id}?qty=${quantity}`);\n  };\n  return (\n    <ProductDetailsStyled>\n      <Header>\n        <Button onClick={() => history.goBack()}>Go Back</Button>\n      </Header>\n\n      <Main>\n        <Image>\n          <img src={image} alt={name} />\n        </Image>\n\n        <Description>\n          <div>\n            <h2>{name}</h2>\n          </div>\n          <div>\n            <Rate disabled defaultValue={rating} />\n            <p>{numReviews} reviews</p>\n          </div>\n          <div>\n            <p>Price: ${price?.toFixed(2)}</p>\n          </div>\n          <div>\n            <p>{description}</p>\n          </div>\n        </Description>\n\n        <AddToCart>\n          <div>\n            <span>Price:</span>\n            <span>${price.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Status:</span>\n            <span>{countInStock > 0 ? 'In Stock' : 'Out of Stock'}</span>\n          </div>\n          <div>\n            <span>Quantity:</span>\n            <InputNumber\n              min={1}\n              max={countInStock}\n              defaultValue={countInStock}\n              onChange={onChange}\n            />\n          </div>\n          <div>\n            <Button\n              width=\"100%\"\n              disabled={countInStock === 0}\n              onClick={addToCartHandler}\n            >\n              Add to cart\n            </Button>\n          </div>\n        </AddToCart>\n      </Main>\n    </ProductDetailsStyled>\n  );\n};\n\nexport default ProductDetails;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProductDetails } from '../../actions/productDetails';\n\n// Redux - Slices\nimport {\n  selectError,\n  selectLoading,\n  selectProduct,\n} from '../../slices/productDetails';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport { ProductScreenStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Button, Spin } from 'antd';\n\n// Components\nimport ProductDetails from '../../components/product/product-details/ProductDetails';\n\ninterface Props {}\n\nconst ProductScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const product = useSelector(selectProduct);\n  const error = useSelector(selectError);\n\n  const { productID } = useParams() as { productID: string };\n\n  useEffect(() => {\n    dispatch(listProductDetails(productID));\n  }, [dispatch, productID]);\n\n  return (\n    <ProductScreenStyled>\n      <h1>Product Details</h1>\n      <Spin spinning={loading}>\n        {loading ? (\n          <Spin />\n        ) : error ? (\n          <Alert\n            message={error}\n            type=\"error\"\n            showIcon\n            banner\n            action={\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => history.push('/')}\n              >\n                Go Home\n              </Button>\n            }\n          />\n        ) : (\n          <ProductDetails {...product} />\n        )}\n      </Spin>\n    </ProductScreenStyled>\n  );\n};\n\nexport default ProductScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  productRequest,\n  productSuccess,\n  productFail,\n} from '../slices/productDetails';\n\nexport const listProductDetails = (productId: string) => async (\n  dispatch: any\n) => {\n  try {\n    dispatch(productRequest());\n\n    const { data } = await axios.get(`/api/products/${productId}`);\n\n    dispatch(productSuccess(data));\n  } catch (error) {\n    dispatch(\n      productFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  cartAddItem,\n  cartRemoveItem,\n  cartSaveShippingAddress,\n  cartSavePaymentMethod,\n  clearCart,\n  clearCartReadyForCheckoutProcess,\n} from '../slices/cart';\n\nexport const addToCart = (productId: string, qty: number) => async (\n  dispatch: any,\n  getState: any\n) => {\n  const { data } = await axios.get(`/api/products/${productId}`);\n\n  dispatch(\n    cartAddItem({\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    })\n  );\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (productId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch(cartRemoveItem(productId));\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data: {\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n}) => async (dispatch: any) => {\n  dispatch(cartSaveShippingAddress(data));\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data: string) => async (dispatch: any) => {\n  dispatch(cartSavePaymentMethod(data));\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n\nexport const clearAllCart = () => async (dispatch: any) => {\n  dispatch(clearCart());\n\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n};\n\nexport const readyForCheckoutProcess = () => async (dispatch: any) => {\n  dispatch(clearCartReadyForCheckoutProcess());\n\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n};\n","import styled from 'styled-components';\n\nexport const CartScreenStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  grid-column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Left = styled.div`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Right = styled.div``;\n","import styled from 'styled-components';\n\nexport const CartListStyled = styled.ul``;\n","import styled from 'styled-components';\n\nexport const CartListItemStyled = styled.li`\n  display: grid;\n  grid-template-columns: 15% 1fr 10% 15% 15%;\n  grid-column-gap: 20px;\n\n  padding: 10px 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    grid-template-columns: 15% 27% 18% 15% 1fr;\n    grid-column-gap: 10px;\n  }\n`;\n\nexport const Image = styled.div`\n  cursor: pointer;\n  overflow: hidden;\n\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Name = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > h3 {\n    font-size: 14px;\n    line-height: 18px;\n    cursor: pointer;\n  }\n\n  @media (max-width: 768px) {\n    & > h3 {\n      font-size: 11px;\n      line-height: 16px;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const Price = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Remove = styled.div`\n  padding: 15px;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart, removeFromCart } from '../../../../actions/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  CartListItemStyled,\n  Image,\n  Name,\n  Price,\n  Quantity,\n  Remove,\n} from './Styles';\n\n// Antd Icons\nimport { DeleteFilled } from '@ant-design/icons';\n\n// Antd Components\nimport { InputNumber } from 'antd';\n\n// Components\nimport Button from '../../../button/Button';\n\ninterface Props {\n  product: string;\n  name: string;\n  image: string;\n  price: number;\n  countInStock: number;\n  qty: number;\n}\n\nconst CartListItem: React.FC<Props> = ({\n  product,\n  name,\n  image,\n  price,\n  countInStock,\n  qty,\n}) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = (productId: string) => {\n    dispatch(removeFromCart(productId));\n  };\n\n  const goToProduct = () => {\n    history.push(`/product/${product}`);\n  };\n\n  return (\n    <CartListItemStyled>\n      <Image onClick={goToProduct}>\n        <img src={image} alt={name} />\n      </Image>\n\n      <Name>\n        <h3 onClick={goToProduct}>{name}</h3>\n      </Name>\n\n      <Price>\n        <p>${price.toFixed(2)}</p>\n      </Price>\n\n      <Quantity>\n        <InputNumber\n          min={1}\n          max={countInStock}\n          defaultValue={qty}\n          value={qty}\n          onChange={(currentQty: number) =>\n            dispatch(addToCart(product, currentQty))\n          }\n        />\n      </Quantity>\n\n      <Remove>\n        <Button\n          width=\"100%\"\n          height=\"100%\"\n          onClick={() => removeFromCartHandler(product)}\n        >\n          <DeleteFilled />\n        </Button>\n      </Remove>\n    </CartListItemStyled>\n  );\n};\n\nexport default CartListItem;\n","// React\nimport React from 'react';\n\n// Styles\nimport { CartListStyled } from './Styles';\n\n// Components\nimport CartListItem from './cart-list-item/CartListItem';\n\ninterface Props {\n  productList: {}[];\n}\n\nconst CartList: React.FC<Props> = ({ productList }) => {\n  return (\n    <CartListStyled>\n      {productList.map((product: any) => (\n        <CartListItem key={product.product} {...product} />\n      ))}\n    </CartListStyled>\n  );\n};\n\nexport default CartList;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  orderCreateRequest,\n  orderCreateSuccess,\n  orderCreateFail,\n  clearOrder,\n  orderDetailsRequest,\n  orderDetailsSuccess,\n  orderDetailsFail,\n  orderPayRequest,\n  orderPaySuccess,\n  orderPayFail,\n  orderListMyRequest,\n  orderListMySuccess,\n  orderListMyFail,\n} from '../slices/order';\n\nexport const createOrder = (order: any) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderCreateRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.post('/api/orders', order, config);\n\n    dispatch(orderCreateSuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderCreateFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const getOrderDetails = (orderId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${orderId}`, config);\n\n    dispatch(orderDetailsSuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const payOrder = (orderId: string, paymentResult: any) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderPayRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch(orderPaySuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderPayFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const listMyOrders = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(orderListMyRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch(orderListMySuccess(data));\n\n    localStorage.setItem('orders', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderListMyFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const clearAllOrder = () => async (dispatch: any) => {\n  dispatch(clearOrder());\n\n  localStorage.removeItem('order');\n  localStorage.removeItem('orders');\n};\n","import styled from 'styled-components';\n\nexport const CartSubtotalStyled = styled.div`\n  border: 1px solid black;\n`;\nexport const Summary = styled.div`\n  border-bottom: 1px solid black;\n  padding: 10px 20px;\n\n  & > h3 {\n    font-size: 25px;\n    text-transform: uppercase;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Checkout = styled.div`\n  padding: 10px 20px;\n\n  & > button {\n    text-transform: uppercase;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { clearAllOrder } from '../../../actions/order';\nimport { readyForCheckoutProcess } from '../../../actions/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { CartSubtotalStyled, Summary, Checkout } from './Styles';\n\n// Component\nimport Button from '../../button/Button';\n\ninterface Props {\n  quantityItems: number;\n  totalAmount: number;\n}\n\nconst CartSubtotal: React.FC<Props> = ({ quantityItems, totalAmount }) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const checkoutHandler = () => {\n    history.push(`/checkout-process`);\n    dispatch(clearAllOrder());\n    dispatch(readyForCheckoutProcess());\n  };\n\n  return (\n    <CartSubtotalStyled>\n      <Summary>\n        <h3>Subtotal ({quantityItems}) items</h3>\n        <p>${totalAmount.toFixed(2)}</p>\n      </Summary>\n\n      <Checkout>\n        <Button\n          width=\"100%\"\n          disabled={quantityItems === 0}\n          onClick={checkoutHandler}\n        >\n          Proceed to checkout\n        </Button>\n      </Checkout>\n    </CartSubtotalStyled>\n  );\n};\n\nexport default CartSubtotal;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart } from '../../actions/cart';\n\n// Redux - Slices\nimport { selectCartItems } from '../../slices/cart';\n\n// React Router\nimport { useHistory, useLocation, useParams } from 'react-router';\n\n// Styles\nimport { CartScreenStyled, Left, Right } from './Styles';\n\n// Antd Components\nimport { Alert, Button } from 'antd';\n\n// Components\nimport CartList from '../../components/cart/cart-list/CartList';\nimport CartSubtotal from '../../components/cart/cart-subtotal/CartSubtotal';\n\ninterface Props {}\n\nconst CartScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Location\n  const location = useLocation();\n\n  // Selector\n  const productList = useSelector(selectCartItems);\n\n  const { productID } = useParams() as { productID: string };\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  useEffect(() => {\n    if (productID) {\n      dispatch(addToCart(productID, qty));\n    }\n  }, [dispatch, productID, qty]);\n\n  const getQuantityItems = () =>\n    productList.reduce((acc, item: any) => acc + item.qty, 0);\n\n  const getTotalAmount = () =>\n    productList.reduce((acc, item: any) => acc + item.price * item.qty, 0);\n\n  return (\n    <CartScreenStyled>\n      <Left>\n        <h2>Shopping cart</h2>\n\n        {getQuantityItems() === 0 ? (\n          <Alert\n            message=\"Your cart is empty\"\n            type=\"error\"\n            showIcon\n            banner\n            action={\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => history.push('/')}\n              >\n                Go Home\n              </Button>\n            }\n          />\n        ) : (\n          <CartList productList={productList} />\n        )}\n      </Left>\n\n      <Right>\n        <CartSubtotal\n          quantityItems={getQuantityItems()}\n          totalAmount={getTotalAmount()}\n        />\n      </Right>\n    </CartScreenStyled>\n  );\n};\n\nexport default CartScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  userLoginFail,\n  userLoginRequest,\n  userLoginSuccess,\n  userLogout,\n  userRegisterFail,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  deleteAlert,\n} from '../slices/user';\nimport { clearAllOrder } from './order';\nimport { clearAllCart } from './cart';\n\nexport const deleteAlerts = () => (dispatch: any) => {\n  setTimeout(() => {\n    dispatch(deleteAlert());\n  }, 3000);\n};\n\nexport const login = ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userLoginRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userLoginFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('__paypal_storage__');\n  dispatch(userLogout());\n  dispatch(clearAllOrder());\n  dispatch(clearAllCart());\n};\n\nexport const register = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userRegisterRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userRegisterSuccess(data));\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userRegisterFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const getUserDetails = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/users/profile', config);\n\n    dispatch(userDetailsSuccess(data));\n  } catch (error) {\n    dispatch(\n      userDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const updateUserProfile = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userUpdateProfileRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      '/api/users/profile',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userUpdateProfileSuccess(data));\n    dispatch(getUserDetails());\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(deleteAlerts());\n  } catch (error) {\n    dispatch(\n      userUpdateProfileFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoginScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoRegister = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\nexport const InputStyled = styled.label`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n\n  & > p {\n    margin-bottom: 5px;\n  }\n\n  & > input {\n    outline: none;\n    width: 100%;\n    padding: 10px 0 10px 10px;\n  }\n`;\n\nexport const Error = styled.p`\n  margin-top: 6px;\n  color: ${color.colorBlack};\n`;\n","// React\nimport { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\n// Styles\nimport { InputStyled, Error } from './Styles';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  type?: string;\n}\n\nconst Input = forwardRef(\n  (\n    { label, error, type = 'text', ...props }: Props,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    return (\n      <InputStyled>\n        <p>{label}</p>\n        <input type={type} {...props} ref={ref} />\n        {error && <Error>{error}</Error>}\n      </InputStyled>\n    );\n  }\n);\n\nexport default Input;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { login } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorLogin,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { LoginScreenStyled, Form, GoRegister } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst LoginScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorLogin);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.goBack();\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleSignIn = handleSubmit(\n    (data: { email: string; password: string }) => {\n      dispatch(login(data));\n    }\n  );\n\n  return (\n    <LoginScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignIn}>\n          <h2>Sign in</h2>\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN IN</Button>\n\n          <GoRegister>\n            New Customer?\n            <span onClick={() => history.push('/register')}>Register</span>\n          </GoRegister>\n        </Form>\n      </Spin>\n    </LoginScreenStyled>\n  );\n};\n\nexport default LoginScreen;\n","import styled from 'styled-components';\n\nexport const RegisterScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoLogin = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { register as registerUser } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorRegister,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { RegisterScreenStyled, Form, GoLogin } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst RegisterScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorRegister);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(registerUser(data));\n    }\n  );\n\n  return (\n    <RegisterScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignUp}>\n          <h2>Sign up</h2>\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Your name\"\n            error={errors.name?.message}\n            ref={register({\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 20,\n                message: 'Name must not be greater than 20 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password_repeat\"\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            error={errors.password_repeat?.message}\n            ref={register({\n              validate: (value) =>\n                value === password.current || 'The passwords do not match',\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN UP</Button>\n\n          <GoLogin>\n            Already have an acount?\n            <span onClick={() => history.push('/login')}>Login</span>\n          </GoLogin>\n        </Form>\n      </Spin>\n    </RegisterScreenStyled>\n  );\n};\n\nexport default RegisterScreen;\n","import styled from 'styled-components';\n\nexport const ProfileScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getUserDetails, updateUserProfile } from '../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorDetails,\n  selectErrorUpdateDetails,\n  selectLoading,\n  selectProfile,\n  selectUserInfo,\n  selectSuccess,\n} from '../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ProfileScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../components/input/Input';\nimport Button from '../../components/button/Button';\n\ninterface Props {}\n\nconst ProfileScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n  const user = useSelector(selectProfile) as {\n    name: string;\n    email: string;\n  };\n\n  const success = useSelector(selectSuccess);\n  const errorDetails = useSelector(selectErrorDetails);\n  const errorUpdateDetails = useSelector(selectErrorUpdateDetails);\n  const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(updateUserProfile(data));\n    }\n  );\n\n  return (\n    <ProfileScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignUp}>\n          <h2>User profile</h2>\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            defaultValue={user && user.name}\n            placeholder=\"Your name\"\n            error={errors.name?.message}\n            ref={register({\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 20,\n                message: 'Name must not be greater than 20 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            defaultValue={user && user.email}\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Enter password\"\n            error={errors.password?.message}\n            ref={register({\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password_repeat\"\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            error={errors.password_repeat?.message}\n            ref={register({\n              validate: (value) =>\n                value === password.current || 'The passwords do not match',\n            })}\n          />\n          {errorDetails && (\n            <Alert message={errorDetails} type=\"error\" showIcon banner />\n          )}\n          {errorUpdateDetails && (\n            <Alert message={errorUpdateDetails} type=\"error\" showIcon banner />\n          )}\n          {success && (\n            <Alert message=\"Updated\" type=\"success\" showIcon banner />\n          )}\n          <Button width=\"100%\">UPDATE</Button>\n        </Form>\n      </Spin>\n    </ProfileScreenStyled>\n  );\n};\n\nexport default ProfileScreen;\n","import styled from 'styled-components';\n\nexport const CheckoutProcessScreenStyled = styled.section``;\n\nexport const Container = styled.div`\n  padding: 30px 0;\n`;\n","import styled from 'styled-components';\n\nexport const ShippingStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { saveShippingAddress } from '../../../actions/cart';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ShippingStyled, Form } from './Styles';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst Shipping: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      address: string;\n      city: string;\n      postalCode: string;\n      country: string;\n    }) => {\n      dispatch(saveShippingAddress(data));\n    }\n  );\n\n  return (\n    <ShippingStyled>\n      <Form onSubmit={handleSignUp}>\n        <h2>Shipping</h2>\n        <Input\n          name=\"address\"\n          label=\"Address\"\n          placeholder=\"Your Address\"\n          error={errors.address?.message}\n          ref={register({\n            required: 'Address is required',\n            minLength: {\n              value: 3,\n              message: 'Address must be at least 3 characters',\n            },\n            maxLength: {\n              value: 200,\n              message: 'Address must not be greater than 200 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"city\"\n          label=\"City\"\n          placeholder=\"Your City\"\n          error={errors.city?.message}\n          ref={register({\n            required: 'City is required',\n            minLength: {\n              value: 3,\n              message: 'City must be at least 3 characters',\n            },\n            maxLength: {\n              value: 100,\n              message: 'City must not be greater than 100 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"postalCode\"\n          label=\"Postal Code\"\n          placeholder=\"Your Postal Code\"\n          error={errors.postalCode?.message}\n          ref={register({\n            required: 'Postal Code is required',\n            minLength: {\n              value: 3,\n              message: 'Postal Code must be at least 3 characters',\n            },\n            maxLength: {\n              value: 15,\n              message: 'Postal Code must not be greater than 15 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"country\"\n          label=\"Country\"\n          placeholder=\"Your Country\"\n          error={errors.country?.message}\n          ref={register({\n            required: 'Country is required',\n            minLength: {\n              value: 3,\n              message: 'Country must be at least 3 characters',\n            },\n            maxLength: {\n              value: 100,\n              message: 'Country must not be greater than 100 characters',\n            },\n          })}\n        />\n        <Button width=\"100%\">CONTINUE</Button>\n      </Form>\n    </ShippingStyled>\n  );\n};\n\nexport default Shipping;\n","import styled from 'styled-components';\n\nexport const PaymentStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useState } from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { savePaymentMethod } from '../../../actions/cart';\n\n// Styles\nimport { PaymentStyled, Form } from './Styles';\n\n// Antd Components\nimport { Radio } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst Payment: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const [currentValue, setCurrentValue] = useState<string>();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    if (currentValue) {\n      dispatch(savePaymentMethod(currentValue));\n    }\n  };\n\n  return (\n    <PaymentStyled>\n      <Form onSubmit={handleSubmit}>\n        <h2>Payment method</h2>\n        <Radio.Group\n          onChange={(e) => setCurrentValue(e.target.value)}\n          value={currentValue}\n        >\n          <Radio value=\"Paypal\">Paypal</Radio>\n          <Radio value=\"Credit Card\">Credit Card</Radio>\n        </Radio.Group>\n        <Button width=\"100%\">CONTINUE</Button>\n      </Form>\n    </PaymentStyled>\n  );\n};\n\nexport default Payment;\n","import styled from 'styled-components';\n\nexport const PlaceOrderStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Details = styled.div`\n  width: 100%;\n\n  h2 {\n    font-size: 22px;\n    margin-bottom: 10px;\n    text-transform: uppercase;\n  }\n\n  & > div:first-child {\n    padding-top: 0px;\n  }\n\n  & > div {\n    padding-top: 10px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:last-child {\n    padding-bottom: 0px;\n    border-bottom: none;\n  }\n`;\n\nexport const OrderList = styled.ul`\n  padding: 0 25px;\n`;\n\nexport const OrderItem = styled.li`\n  display: grid;\n  grid-template-columns: 8% 1fr 30%;\n  grid-auto-rows: 30px;\n  grid-column-gap: 30px;\n  padding: 8px 20px;\n  border-bottom: 1px solid black;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const OrderImage = styled.div`\n  width: 100%;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const OrderName = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  & > p:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const OrderCant = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const OrderSummary = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    & > h2 {\n      text-transform: uppercase;\n    }\n\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2),\n  div:nth-child(3),\n  div:nth-child(4),\n  div:nth-child(5),\n  div:nth-child(6) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { createOrder } from '../../../actions/order';\n\n// Redux - Slices\nimport {\n  selectCartItems,\n  selectPaymentMethod,\n  selectShippingAddress,\n} from '../../../slices/cart';\nimport {\n  selectError,\n  selectLoading,\n  selectOrder,\n  selectSuccess,\n} from '../../../slices/order';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  PlaceOrderStyled,\n  Details,\n  OrderSummary,\n  OrderItem,\n  OrderList,\n  OrderImage,\n  OrderName,\n  OrderCant,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst PlaceOrder: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const products = useSelector(selectCartItems);\n  const shippingAddress = useSelector(selectShippingAddress) as {\n    address: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n  const paymentMethod = useSelector(selectPaymentMethod);\n  const order = useSelector(selectOrder) as {\n    _id: string;\n  };\n  const loading = useSelector(selectLoading);\n  const success = useSelector(selectSuccess);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success, order]);\n\n  const itemsPrice = products.reduce(\n    (acc, item: any) => acc + item.price * item.qty,\n    0\n  );\n\n  const shippingPrice = itemsPrice > 100 ? 0 : 100;\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2));\n  const totalPrice = Number(\n    (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\n  );\n\n  const placeOrderHanlder = () => {\n    dispatch(\n      createOrder({\n        orderItems: products,\n        shippingAddress,\n        paymentMethod,\n        itemsPrice,\n        taxPrice,\n        shippingPrice,\n        totalPrice,\n      })\n    );\n  };\n\n  return (\n    <Spin spinning={loading}>\n      <PlaceOrderStyled>\n        <Details>\n          <div>\n            <h2>Shipping</h2>\n            <p>\n              Address:{' '}\n              <span>\n                {shippingAddress.address}, {shippingAddress.city},{' '}\n                {shippingAddress.postalCode}, {shippingAddress.country}\n              </span>\n            </p>\n          </div>\n          <div>\n            <h2>Payment method</h2>\n            <p>\n              Method: <span>{paymentMethod}</span>\n            </p>\n          </div>\n          <div>\n            <h2>Order items</h2>\n            <OrderList>\n              {products.map((product: any) => (\n                <OrderItem key={product.product}>\n                  <OrderImage\n                    onClick={() => history.push(`/product/${product.product}`)}\n                  >\n                    <img src={product.image} alt={product.name} />\n                  </OrderImage>\n                  <OrderName>\n                    <p\n                      onClick={() =>\n                        history.push(`/product/${product.product}`)\n                      }\n                    >\n                      {product.name}\n                    </p>\n                  </OrderName>\n                  <OrderCant>\n                    <p>\n                      {product.qty} x ${product.price} = $\n                      {product.qty * product.price}\n                    </p>\n                  </OrderCant>\n                </OrderItem>\n              ))}\n            </OrderList>\n          </div>\n        </Details>\n\n        <OrderSummary>\n          <div>\n            <h2>Order Summary</h2>\n          </div>\n          <div>\n            <span>Items:</span>\n            <span>${itemsPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Shipping:</span>\n            <span>${shippingPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Tax:</span>\n            <span>${taxPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Total:</span>\n            <span>${totalPrice}</span>\n          </div>\n          <div>\n            <Button\n              width=\"100%\"\n              onClick={placeOrderHanlder}\n              disabled={products.length === 0}\n            >\n              Place order\n            </Button>\n          </div>\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n        </OrderSummary>\n      </PlaceOrderStyled>\n    </Spin>\n  );\n};\n\nexport default PlaceOrder;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\nimport { selectShippingAddress, selectPaymentMethod } from '../../slices/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { CheckoutProcessScreenStyled, Container } from './Styles';\n\n// Antd Components\nimport { Steps } from 'antd';\n\n// Components\nimport Shipping from '../../components/checkout-process/shipping/Shipping';\nimport Payment from '../../components/checkout-process/payment/Payment';\nimport PlaceOrder from '../../components/checkout-process/place-order/PlaceOrder';\n\ninterface Props {}\n\nconst CheckoutProcessScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n  const shippingAddress = useSelector(selectShippingAddress);\n  const paymentMethod = useSelector(selectPaymentMethod);\n\n  const { Step } = Steps;\n\n  const [currentProcess, setCurrentProcess] = useState(0);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (shippingAddress) {\n      setCurrentProcess(1);\n    }\n  }, [shippingAddress]);\n\n  useEffect(() => {\n    if (paymentMethod) {\n      setCurrentProcess(2);\n    }\n  }, [paymentMethod]);\n\n  const steps = [\n    {\n      title: 'Shipping',\n      content: <Shipping />,\n    },\n    {\n      title: 'Payment',\n      content: <Payment />,\n    },\n    {\n      title: 'Place Order',\n      content: <PlaceOrder />,\n    },\n  ];\n\n  return (\n    <CheckoutProcessScreenStyled>\n      <Steps\n        size=\"small\"\n        current={currentProcess}\n        className=\"site-navigation-steps\"\n      >\n        {steps.map((item) => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n\n      <Container>{steps[currentProcess].content}</Container>\n    </CheckoutProcessScreenStyled>\n  );\n};\n\nexport default CheckoutProcessScreen;\n","import styled from 'styled-components';\n\nexport const OrderScreenStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Details = styled.div`\n  width: 100%;\n\n  h2 {\n    font-size: 22px;\n    margin-bottom: 10px;\n    text-transform: uppercase;\n  }\n\n  & > div:first-child {\n    padding-top: 0px;\n  }\n\n  & > div {\n    padding-top: 10px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n\n    & > p {\n      margin-bottom: 8px;\n    }\n  }\n\n  & > div:last-child {\n    padding-bottom: 0px;\n    border-bottom: none;\n  }\n`;\n\nexport const OrderList = styled.ul`\n  padding: 0 25px;\n`;\n\nexport const OrderItem = styled.li`\n  display: grid;\n  grid-template-columns: 8% 1fr 30%;\n  grid-auto-rows: 30px;\n  grid-column-gap: 30px;\n  padding: 8px 20px;\n  border-bottom: 1px solid black;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const OrderImage = styled.div`\n  width: 100%;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const OrderName = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  & > p:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const OrderCant = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const OrderSummary = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    & > h2 {\n      text-transform: uppercase;\n    }\n\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2),\n  div:nth-child(3),\n  div:nth-child(4),\n  div:nth-child(5),\n  div:nth-child(6) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Axios\nimport axios from '../../axios/index';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getOrderDetails, payOrder } from '../../actions/order';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\n\nimport { selectError, selectLoading, selectOrder } from '../../slices/order';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport {\n  OrderScreenStyled,\n  Details,\n  OrderSummary,\n  OrderItem,\n  OrderList,\n  OrderImage,\n  OrderName,\n  OrderCant,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Component\nimport { PayPalButton } from 'react-paypal-button-v2';\n\ninterface Props {}\n\nconst OrderScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const order = useSelector(selectOrder) as {\n    _id: string;\n    taxPrice: number;\n    shippingPrice: number;\n    totalPrice: number;\n    isPaid: boolean;\n    isDelivered: boolean;\n    orderItems: [\n      {\n        _id: string;\n        image: string;\n        name: string;\n        price: number;\n        product: string;\n        qty: number;\n      }\n    ];\n    paymentMethod: string;\n    shippingAddress: {\n      address: string;\n      city: string;\n      postalCode: string;\n      country: string;\n    };\n    user: {\n      _id: string;\n      name: string;\n      email: string;\n    };\n    paidAt: string;\n    deliveredAt: string;\n  };\n  const userInfo = useSelector(selectUserInfo);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const { orderId } = useParams() as { orderId: string };\n\n  const [, setSdkReady] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  const addPayPalScript = async () => {\n    const { data: clientId } = await axios.get('/api/config/paypal');\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    dispatch(getOrderDetails(orderId));\n  }, [dispatch, orderId]);\n\n  useEffect(() => {\n    if (order) {\n      if (!order.isPaid) {\n        if (!(window as any).paypal) {\n          addPayPalScript();\n          console.log('paypal script added');\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [order]);\n\n  const itemsPrice =\n    order &&\n    order.orderItems.reduce((acc, item: any) => acc + item.price * item.qty, 0);\n\n  const handlerSuccessPayment = (paymentResult: any) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return (\n    <Spin spinning={loading}>\n      <OrderScreenStyled>\n        <Details>\n          <h2>ORDER {order && order._id}</h2>\n          <div>\n            <h2>Shipping</h2>\n            <p>Name: {order && order.user.name}</p>\n            <p>Email: {order && order.user.email}</p>\n            <p>\n              Address:{' '}\n              {order && (\n                <span>\n                  {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                  {order.shippingAddress.postalCode},{' '}\n                  {order.shippingAddress.country}\n                </span>\n              )}\n            </p>\n            {order && (\n              <>\n                {!order.isDelivered ? (\n                  <Alert message=\"Not Delivered\" type=\"error\" />\n                ) : (\n                  <Alert\n                    message={`Paided ${order.deliveredAt}`}\n                    type=\"success\"\n                  />\n                )}\n              </>\n            )}\n          </div>\n          <div>\n            <h2>Payment method</h2>\n            <p>\n              Method: <span>{order && order.paymentMethod}</span>\n            </p>\n            {order && (\n              <>\n                {!order.isPaid ? (\n                  <Alert message=\"Not Paid\" type=\"error\" />\n                ) : (\n                  <Alert message={`Paid on ${order.paidAt}`} type=\"success\" />\n                )}\n              </>\n            )}\n          </div>\n          <div>\n            <h2>Order items</h2>\n            <OrderList>\n              {order &&\n                order.orderItems.map((product: any) => (\n                  <OrderItem key={product.product}>\n                    <OrderImage\n                      onClick={() =>\n                        history.push(`/product/${product.product}`)\n                      }\n                    >\n                      <img src={product.image} alt={product.name} />\n                    </OrderImage>\n                    <OrderName>\n                      <p\n                        onClick={() =>\n                          history.push(`/product/${product.product}`)\n                        }\n                      >\n                        {product.name}\n                      </p>\n                    </OrderName>\n                    <OrderCant>\n                      <p>\n                        {product.qty} x ${product.price} = $\n                        {product.qty * product.price}\n                      </p>\n                    </OrderCant>\n                  </OrderItem>\n                ))}\n            </OrderList>\n          </div>\n        </Details>\n\n        <OrderSummary>\n          <div>\n            <h2>Order Summary</h2>\n          </div>\n          <div>\n            <span>Items:</span>\n            <span>${itemsPrice}</span>\n          </div>\n          <div>\n            <span>Shipping:</span>\n            <span>${order && order.shippingPrice}</span>\n          </div>\n          <div>\n            <span>Tax:</span>\n            <span>${order && order.taxPrice}</span>\n          </div>\n          <div>\n            <span>Total:</span>\n            <span>${order && order.totalPrice}</span>\n          </div>\n          {order && !order.isPaid && (\n            <div>\n              <PayPalButton\n                amount={order && order.totalPrice}\n                onSuccess={handlerSuccessPayment}\n              />\n            </div>\n          )}\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n        </OrderSummary>\n      </OrderScreenStyled>\n    </Spin>\n  );\n};\n\nexport default OrderScreen;\n","import styled from 'styled-components';\n\nexport const MyOrdersScreenStyled = styled.section`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const OrderListStyled = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const OrderListItemStyled = styled.li`\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Header = styled.div`\n  padding-bottom: 10px;\n\n  & > h3 {\n    font-weight: bold;\n    font-size: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const Body = styled.div`\n  & > p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > p:first-child {\n    margin-bottom: 5px;\n  }\n\n  & > p > span {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0;\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { OrderListItemStyled, Header, Body, Footer } from './Styles';\n\n// Antd Components\nimport { Alert } from 'antd';\n\n// Components\nimport Button from '../../../button/Button';\n\ninterface Props {\n  _id: string;\n  createdAt: string;\n  totalPrice: number;\n  isPaid: boolean;\n  isDelivered: boolean;\n}\n\nconst OrderListItem: React.FC<Props> = ({\n  _id,\n  createdAt,\n  totalPrice,\n  isPaid,\n  isDelivered,\n}) => {\n  // History\n  const history = useHistory();\n\n  return (\n    <OrderListItemStyled>\n      <Header>\n        <h3>{_id && _id}</h3>\n      </Header>\n      <Body>\n        <p>\n          <span>Date:</span> {createdAt && createdAt.substring(0, 10)}\n        </p>\n        <p>\n          <span>Total Price:</span> ${totalPrice && totalPrice}\n        </p>\n      </Body>\n      <Footer>\n        {isPaid && isPaid ? (\n          <Alert message=\"Paid\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not paid\" type=\"error\" showIcon />\n        )}\n        {isDelivered && isDelivered ? (\n          <Alert message=\"Delivered\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not delivered\" type=\"error\" showIcon />\n        )}\n      </Footer>\n      <Button width=\"100%\" onClick={() => history.push(`order/${_id}`)}>\n        Details\n      </Button>\n    </OrderListItemStyled>\n  );\n};\n\nexport default OrderListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listMyOrders } from '../../../actions/order';\n\n// Redux - Slices\nimport {\n  selectError,\n  selectLoading,\n  selectOrders,\n} from '../../../slices/order';\n\n// Styles\nimport { OrderListStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport OrderListItem from './order-list-item/OrderListItem';\n\ninterface Props {}\n\nconst OrderList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const orders = useSelector(selectOrders);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      <OrderListStyled>\n        {orders &&\n          orders.map((order: any) => (\n            <OrderListItem key={order._id} {...order} />\n          ))}\n      </OrderListStyled>\n      {orders && error && (\n        <Alert message={error} type=\"error\" showIcon banner />\n      )}\n    </Spin>\n  );\n};\n\nexport default OrderList;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { MyOrdersScreenStyled } from './Styles';\n\n// Components\nimport OrderList from '../../components/my-orders/order-list/OrderList';\n\ninterface Props {}\n\nconst MyOrdersScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  return (\n    <MyOrdersScreenStyled>\n      <h2>My Orders</h2>\n      <OrderList />\n    </MyOrdersScreenStyled>\n  );\n};\n\nexport default MyOrdersScreen;\n","// React\nimport React from 'react';\n\n// React Router\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// Components\nimport HomeScreen from '../pages/home/HomeScreen';\nimport ProductScreen from '../pages/product/ProductScreen';\nimport CartScreen from '../pages/cart/CartScreen';\nimport LoginScreen from '../pages/auth/login/LoginScreen';\nimport RegisterScreen from '../pages/auth/register/RegisterScreen';\nimport ProfileScreen from '../pages/profile/ProfileScreen';\nimport CheckoutProcessScreen from '../pages/checkout-process/CheckoutProcessScreen';\nimport OrderScreen from '../pages/order/OrderScreen';\nimport MyOrdersScreen from '../pages/my-orders/MyOrdersScreen';\n\ninterface Props {}\n\nconst Routes: React.FC<Props> = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomeScreen} />\n      <Route exact path=\"/product/:productID\" component={ProductScreen} />\n      <Route exact path=\"/cart/:productID?\" component={CartScreen} />\n      <Route exact path=\"/login\" component={LoginScreen} />\n      <Route exact path=\"/register\" component={RegisterScreen} />\n      <Route exact path=\"/profile\" component={ProfileScreen} />\n      <Route exact path=\"/checkout-process\" component={CheckoutProcessScreen} />\n      <Route exact path=\"/myorders\" component={MyOrdersScreen} />\n      <Route exact path=\"/order/:orderId\" component={OrderScreen} />\n\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    margin: 0;\n    list-style: none;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0px;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const Container = styled.main`\n  max-width: 1000px;\n  margin: 30px auto;\n  background-color: ${color.colorWhite};\n\n  @media (max-width: 1000px) {\n    padding: 0 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.colorBlack};\n  height: 72px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1000px;\n  width: 1000px;\n  height: 40px;\n\n  @media (max-width: 1000px) {\n    padding: 0 20px;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\n\nexport const Logo = styled.div`\n  & > a > h2 {\n    color: ${color.colorWhite};\n  }\n`;\n\nexport const Search = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n\n  & > label {\n    height: 100%;\n    display: inline-block;\n\n    & > input {\n      height: 100%;\n      max-width: 200px;\n      width: 300px;\n      padding: 0px 0 0px 15px;\n      outline: none;\n      border-radius: 4px;\n      margin-right: 10px;\n      border: none;\n    }\n  }\n\n  & > button {\n    background-color: ${color.colorWhite};\n    color: ${color.colorBlack};\n    width: auto;\n    padding: 0 20px;\n    height: 100%;\n  }\n\n  @media (max-width: 1000px) {\n    display: none;\n  }\n`;\n\nexport const DrawerStyled = styled.div`\n  display: none;\n\n  & > button {\n    background: white;\n    color: black;\n    width: auto;\n    padding: 0 20px;\n  }\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nexport const Navbar = styled.nav`\n  height: 100%;\n  display: flex;\n\n  button {\n    height: 100%;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nexport const Profile = styled.div`\n  & > button:first-child {\n    margin-right: 10px;\n  }\n\n  & > button {\n    background-color: ${color.colorWhite};\n    color: ${color.colorBlack};\n  }\n`;\n","// React\nimport React, { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { logout } from '../../../actions/user';\n\n// Redux - Slices\nimport { selectLoading, selectUserInfo } from '../../../slices/user';\n\n// React Router\nimport { NavLink, useHistory } from 'react-router-dom';\n\n// Styles\nimport {\n  HeaderStyled,\n  Logo,\n  Search,\n  Navbar,\n  Profile,\n  HeaderContainer,\n  DrawerStyled,\n} from './Styles';\n\n// Antd Icons\nimport {\n  DownOutlined,\n  ProfileOutlined,\n  LogoutOutlined,\n  ShoppingCartOutlined,\n  SearchOutlined,\n  MenuOutlined,\n  DatabaseOutlined,\n} from '@ant-design/icons';\n\n// Antd Components\nimport { Drawer, Dropdown, Menu } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item\n        key=\"1\"\n        icon={<ProfileOutlined />}\n        onClick={() => history.push('/profile')}\n      >\n        Profile\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        key=\"2\"\n        icon={<DatabaseOutlined />}\n        onClick={() => history.push('/myorders')}\n      >\n        My orders\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"3\" icon={<LogoutOutlined />} onClick={handleLogout}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <HeaderContainer>\n        <Logo>\n          <NavLink to=\"/\">\n            <h2>Awesome Shop</h2>\n          </NavLink>\n        </Logo>\n\n        <Search>\n          <label>\n            <input type=\"text\" placeholder=\"Search\" />\n          </label>\n          <Button>\n            <SearchOutlined />\n          </Button>\n        </Search>\n\n        {/* MOBILE */}\n        <DrawerStyled>\n          <Button onClick={showDrawer}>\n            <MenuOutlined />\n          </Button>\n\n          <Drawer\n            title={userInfo?.name}\n            placement=\"left\"\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n          >\n            <Menu onClick={onClose}>\n              {userInfo ? (\n                <>{menu}</>\n              ) : (\n                <>\n                  <Menu.Item key=\"1\">\n                    <Button width=\"100%\" onClick={() => history.push('/login')}>\n                      Sign in\n                    </Button>\n                  </Menu.Item>\n                  <Menu.Divider />\n                  <Menu.Item key=\"2\">\n                    <Button\n                      width=\"100%\"\n                      onClick={() => history.push('/register')}\n                    >\n                      Sign up\n                    </Button>\n                  </Menu.Item>\n                </>\n              )}\n              <Menu.Item key=\"3\">\n                <Button width=\"100%\" onClick={() => history.push('/cart')}>\n                  <p>Cart</p>\n                  <ShoppingCartOutlined />\n                </Button>\n              </Menu.Item>\n            </Menu>\n          </Drawer>\n        </DrawerStyled>\n\n        {/* DESKTOP */}\n        <Navbar>\n          <Button onClick={() => history.push('/cart')}>\n            <p>Cart</p>\n            <ShoppingCartOutlined />\n          </Button>\n          <Profile>\n            {userInfo ? (\n              <Dropdown overlay={menu} trigger={['click']}>\n                <Button loading={loading} disabled={loading}>\n                  <p>{userInfo.name}</p> <DownOutlined />\n                </Button>\n              </Dropdown>\n            ) : (\n              <>\n                <Button onClick={() => history.push('/login')}>Sign in</Button>\n                <Button onClick={() => history.push('/register')}>\n                  Sign up\n                </Button>\n              </>\n            )}\n          </Profile>\n        </Navbar>\n      </HeaderContainer>\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","// React\nimport React from 'react';\n\n// Styles\nimport { Container } from './Styles';\n\n// Components\nimport Header from '../header/Header';\n\ninterface Props {}\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <>\n      <Header />\n\n      <Container>{children}</Container>\n    </>\n  );\n};\n\nexport default Layout;\n","// React\nimport React from 'react';\n\n// React Router\nimport { HashRouter } from 'react-router-dom';\nimport Routes from './routes/Routes';\n\n// Styles\nimport 'antd/dist/antd.css';\nimport GlobalStyle from './theme/globalStyle';\n\n// Components\nimport Layout from './components/layout/layout/Layout';\n\ninterface Props {}\n\nconst App: React.FC<Props> = () => {\n  return (\n    <HashRouter>\n      <GlobalStyle />\n      <Layout>\n        <Routes />\n      </Layout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\n// Components\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}