{"version":3,"sources":["slices/productList.ts","slices/productDetails.ts","slices/cart.ts","slices/user.ts","store/configureStore.ts","pages/home/Styles.ts","axios/index.ts","components/product/product-list/Styles.ts","theme/variables.ts","components/product/product-list/product-list-item/Styles.ts","components/product/product-list/product-list-item/ProductListItem.tsx","components/product/product-list/ProductList.tsx","actions/productList.ts","pages/home/HomeScreen.tsx","pages/product/Styles.ts","components/product/product-details/Styles.ts","components/button/Styles.ts","components/button/Button.tsx","components/product/product-details/ProductDetails.tsx","pages/product/ProductScreen.tsx","actions/productDetails.ts","actions/cart.ts","pages/cart/Styles.ts","components/cart/cart-list/Styles.ts","components/cart/cart-list/cart-list-item/Styles.ts","components/cart/cart-list/cart-list-item/CartListItem.tsx","components/cart/cart-list/CartList.tsx","components/cart/cart-subtotal/Styles.ts","components/cart/cart-subtotal/CartSubtotal.tsx","pages/cart/CartScreen.tsx","actions/user.ts","pages/auth/login/Styles.ts","components/input/Styles.ts","components/input/Input.tsx","pages/auth/login/LoginScreen.tsx","pages/auth/register/Styles.ts","pages/auth/register/RegisterScreen.tsx","pages/profile/Styles.ts","pages/profile/ProfileScreen.tsx","routes/Routes.tsx","theme/globalStyle.ts","components/layout/layout/Styles.ts","components/layout/header/Styles.ts","components/layout/header/Header.tsx","components/layout/layout/Layout.tsx","App.tsx","index.tsx"],"names":["productListSlice","createSlice","name","initialState","products","loading","error","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","actions","selectProducts","productList","selectLoading","selectError","productDetailsSlice","product","_id","image","description","brand","category","price","countInStock","rating","numReviews","reviews","productRequest","productSuccess","productFail","selectProduct","productDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartItems","cartSlice","cartAddItem","item","existItem","find","x","map","push","cartRemoveItem","filter","selectCartItems","cart","userInfoFromStorage","user","userInfo","success","errors","errorLogin","errorRegister","errorDetails","errorUpdateDetails","userSlice","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userRegisterRequest","userRegisterSuccess","userRegisterFail","userDetailsRequest","userDetailsSuccess","userDetailsFail","userUpdateProfileRequest","userUpdateProfileSuccess","userUpdateProfileFail","userUpdateProfileReset","deleteAlert","selectUser","selectUserInfo","selectSuccess","selectErrorLogin","selectErrorRegister","selectErrorDetails","selectErrorUpdateDetails","store","configureStore","reducer","HomeScreenStyled","styled","section","axios","create","baseURL","ProductListStyled","div","color","ProductListItemStyled","ProductImage","figure","ProductDetails","ProductListItem","history","useHistory","onClick","src","alt","allowHalf","disabled","defaultValue","toFixed","ProductList","dispatch","useDispatch","useSelector","useEffect","a","get","data","response","message","spinning","delay","type","showIcon","banner","HomeScreen","ProductScreenStyled","ProductDetailsStyled","Header","Main","Image","Description","AddToCart","ButtonStyled","button","p","width","height","Button","forwardRef","ref","children","props","useState","quantity","setQuantity","goBack","min","max","onChange","value","ProductScreen","productID","useParams","productId","size","addToCart","qty","getState","setItem","stringify","CartScreenStyled","Left","Right","CartListStyled","ul","CartListItemStyled","li","Name","Price","Quantity","Remove","CartListItem","removeFromCartHandler","removeFromCart","goToProduct","currentQty","DeleteFilled","CartList","CartSubtotalStyled","Summary","Checkout","CartSubtotal","quantityItems","totalAmount","CartScreen","location","useLocation","search","Number","split","getQuantityItems","reduce","acc","deleteAlerts","setTimeout","getUserDetails","token","config","headers","Authorization","LoginScreenStyled","Form","form","GoRegister","InputStyled","label","Error","Input","LoginScreen","useForm","register","handleSignIn","handleSubmit","email","password","post","login","onSubmit","placeholder","required","pattern","minLength","maxLength","RegisterScreenStyled","GoLogin","RegisterScreen","watch","useRef","current","handleSignUp","registerUser","password_repeat","validate","ProfileScreenStyled","ProfileScreen","put","updateUserProfile","Routes","exact","path","component","to","GlobalStyle","createGlobalStyle","Container","main","HeaderStyled","header","HeaderContainer","Logo","Search","DrawerStyled","Navbar","nav","Profile","menu","Item","icon","ProfileOutlined","Divider","LogoutOutlined","removeItem","visible","setVisible","onClose","SearchOutlined","MenuOutlined","title","placement","closable","ShoppingCartOutlined","overlay","trigger","DownOutlined","Layout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7ea7ccd.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface ProductListState {\n  products: [];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ProductListState = {\n  products: [],\n  loading: true,\n  error: null,\n};\n\nexport const productListSlice = createSlice({\n  name: 'productList',\n  initialState,\n  reducers: {\n    productListRequest: (state) => {\n      state.products = [];\n      state.loading = true;\n      state.error = null;\n    },\n    productListSuccess: (state, action) => {\n      state.products = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    productListFail: (state, action) => {\n      state.products = [];\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n} = productListSlice.actions;\n\nexport const selectProducts = (state: RootState) => state.productList.products;\nexport const selectLoading = (state: RootState) => state.productList.loading;\nexport const selectError = (state: RootState) => state.productList.error;\n\nexport default productListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface Product {\n  _id: string;\n  name: string;\n  image: string;\n  description: string;\n  brand: string;\n  category: string;\n  price: number;\n  countInStock: number;\n  rating: number;\n  numReviews: number;\n  reviews: [];\n}\n\ninterface ProductDetailsState {\n  product: Product;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ProductDetailsState = {\n  product: {\n    _id: '',\n    name: '',\n    image: '',\n    description: '',\n    brand: '',\n    category: '',\n    price: 0,\n    countInStock: 0,\n    rating: 0,\n    numReviews: 0,\n    reviews: [],\n  },\n  loading: true,\n  error: null,\n};\n\nexport const productDetailsSlice = createSlice({\n  name: 'productDetails',\n  initialState,\n  reducers: {\n    productRequest: (state) => {\n      state.loading = true;\n    },\n    productSuccess: (state, action) => {\n      state.product = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    productFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n      state.product = {\n        _id: '',\n        name: '',\n        image: '',\n        description: '',\n        brand: '',\n        category: '',\n        price: 0,\n        countInStock: 0,\n        rating: 0,\n        numReviews: 0,\n        reviews: [],\n      };\n    },\n  },\n});\n\nexport const {\n  productRequest,\n  productSuccess,\n  productFail,\n} = productDetailsSlice.actions;\n\nexport const selectProduct = (state: RootState) => state.productDetails.product;\nexport const selectLoading = (state: RootState) => state.productDetails.loading;\nexport const selectError = (state: RootState) => state.productDetails.error;\n\nexport default productDetailsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems') || '{}')\n  : [];\n\ninterface CartState {\n  cartItems: object[];\n}\n\nconst initialState: CartState = {\n  cartItems: cartItemsFromStorage,\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    cartAddItem: (state, action) => {\n      const item = action.payload;\n\n      const existItem: any = state.cartItems.find(\n        (x: any) => x.product === item.product\n      );\n\n      if (existItem) {\n        state.cartItems = state.cartItems.map((x: any) =>\n          x.product === existItem.product ? item : x\n        ) as [];\n      } else {\n        state.cartItems.push(item);\n      }\n    },\n    cartRemoveItem: (state, action) => {\n      state.cartItems = state.cartItems.filter(\n        (x: any) => x.product !== action.payload\n      );\n    },\n  },\n});\n\nexport const { cartAddItem, cartRemoveItem } = cartSlice.actions;\n\nexport const selectCartItems = (state: RootState) => state.cart.cartItems;\n\nexport default cartSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '{}')\n  : null;\n\ninterface UserState {\n  user: {} | null;\n  userInfo: {} | null;\n  loading: boolean;\n  success: boolean;\n  errors: {\n    errorLogin: null | string;\n    errorRegister: null | string;\n    errorDetails: null | string;\n    errorUpdateDetails: null | string;\n  };\n}\n\nconst initialState: UserState = {\n  user: null,\n  userInfo: userInfoFromStorage,\n  loading: false,\n  success: false,\n  errors: {\n    errorLogin: null,\n    errorRegister: null,\n    errorDetails: null,\n    errorUpdateDetails: null,\n  },\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    // LOGIN\n    userLoginRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userLoginSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorLogin = null;\n      state.loading = false;\n    },\n    userLoginFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorLogin = action.payload;\n      state.loading = false;\n    },\n    userLogout: (state) => {\n      state.user = null;\n      state.userInfo = null;\n      state.loading = false;\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n    },\n    // REGISTER\n    userRegisterRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userRegisterSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorRegister = null;\n      state.loading = false;\n    },\n    userRegisterFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorRegister = action.payload;\n      state.loading = false;\n    },\n    // DETAILS\n    userDetailsRequest: (state) => {\n      state.user = null;\n      state.loading = true;\n    },\n    userDetailsSuccess: (state, action) => {\n      state.user = action.payload;\n      state.errors.errorDetails = null;\n      state.loading = false;\n    },\n    userDetailsFail: (state, action) => {\n      state.user = null;\n      state.errors.errorDetails = action.payload;\n      state.loading = false;\n    },\n    // UPDATE\n    userUpdateProfileRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n    },\n    userUpdateProfileSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.success = true;\n      state.errors.errorUpdateDetails = null;\n      state.loading = false;\n    },\n    userUpdateProfileFail: (state, action) => {\n      state.success = false;\n      state.errors.errorUpdateDetails = action.payload;\n      state.loading = false;\n    },\n    userUpdateProfileReset: (state, action) => {\n      state.errors.errorUpdateDetails = action.payload;\n      state.loading = false;\n    },\n    // DELETE ALERTS\n    deleteAlert: (state) => {\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n      state.errors.errorUpdateDetails = null;\n    },\n  },\n});\n\nexport const {\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginFail,\n  userLogout,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterFail,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  userUpdateProfileReset,\n  deleteAlert,\n} = userSlice.actions;\n\nexport const selectUser = (state: RootState) => state.user.user;\nexport const selectUserInfo = (state: RootState) => state.user.userInfo;\nexport const selectLoading = (state: RootState) => state.user.loading;\nexport const selectSuccess = (state: RootState) => state.user.success;\n\nexport const selectErrorLogin = (state: RootState) =>\n  state.user.errors.errorLogin;\nexport const selectErrorRegister = (state: RootState) =>\n  state.user.errors.errorRegister;\nexport const selectErrorDetails = (state: RootState) =>\n  state.user.errors.errorDetails;\nexport const selectErrorUpdateDetails = (state: RootState) =>\n  state.user.errors.errorUpdateDetails;\n\nexport default userSlice.reducer;\n","// Redux\nimport { configureStore } from '@reduxjs/toolkit';\n\n// Redux - Slices\nimport { productListSlice } from '../slices/productList';\nimport { productDetailsSlice } from '../slices/productDetails';\nimport { cartSlice } from '../slices/cart';\nimport { userSlice } from '../slices/user';\n\nconst store = configureStore({\n  reducer: {\n    productList: productListSlice.reducer,\n    productDetails: productDetailsSlice.reducer,\n    cart: cartSlice.reducer,\n    user: userSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;\n","import styled from 'styled-components';\n\nexport const HomeScreenStyled = styled.section`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","// Axios\nimport axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://shop-backend-api.herokuapp.com',\n});\n","import styled from 'styled-components';\n\nexport const ProductListStyled = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","export const color = {\n  // colorPrimary: '#181b32',\n  colorPrimary: 'red', // test //\n\n  // colorGreyLight1: '#E8EAF0',\n  colorGreyLight1: 'blue', // test //\n  // colorGreyLight2: '#F6F7F9',\n  colorGreyLight2: 'peru', // test //\n  // colorGreyLight3: '#8D8D9D',\n  colorGreyLight3: 'green', // test //\n  // colorGreyLight4: '#DFE1E6',\n  colorGreyLight4: 'yellow', // test //\n  // colorGreyLight5: '#878FB8',\n  colorGreyLight5: 'purple', // test //\n\n  colorWhite: '#fff',\n  colorBlack: '#000',\n};\n","import styled from 'styled-components';\nimport { color } from '../../../../theme/variables';\n\nexport const ProductListItemStyled = styled.div`\n  border: 1px solid ${color.colorBlack};\n  padding: 10px;\n`;\n\nexport const ProductImage = styled.figure`\n  margin-bottom: 20px;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`;\n\nexport const ProductDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > p {\n    font-size: 16px;\n    line-height: 20px;\n    margin-bottom: 10px;\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  & > div {\n    & > ul {\n      font-size: 12px;\n    }\n    & > span {\n      margin-left: 10px;\n      font-size: 12px;\n    }\n  }\n\n  & > h3 {\n    display: inline-block;\n    margin-top: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { ProductListItemStyled, ProductDetails, ProductImage } from './Styles';\n\n// Types\nimport { Product } from '../../../../data/products';\n\n// Antd Components\nimport { Rate } from 'antd';\n\nconst ProductListItem: React.FC<Product> = ({\n  _id,\n  name,\n  image,\n  price,\n  rating,\n  numReviews,\n}) => {\n  const history = useHistory();\n\n  const productDetails = () => {\n    history.push(`/product/${_id}`);\n  };\n  return (\n    <ProductListItemStyled>\n      <ProductImage onClick={productDetails}>\n        <img src={image} alt={name} />\n      </ProductImage>\n\n      <ProductDetails>\n        <p onClick={productDetails}>{name}</p>\n        <div>\n          <Rate allowHalf disabled defaultValue={rating} />\n          <span>{numReviews} reviews</span>\n        </div>\n        <h3>${price?.toFixed(2)}</h3>\n      </ProductDetails>\n    </ProductListItemStyled>\n  );\n};\n\nexport default ProductListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProducts } from '../../../actions/productList';\n\n// Redux - Slices\nimport {\n  selectProducts,\n  selectLoading,\n  selectError,\n} from '../../../slices/productList';\n\n// Styles\nimport { ProductListStyled } from './Styles';\n\n// Types\nimport { Product } from '../../../data/products';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport ProductListItem from './product-list-item/ProductListItem';\n\ninterface Props {}\n\nconst ProductList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const productList = useSelector(selectProducts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading} delay={0}>\n      {loading ? (\n        <Spin />\n      ) : error ? (\n        <Alert message={error} type=\"error\" showIcon banner />\n      ) : (\n        <ProductListStyled>\n          {productList.map((product: Product) => (\n            <ProductListItem key={product._id} {...product} />\n          ))}\n        </ProductListStyled>\n      )}\n    </Spin>\n  );\n};\n\nexport default ProductList;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n} from '../slices/productList';\n\nexport const listProducts = () => async (dispatch: any) => {\n  try {\n    dispatch(productListRequest());\n\n    const { data } = await axios.get('/api/products');\n\n    dispatch(productListSuccess(data));\n  } catch (error) {\n    dispatch(\n      productListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// React\nimport React from 'react';\n\n// Styles\nimport { HomeScreenStyled } from './Styles';\n\n// Components\nimport ProductList from '../../components/product/product-list/ProductList';\n\ninterface Props {}\n\nconst HomeScreen: React.FC<Props> = () => {\n  return (\n    <HomeScreenStyled>\n      <h2>Product</h2>\n      <ProductList />\n    </HomeScreenStyled>\n  );\n};\n\nexport default HomeScreen;\n","import styled from 'styled-components';\n\nexport const ProductScreenStyled = styled.section`\n  & > h1 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ProductDetailsStyled = styled.section``;\n\nexport const Header = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Main = styled.div`\n  display: grid;\n  grid-template-columns: 35% 1fr 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Image = styled.div`\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Description = styled.div`\n  & > div {\n    padding: 10px 20px;\n  }\n\n  & > div:nth-child(1) {\n    font-size: 18px;\n    line-height: 35px;\n    padding: 0 20px 20px;\n  }\n\n  & > div:nth-child(2) {\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n\n    & > ul {\n      font-size: 15px;\n    }\n\n    & > p {\n      margin-left: 15px;\n    }\n  }\n\n  & > div:nth-child(3) {\n    border-bottom: 1px solid black;\n    font-size: 14px;\n  }\n\n  & > div:nth-child(4) {\n    font-size: 14px;\n  }\n`;\n\nexport const AddToCart = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(3) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(4) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\ninterface Props {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nexport const ButtonStyled = styled.button<Props>`\n  width: ${(p) => p.width};\n  height: ${(p) => p.height};\n  cursor: ${(p) => (p.loading ? 'not-allowed' : 'pointer')};\n  background-color: ${color.colorBlack};\n  color: ${color.colorWhite};\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n\n  & > div {\n    height: 100%;\n\n    & > .ant-spin-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100%;\n\n      & > span {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 0;\n\n        & > span {\n          margin: 0;\n        }\n\n        & > p {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n\n  &:disabled {\n    background-color: black;\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","// React\nimport React, { ButtonHTMLAttributes, forwardRef, Ref } from 'react';\n\n// Styles\nimport { ButtonStyled } from './Styles';\n\n// Components\nimport { Spin } from 'antd';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nconst Button = forwardRef(\n  (\n    {\n      children,\n      disabled,\n      height = '2.7rem',\n      width = '9rem',\n      loading = false,\n      ...props\n    }: Props,\n    ref: Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <ButtonStyled\n        ref={ref}\n        disabled={disabled}\n        height={height}\n        width={width}\n        loading={loading}\n        {...props}\n      >\n        <Spin spinning={loading} delay={500}>\n          <span>{children}</span>\n        </Spin>\n      </ButtonStyled>\n    );\n  }\n);\n\nexport default Button;\n","// React\nimport React, { useState } from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  ProductDetailsStyled,\n  Header,\n  Main,\n  Image,\n  Description,\n  AddToCart,\n} from './Styles';\n\n// Types\nimport { Product } from '../../../data/products';\n\n// Antd Components\nimport { InputNumber, Rate } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\nconst ProductDetails: React.FC<Product> = ({\n  _id,\n  name,\n  image,\n  description,\n  price,\n  countInStock,\n  rating,\n  numReviews,\n}) => {\n  // History\n  const history = useHistory();\n\n  const [quantity, setQuantity] = useState<number>(countInStock);\n\n  const onChange = (value: number) => setQuantity(value);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${_id}?qty=${quantity}`);\n  };\n  return (\n    <ProductDetailsStyled>\n      <Header>\n        <Button onClick={() => history.goBack()}>Go Back</Button>\n      </Header>\n\n      <Main>\n        <Image>\n          <img src={image} alt={name} />\n        </Image>\n\n        <Description>\n          <div>\n            <h2>{name}</h2>\n          </div>\n          <div>\n            <Rate disabled defaultValue={rating} />\n            <p>{numReviews} reviews</p>\n          </div>\n          <div>\n            <p>Price: ${price?.toFixed(2)}</p>\n          </div>\n          <div>\n            <p>{description}</p>\n          </div>\n        </Description>\n\n        <AddToCart>\n          <div>\n            <span>Price:</span>\n            <span>${price.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Status:</span>\n            <span>{countInStock > 0 ? 'In Stock' : 'Out of Stock'}</span>\n          </div>\n          <div>\n            <span>Quantity:</span>\n            <InputNumber\n              min={1}\n              max={countInStock}\n              defaultValue={countInStock}\n              onChange={onChange}\n            />\n          </div>\n          <div>\n            <Button\n              width=\"100%\"\n              disabled={countInStock === 0}\n              onClick={addToCartHandler}\n            >\n              Add to cart\n            </Button>\n          </div>\n        </AddToCart>\n      </Main>\n    </ProductDetailsStyled>\n  );\n};\n\nexport default ProductDetails;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProductDetails } from '../../actions/productDetails';\n\n// Redux - Slices\nimport {\n  selectError,\n  selectLoading,\n  selectProduct,\n} from '../../slices/productDetails';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport { ProductScreenStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Button, Spin } from 'antd';\n\n// Components\nimport ProductDetails from '../../components/product/product-details/ProductDetails';\n\ninterface Props {}\n\nconst ProductScreen: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const product = useSelector(selectProduct);\n  const error = useSelector(selectError);\n\n  // History\n  const history = useHistory();\n\n  const { productID } = useParams() as { productID: string };\n\n  useEffect(() => {\n    dispatch(listProductDetails(productID));\n  }, [dispatch, productID]);\n\n  return (\n    <ProductScreenStyled>\n      <h1>Product Details</h1>\n      <Spin spinning={loading}>\n        {loading ? (\n          <Spin />\n        ) : error ? (\n          <Alert\n            message={error}\n            type=\"error\"\n            showIcon\n            banner\n            action={\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => history.push('/')}\n              >\n                Go Home\n              </Button>\n            }\n          />\n        ) : (\n          <ProductDetails {...product} />\n        )}\n      </Spin>\n    </ProductScreenStyled>\n  );\n};\n\nexport default ProductScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  productRequest,\n  productSuccess,\n  productFail,\n} from '../slices/productDetails';\n\nexport const listProductDetails = (productId: string) => async (\n  dispatch: any\n) => {\n  try {\n    dispatch(productRequest());\n\n    const { data } = await axios.get(`/api/products/${productId}`);\n\n    dispatch(productSuccess(data));\n  } catch (error) {\n    dispatch(\n      productFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport { cartAddItem, cartRemoveItem } from '../slices/cart';\n\nexport const addToCart = (productId: string, qty: number) => async (\n  dispatch: any,\n  getState: any\n) => {\n  const { data } = await axios.get(`/api/products/${productId}`);\n\n  dispatch(\n    cartAddItem({\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    })\n  );\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (productId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch(cartRemoveItem(productId));\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n","import styled from 'styled-components';\n\nexport const CartScreenStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  grid-column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Left = styled.div`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Right = styled.div``;\n","import styled from 'styled-components';\n\nexport const CartListStyled = styled.ul``;\n","import styled from 'styled-components';\n\nexport const CartListItemStyled = styled.li`\n  display: grid;\n  grid-template-columns: 15% 1fr 10% 15% 15%;\n  grid-column-gap: 20px;\n\n  padding: 10px 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    grid-template-columns: 15% 27% 18% 15% 1fr;\n    grid-column-gap: 10px;\n  }\n`;\n\nexport const Image = styled.div`\n  cursor: pointer;\n  overflow: hidden;\n\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Name = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > h3 {\n    font-size: 14px;\n    line-height: 18px;\n    cursor: pointer;\n  }\n\n  @media (max-width: 768px) {\n    & > h3 {\n      font-size: 11px;\n      line-height: 16px;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const Price = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Remove = styled.div`\n  padding: 15px;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart, removeFromCart } from '../../../../actions/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  CartListItemStyled,\n  Image,\n  Name,\n  Price,\n  Quantity,\n  Remove,\n} from './Styles';\n\n// Antd Icons\nimport { DeleteFilled } from '@ant-design/icons';\n\n// Antd Components\nimport { InputNumber } from 'antd';\n\n// Components\nimport Button from '../../../button/Button';\n\ninterface Props {\n  product: string;\n  name: string;\n  image: string;\n  price: number;\n  countInStock: number;\n  qty: number;\n}\n\nconst CartListItem: React.FC<Props> = ({\n  product,\n  name,\n  image,\n  price,\n  countInStock,\n  qty,\n}) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = (productId: string) => {\n    dispatch(removeFromCart(productId));\n  };\n\n  const goToProduct = () => {\n    history.push(`/product/${product}`);\n  };\n\n  return (\n    <CartListItemStyled>\n      <Image onClick={goToProduct}>\n        <img src={image} alt={name} />\n      </Image>\n\n      <Name>\n        <h3 onClick={goToProduct}>{name}</h3>\n      </Name>\n\n      <Price>\n        <p>${price.toFixed(2)}</p>\n      </Price>\n\n      <Quantity>\n        <InputNumber\n          min={1}\n          max={countInStock}\n          defaultValue={qty}\n          value={qty}\n          onChange={(currentQty: number) =>\n            dispatch(addToCart(product, currentQty))\n          }\n        />\n      </Quantity>\n\n      <Remove>\n        <Button\n          width=\"100%\"\n          height=\"100%\"\n          onClick={() => removeFromCartHandler(product)}\n        >\n          <DeleteFilled />\n        </Button>\n      </Remove>\n    </CartListItemStyled>\n  );\n};\n\nexport default CartListItem;\n","// React\nimport React from 'react';\n\n// Styles\nimport { CartListStyled } from './Styles';\n\n// Components\nimport CartListItem from './cart-list-item/CartListItem';\n\ninterface Props {\n  productList: {}[];\n}\n\nconst CartList: React.FC<Props> = ({ productList }) => {\n  return (\n    <CartListStyled>\n      {productList.map((product: any) => (\n        <CartListItem key={product.product} {...product} />\n      ))}\n    </CartListStyled>\n  );\n};\n\nexport default CartList;\n","import styled from 'styled-components';\n\nexport const CartSubtotalStyled = styled.div`\n  border: 1px solid black;\n`;\nexport const Summary = styled.div`\n  border-bottom: 1px solid black;\n  padding: 10px 20px;\n\n  & > h3 {\n    font-size: 25px;\n    text-transform: uppercase;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Checkout = styled.div`\n  padding: 10px 20px;\n\n  & > button {\n    text-transform: uppercase;\n  }\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { CartSubtotalStyled, Summary, Checkout } from './Styles';\n\n// Component\nimport Button from '../../button/Button';\n\ninterface Props {\n  quantityItems: number;\n  totalAmount: number;\n}\n\nconst CartSubtotal: React.FC<Props> = ({ quantityItems, totalAmount }) => {\n  // History\n  const history = useHistory();\n\n  const checkoutHandler = () => {\n    history.push(`/login?redirect=shipping`);\n  };\n\n  return (\n    <CartSubtotalStyled>\n      <Summary>\n        <h3>Subtotal ({quantityItems}) items</h3>\n        <p>${totalAmount.toFixed(2)}</p>\n      </Summary>\n\n      <Checkout>\n        <Button\n          width=\"100%\"\n          disabled={quantityItems === 0}\n          onClick={checkoutHandler}\n        >\n          Proceed to checkout\n        </Button>\n      </Checkout>\n    </CartSubtotalStyled>\n  );\n};\n\nexport default CartSubtotal;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart } from '../../actions/cart';\n\n// Redux - Slices\nimport { selectCartItems } from '../../slices/cart';\n\n// React Router\nimport { useHistory, useLocation, useParams } from 'react-router';\n\n// Styles\nimport { CartScreenStyled, Left, Right } from './Styles';\n\n// Antd Components\nimport { Alert, Button } from 'antd';\n\n// Components\nimport CartList from '../../components/cart/cart-list/CartList';\nimport CartSubtotal from '../../components/cart/cart-subtotal/CartSubtotal';\n\ninterface Props {}\n\nconst CartScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Location\n  const location = useLocation();\n\n  // Selector\n  const productList = useSelector(selectCartItems);\n\n  const { productID } = useParams() as { productID: string };\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  useEffect(() => {\n    if (productID) {\n      dispatch(addToCart(productID, qty));\n    }\n  }, [dispatch, productID, qty]);\n\n  const getQuantityItems = () =>\n    productList.reduce((acc, item: any) => acc + item.qty, 0);\n\n  const getTotalAmount = () =>\n    productList.reduce((acc, item: any) => acc + item.price * item.qty, 0);\n\n  return (\n    <CartScreenStyled>\n      <Left>\n        <h2>Shopping cart</h2>\n\n        {getQuantityItems() === 0 ? (\n          <Alert\n            message=\"Your cart is empty\"\n            type=\"error\"\n            showIcon\n            banner\n            action={\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => history.push('/')}\n              >\n                Go Home\n              </Button>\n            }\n          />\n        ) : (\n          <CartList productList={productList} />\n        )}\n      </Left>\n\n      <Right>\n        <CartSubtotal\n          quantityItems={getQuantityItems()}\n          totalAmount={getTotalAmount()}\n        />\n      </Right>\n    </CartScreenStyled>\n  );\n};\n\nexport default CartScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  userLoginFail,\n  userLoginRequest,\n  userLoginSuccess,\n  userLogout,\n  userRegisterFail,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  deleteAlert,\n} from '../slices/user';\n\nexport const deleteAlerts = () => (dispatch: any) => {\n  setTimeout(() => {\n    dispatch(deleteAlert());\n  }, 3000);\n};\n\nexport const login = ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userLoginRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userLoginFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.removeItem('userInfo');\n  dispatch(userLogout());\n};\n\nexport const register = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userRegisterRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userRegisterSuccess(data));\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userRegisterFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const getUserDetails = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/users/profile', config);\n\n    dispatch(userDetailsSuccess(data));\n  } catch (error) {\n    dispatch(\n      userDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const updateUserProfile = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userUpdateProfileRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      '/api/users/profile',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userUpdateProfileSuccess(data));\n    dispatch(getUserDetails());\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(deleteAlerts());\n  } catch (error) {\n    dispatch(\n      userUpdateProfileFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoginScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoRegister = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\nexport const InputStyled = styled.label`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n\n  & > p {\n    margin-bottom: 5px;\n  }\n\n  & > input {\n    outline: none;\n    width: 100%;\n    padding: 10px 0 10px 10px;\n  }\n`;\n\nexport const Error = styled.p`\n  margin-top: 6px;\n  color: ${color.colorBlack};\n`;\n","// React\nimport { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\n// Styles\nimport { InputStyled, Error } from './Styles';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  type?: string;\n}\n\nconst Input = forwardRef(\n  (\n    { label, error, type = 'text', ...props }: Props,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    return (\n      <InputStyled>\n        <p>{label}</p>\n        <input type={type} {...props} ref={ref} />\n        {error && <Error>{error}</Error>}\n      </InputStyled>\n    );\n  }\n);\n\nexport default Input;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { login } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorLogin,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { LoginScreenStyled, Form, GoRegister } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst LoginScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorLogin);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleSignIn = handleSubmit(\n    (data: { email: string; password: string }) => {\n      dispatch(login(data));\n    }\n  );\n\n  return (\n    <LoginScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignIn}>\n          <h2>Sign in</h2>\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN IN</Button>\n\n          <GoRegister>\n            New Customer?\n            <span onClick={() => history.push('/register')}>Register</span>\n          </GoRegister>\n        </Form>\n      </Spin>\n    </LoginScreenStyled>\n  );\n};\n\nexport default LoginScreen;\n","import styled from 'styled-components';\n\nexport const RegisterScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoLogin = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { register as registerUser } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorRegister,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { RegisterScreenStyled, Form, GoLogin } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst RegisterScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorRegister);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(registerUser(data));\n    }\n  );\n\n  return (\n    <RegisterScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignUp}>\n          <h2>Sign up</h2>\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Your name\"\n            error={errors.name?.message}\n            ref={register({\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 20,\n                message: 'Name must not be greater than 20 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password_repeat\"\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            error={errors.password_repeat?.message}\n            ref={register({\n              validate: (value) =>\n                value === password.current || 'The passwords do not match',\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN UP</Button>\n\n          <GoLogin>\n            Already have an acount?\n            <span onClick={() => history.push('/login')}>Login</span>\n          </GoLogin>\n        </Form>\n      </Spin>\n    </RegisterScreenStyled>\n  );\n};\n\nexport default RegisterScreen;\n","import styled from 'styled-components';\n\nexport const ProfileScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getUserDetails, updateUserProfile } from '../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorDetails,\n  selectErrorUpdateDetails,\n  selectLoading,\n  selectUser,\n  selectUserInfo,\n  selectSuccess,\n} from '../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ProfileScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../components/input/Input';\nimport Button from '../../components/button/Button';\n\ninterface Props {}\n\nconst ProfileScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n  const user = useSelector(selectUser) as {\n    name: string;\n    email: string;\n  };\n\n  const success = useSelector(selectSuccess);\n  const errorDetails = useSelector(selectErrorDetails);\n  const errorUpdateDetails = useSelector(selectErrorUpdateDetails);\n  const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(updateUserProfile(data));\n    }\n  );\n\n  return (\n    <ProfileScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignUp}>\n          <h2>User profile</h2>\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            defaultValue={user && user.name}\n            placeholder=\"Your name\"\n            error={errors.name?.message}\n            ref={register({\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 20,\n                message: 'Name must not be greater than 20 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            defaultValue={user && user.email}\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Enter password\"\n            error={errors.password?.message}\n            ref={register({\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password_repeat\"\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            error={errors.password_repeat?.message}\n            ref={register({\n              validate: (value) =>\n                value === password.current || 'The passwords do not match',\n            })}\n          />\n          {errorDetails && (\n            <Alert message={errorDetails} type=\"error\" showIcon banner />\n          )}\n          {errorUpdateDetails && (\n            <Alert message={errorUpdateDetails} type=\"error\" showIcon banner />\n          )}\n          {success && (\n            <Alert message=\"Updated\" type=\"success\" showIcon banner />\n          )}\n          <Button width=\"100%\">UPDATE</Button>\n        </Form>\n      </Spin>\n    </ProfileScreenStyled>\n  );\n};\n\nexport default ProfileScreen;\n","// React\nimport React from 'react';\n\n// React Router\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// Components\nimport HomeScreen from '../pages/home/HomeScreen';\nimport ProductScreen from '../pages/product/ProductScreen';\nimport CartScreen from '../pages/cart/CartScreen';\nimport LoginScreen from '../pages/auth/login/LoginScreen';\nimport RegisterScreen from '../pages/auth/register/RegisterScreen';\nimport ProfileScreen from '../pages/profile/ProfileScreen';\n\ninterface Props {}\n\nconst Routes: React.FC<Props> = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomeScreen} />\n      <Route exact path=\"/product/:productID\" component={ProductScreen} />\n      <Route exact path=\"/cart/:productID?\" component={CartScreen} />\n      <Route exact path=\"/login\" component={LoginScreen} />\n      <Route exact path=\"/register\" component={RegisterScreen} />\n      <Route exact path=\"/profile\" component={ProfileScreen} />\n\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    margin: 0;\n    list-style: none;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0px;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const Container = styled.main`\n  max-width: 1000px;\n  margin: 30px auto;\n  background-color: ${color.colorWhite};\n\n  @media (max-width: 1000px) {\n    padding: 0 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.colorBlack};\n  height: 72px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1000px;\n  width: 1000px;\n  height: 40px;\n\n  @media (max-width: 1000px) {\n    padding: 0 20px;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\n\nexport const Logo = styled.div`\n  & > a > h2 {\n    color: ${color.colorWhite};\n  }\n`;\n\nexport const Search = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n\n  & > label {\n    height: 100%;\n    display: inline-block;\n\n    & > input {\n      height: 100%;\n      max-width: 200px;\n      width: 300px;\n      padding: 0px 0 0px 15px;\n      outline: none;\n      border-radius: 4px;\n      margin-right: 10px;\n      border: none;\n    }\n  }\n\n  & > button {\n    background-color: ${color.colorWhite};\n    color: ${color.colorBlack};\n    width: auto;\n    padding: 0 20px;\n    height: 100%;\n  }\n\n  @media (max-width: 1000px) {\n    display: none;\n  }\n`;\n\nexport const DrawerStyled = styled.div`\n  display: none;\n\n  & > button {\n    background: white;\n    color: black;\n    width: auto;\n    padding: 0 20px;\n  }\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nexport const Navbar = styled.nav`\n  height: 100%;\n  display: flex;\n\n  button {\n    height: 100%;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nexport const Profile = styled.div`\n  & > button:first-child {\n    margin-right: 10px;\n  }\n\n  & > button {\n    background-color: ${color.colorWhite};\n    color: ${color.colorBlack};\n  }\n`;\n","// React\nimport React, { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { logout } from '../../../actions/user';\n\n// Redux - Slices\nimport { selectLoading, selectUserInfo } from '../../../slices/user';\n\n// React Router\nimport { NavLink, useHistory } from 'react-router-dom';\n\n// Styles\nimport {\n  HeaderStyled,\n  Logo,\n  Search,\n  Navbar,\n  Profile,\n  HeaderContainer,\n  DrawerStyled,\n} from './Styles';\n\n// Antd Icons\nimport {\n  DownOutlined,\n  ProfileOutlined,\n  LogoutOutlined,\n  ShoppingCartOutlined,\n  SearchOutlined,\n  MenuOutlined,\n} from '@ant-design/icons';\n\n// Antd Components\nimport { Drawer, Dropdown, Menu } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item\n        key=\"1\"\n        icon={<ProfileOutlined />}\n        onClick={() => history.push('/profile')}\n      >\n        Profile\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key=\"2\" icon={<LogoutOutlined />} onClick={handleLogout}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <HeaderContainer>\n        <Logo>\n          <NavLink to=\"/\">\n            <h2>Awesome Shop</h2>\n          </NavLink>\n        </Logo>\n\n        <Search>\n          <label>\n            <input type=\"text\" placeholder=\"Search\" />\n          </label>\n          <Button>\n            <SearchOutlined />\n          </Button>\n        </Search>\n\n        {/* MOBILE */}\n        <DrawerStyled>\n          <Button onClick={showDrawer}>\n            <MenuOutlined />\n          </Button>\n\n          <Drawer\n            title={userInfo?.name}\n            placement=\"left\"\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n          >\n            <Menu onClick={onClose}>\n              {userInfo ? (\n                <>{menu}</>\n              ) : (\n                <>\n                  <Menu.Item key=\"1\">\n                    <Button width=\"100%\" onClick={() => history.push('/login')}>\n                      Sign in\n                    </Button>\n                  </Menu.Item>\n                  <Menu.Divider />\n                  <Menu.Item key=\"2\">\n                    <Button\n                      width=\"100%\"\n                      onClick={() => history.push('/register')}\n                    >\n                      Sign up\n                    </Button>\n                  </Menu.Item>\n                </>\n              )}\n              <Menu.Item key=\"3\">\n                <Button width=\"100%\" onClick={() => history.push('/cart')}>\n                  <p>Cart</p>\n                  <ShoppingCartOutlined />\n                </Button>\n              </Menu.Item>\n            </Menu>\n          </Drawer>\n        </DrawerStyled>\n\n        {/* DESKTOP */}\n        <Navbar>\n          <Button onClick={() => history.push('/cart')}>\n            <p>Cart</p>\n            <ShoppingCartOutlined />\n          </Button>\n          <Profile>\n            {userInfo ? (\n              <Dropdown overlay={menu} trigger={['click']}>\n                <Button loading={loading}>\n                  <p>{userInfo.name}</p> <DownOutlined />\n                </Button>\n              </Dropdown>\n            ) : (\n              <>\n                <Button onClick={() => history.push('/login')}>Sign in</Button>\n                <Button onClick={() => history.push('/register')}>\n                  Sign up\n                </Button>\n              </>\n            )}\n          </Profile>\n        </Navbar>\n      </HeaderContainer>\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","// React\nimport React from 'react';\n\n// Styles\nimport { Container } from './Styles';\n\n// Components\nimport Header from '../header/Header';\n\ninterface Props {}\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <>\n      <Header />\n\n      <Container>{children}</Container>\n    </>\n  );\n};\n\nexport default Layout;\n","// React\nimport React from 'react';\n\n// React Router\nimport { HashRouter } from 'react-router-dom';\nimport Routes from './routes/Routes';\n\n// Styles\nimport 'antd/dist/antd.css';\nimport GlobalStyle from './theme/globalStyle';\n\n// Components\nimport Layout from './components/layout/layout/Layout';\n\ninterface Props {}\n\nconst App: React.FC<Props> = () => {\n  return (\n    <HashRouter>\n      <GlobalStyle />\n      <Layout>\n        <Routes />\n      </Layout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\n// Components\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}