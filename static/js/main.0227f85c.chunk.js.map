{"version":3,"sources":["slices/user.ts","slices/order.ts","slices/order/orderList.ts","slices/order/orderMyList.ts","slices/order/orderDeliver.ts","slices/cart.ts","slices/product/productList.ts","slices/product/productDetails.ts","slices/product/productDelete.ts","slices/product/productCreate.ts","slices/product/productUpdate.ts","store/configureStore.ts","pages/home/Styles.ts","axios/index.ts","actions/product/productList.ts","components/home/product-list/Styles.ts","theme/variables.ts","components/home/product-list/product-list-item/Styles.ts","components/home/product-list/product-list-item/ProductListItem.tsx","components/home/product-list/ProductList.tsx","pages/home/HomeScreen.tsx","pages/product/Styles.ts","actions/product/productDetails.ts","components/product/product-details/Styles.ts","components/button/Styles.ts","components/button/Button.tsx","components/product/product-details/ProductDetails.tsx","pages/product/ProductScreen.tsx","actions/cart.ts","pages/cart/Styles.ts","components/cart/cart-list/Styles.ts","components/cart/cart-list/cart-list-item/Styles.ts","components/cart/cart-list/cart-list-item/CartListItem.tsx","components/cart/cart-list/CartList.tsx","actions/order.ts","components/cart/cart-subtotal/Styles.ts","components/cart/cart-subtotal/CartSubtotal.tsx","pages/cart/CartScreen.tsx","actions/user.ts","pages/auth/login/Styles.ts","components/input/Styles.ts","components/input/Input.tsx","pages/auth/login/LoginScreen.tsx","pages/auth/register/Styles.ts","pages/auth/register/RegisterScreen.tsx","pages/profile/Styles.ts","pages/profile/ProfileScreen.tsx","pages/checkout-process/Styles.ts","components/checkout-process/shipping/Styles.ts","components/checkout-process/shipping/Shipping.tsx","components/checkout-process/payment/Styles.tsx","components/checkout-process/payment/Payment.tsx","components/checkout-process/place-order/Styles.ts","components/checkout-process/place-order/PlaceOrder.tsx","pages/checkout-process/CheckoutProcessScreen.tsx","pages/order/Styles.ts","pages/order/OrderScreen.tsx","actions/order/orderDeliver.ts","pages/my-orders/Styles.ts","components/my-orders/order-list/Styles.ts","components/my-orders/order-list/order-list-item/Styles.ts","components/my-orders/order-list/order-list-item/OrderListItem.tsx","components/my-orders/order-list/OrderList.tsx","actions/order/orderMyList.ts","pages/my-orders/MyOrdersScreen.tsx","pages/admin/users/user-list/Styles.ts","components/admin/users/user-list/Styles.ts","components/admin/users/user-list/user-list-item/Styles.ts","components/admin/users/user-list/user-list-item/UserListItem.tsx","components/admin/users/user-list/UserList.tsx","pages/admin/users/user-list/UserListScreen.tsx","pages/admin/users/user-edit/Styles.ts","pages/admin/users/user-edit/UserEditScreen.tsx","pages/admin/products/product-list/Styles.ts","components/admin/products/product-list/Styles.ts","components/admin/products/product-list/product-list-item/Styles.ts","components/admin/products/product-list/product-list-item/ProductListItem.tsx","actions/product/productDelete.ts","components/admin/products/product-list/ProductList.tsx","pages/admin/products/product-list/ProductListScreen.tsx","pages/admin/products/product-create/Styles.ts","pages/admin/products/product-create/ProductCreateScreen.tsx","actions/product/productCreate.ts","pages/admin/products/product-edit/Styles.ts","pages/admin/products/product-edit/ProductEditScreen.tsx","actions/product/productUpdate.ts","pages/admin/orders/order-list/Styles.ts","components/admin/orders/order-list/Styles.ts","components/admin/orders/order-list/order-list-item/Styles.ts","components/admin/orders/order-list/order-list-item/OrderListItem.tsx","components/admin/orders/order-list/OrderList.tsx","actions/order/orderList.ts","pages/admin/orders/order-list/OrderListScreen.tsx","routes/Routes.tsx","theme/globalStyle.ts","components/layout/layout/Styles.ts","components/layout/header/Styles.ts","components/search-box/Styles.ts","components/search-box/SearchBox.tsx","components/layout/header/Header.tsx","components/layout/layout/Layout.tsx","App.tsx","index.tsx"],"names":["userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","profile","userInfo","users","loading","success","errors","errorLogin","errorRegister","errorDetails","errorUpdateDetails","errorUpdate","errorList","errorDelete","userSlice","createSlice","name","reducers","userLoginRequest","state","userLoginSuccess","action","payload","userLoginFail","userLogout","userRegisterRequest","userRegisterSuccess","userRegisterFail","userDetailsRequest","userDetailsSuccess","userDetailsFail","userUpdateProfileRequest","userUpdateProfileSuccess","userUpdateProfileFail","userUpdateRequest","userUpdateSuccess","userUpdateFail","userListRequest","userListSuccess","userListFail","userDeleteRequest","userDeleteSuccess","userDeleteFail","deleteAlert","actions","selectProfile","user","selectUserInfo","selectUsers","selectLoading","selectSuccess","selectErrorLogin","selectErrorRegister","selectErrorDetails","selectErrorUpdateDetails","selectErrorUpdate","selectErrorList","selectErrorDelete","orderSlice","orders","order","error","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderListMyRequest","orderListMySuccess","orderListMyFail","clearOrder","selectOrder","selectError","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListReset","selectOrderListOrders","orderList","selectOrderListLoading","selectOrderListError","orderMyListSlice","orderMyListRequest","orderMyListSuccess","orderMyListFail","orderMyListReset","selectOrderMyListOrders","orderMyList","selectOrderMyListLoading","selectOrderMyListError","orderDeliverSlice","orderDeliverRequest","orderDeliverSuccess","orderDeliverFail","orderDeliverReset","selectOrderDeliverSuccess","orderDeliver","cartItemsFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","cartItems","shippingAddress","paymentMethod","cartSlice","cartAddItem","item","existItem","find","x","product","map","push","cartRemoveItem","filter","cartSaveShippingAddress","cartSavePaymentMethod","clearCart","clearCartReadyForCheckoutProcess","selectCartItems","cart","selectShippingAddress","selectPaymentMethod","productListSlice","products","pages","page","productListRequest","productListSuccess","productListFail","productListReset","selectProductListProducts","productList","selectProductListPages","selectProductListPage","selectProductListLoading","selectProductListError","productDetailsSlice","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","selectProductDetailsProduct","productDetails","selectProductDetailsLoading","selectProductDetailsError","productDeleteSlice","productDeleteRequest","productDeleteSuccess","productDeleteFail","productDeleteReset","selectProductDeleteSuccess","productDelete","selectProductDeleteLoading","selectProductDeleteError","productCreateSlice","productCreateRequest","productCreateSuccess","productCreateFail","productCreateReset","selectProductCreateSuccess","productCreate","selectProductCreateLoading","selectProductCreateError","productUpdateSlice","productUpdateRequest","productUpdateSuccess","productUpdateFail","productUpdateReset","selectProductUpdateSuccess","productUpdate","selectProductUpdateLoading","selectProductUpdateError","store","configureStore","reducer","HomeScreenStyled","styled","section","Header","div","axios","create","baseURL","listProducts","keyword","pageNumber","dispatch","a","get","data","response","message","ProductListStyled","ProductListContent","ul","color","ProductListItemStyled","li","ProductImage","figure","ProductDetails","ProductListItem","_id","image","price","rating","numReviews","history","useHistory","onClick","src","alt","allowHalf","disabled","defaultValue","toFixed","ProductList","useDispatch","useSelector","useParams","useEffect","spinning","delay","onChange","e","changePage","current","total","length","type","showIcon","banner","HomeScreen","ProductScreenStyled","listProductDetails","productId","ProductDetailsStyled","Main","Image","Description","AddToCart","ButtonStyled","button","p","width","height","Button","forwardRef","ref","children","props","useState","quantity","setQuantity","productID","countInStock","goBack","description","min","max","value","size","ProductScreen","addToCart","qty","getState","setItem","stringify","CartScreenStyled","Left","Right","CartListStyled","CartListItemStyled","Name","Price","Quantity","Remove","CartListItem","removeFromCartHandler","removeFromCart","goToProduct","currentQty","DeleteFilled","CartList","clearAllOrder","removeItem","CartSubtotalStyled","Summary","Checkout","CartSubtotal","quantityItems","totalAmount","CartScreen","location","useLocation","search","Number","split","getQuantityItems","reduce","acc","deleteAlerts","setTimeout","logout","getUserDetails","token","config","headers","Authorization","LoginScreenStyled","Form","form","GoRegister","InputStyled","label","Error","Input","LoginScreen","useForm","register","handleSignIn","handleSubmit","email","password","post","login","onSubmit","placeholder","required","pattern","minLength","maxLength","RegisterScreenStyled","GoLogin","RegisterScreen","watch","useRef","handleSignUp","registerUser","password_repeat","validate","ProfileScreenStyled","ProfileScreen","put","updateUserProfile","CheckoutProcessScreenStyled","Container","ShippingStyled","Shipping","saveShippingAddress","address","city","postalCode","country","PaymentStyled","Payment","currentValue","setCurrentValue","preventDefault","Group","target","PlaceOrderStyled","Details","OrderList","OrderItem","OrderImage","OrderName","OrderCant","OrderSummary","PlaceOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","createOrder","orderItems","CheckoutProcessScreen","Step","Steps","currentProcess","setCurrentProcess","steps","title","content","className","OrderScreenStyled","OrderScreen","successDeliver","orderId","setSdkReady","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","isPaid","window","paypal","console","log","handleDeliver","deliverOrder","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","payOrder","isAdmin","MyOrdersScreenStyled","OrderListStyled","OrderListItemStyled","Body","Footer","OrderListItem","createdAt","substring","myOrders","MyOrdersScreen","UserListScreenStyled","UserListStyled","UserListItemStyled","ActionsContainer","UserListItem","handleDelete","userId","delete","deleteUser","onConfirm","okText","cancelText","UserList","UserListScreen","UserEditScreenStyled","UserEditScreen","admin","setAdmin","handleUpdate","updateUser","getUserById","checkedChildren","unCheckedChildren","defaultChecked","ProductListScreenStyled","category","brand","deleteProduct","ProductListScreen","FileAddOutlined","ProductCreateScreenStyled","ProductCreateScreen","handleCreate","ProductEditScreenStyled","ProductEditScreen","loadingProductDetails","loadingProductUpdate","successUpdate","updateProduct","setImage","uploadFileHandler","file","files","formData","FormData","append","imageUpload","OrderListScreenStyled","OrderListScreen","Routes","exact","path","component","to","GlobalStyle","createGlobalStyle","main","HeaderStyled","header","HeaderContainer","Logo","DrawerStyled","Navbar","nav","Profile","SearchBoxStyled","SearchBox","setKeyword","trim","SearchOutlined","menu","Item","icon","ProfileOutlined","Divider","DeploymentUnitOutlined","TeamOutlined","InboxOutlined","LogoutOutlined","visible","setVisible","onClose","MenuOutlined","placement","closable","ShoppingCartOutlined","overlay","trigger","DownOutlined","Layout","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0227f85c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '{}')\n  : null;\n\ninterface UserState {\n  profile: null | {};\n  userInfo: null | {\n    name: string;\n    isAdmin: boolean;\n    token: string;\n  };\n  users: null | [{}];\n  loading: boolean;\n  success: boolean;\n  errors: {\n    errorLogin: null | string;\n    errorRegister: null | string;\n    errorDetails: null | string;\n    errorUpdateDetails: null | string;\n    errorUpdate: null | string;\n    errorList: null | string;\n    errorDelete: null | string;\n  };\n}\n\nconst initialState: UserState = {\n  profile: null,\n  userInfo: userInfoFromStorage,\n  users: null,\n  loading: false,\n  success: false,\n  errors: {\n    errorLogin: null,\n    errorRegister: null,\n    errorDetails: null,\n    errorUpdateDetails: null,\n    errorUpdate: null,\n    errorList: null,\n    errorDelete: null,\n  },\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    // LOGIN\n    userLoginRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userLoginSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorLogin = null;\n      state.loading = false;\n    },\n    userLoginFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorLogin = action.payload;\n      state.loading = false;\n    },\n    // LOGOUT\n    userLogout: (state) => {\n      state.profile = null;\n      state.userInfo = null;\n      state.loading = false;\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n    },\n    // REGISTER\n    userRegisterRequest: (state) => {\n      state.userInfo = null;\n      state.loading = true;\n    },\n    userRegisterSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.errors.errorRegister = null;\n      state.loading = false;\n    },\n    userRegisterFail: (state, action) => {\n      state.userInfo = null;\n      state.errors.errorRegister = action.payload;\n      state.loading = false;\n    },\n    // DETAILS\n    userDetailsRequest: (state) => {\n      state.profile = null;\n      state.loading = true;\n    },\n    userDetailsSuccess: (state, action) => {\n      state.profile = action.payload;\n      state.errors.errorDetails = null;\n      state.loading = false;\n    },\n    userDetailsFail: (state, action) => {\n      state.profile = null;\n      state.errors.errorDetails = action.payload;\n      state.loading = false;\n    },\n    // UPDATE\n    userUpdateProfileRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n    },\n    userUpdateProfileSuccess: (state, action) => {\n      state.userInfo = action.payload;\n      state.success = true;\n      state.errors.errorUpdateDetails = null;\n      state.loading = false;\n    },\n    userUpdateProfileFail: (state, action) => {\n      state.success = false;\n      state.errors.errorUpdateDetails = action.payload;\n      state.loading = false;\n    },\n    // UPDATE\n    userUpdateRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n    },\n    userUpdateSuccess: (state, action) => {\n      state.profile = action.payload;\n      state.success = true;\n      state.errors.errorUpdate = null;\n      state.loading = false;\n    },\n    userUpdateFail: (state, action) => {\n      state.success = false;\n      state.errors.errorUpdate = action.payload;\n      state.loading = false;\n    },\n    // LIST\n    userListRequest: (state) => {\n      state.users = null;\n      state.loading = true;\n    },\n    userListSuccess: (state, action) => {\n      state.users = action.payload;\n      state.errors.errorList = null;\n      state.loading = false;\n    },\n    userListFail: (state, action) => {\n      state.users = null;\n      state.errors.errorList = action.payload;\n      state.loading = false;\n    },\n    // DELETE\n    userDeleteRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n    },\n    userDeleteSuccess: (state) => {\n      state.success = true;\n      state.errors.errorDelete = null;\n      state.loading = false;\n    },\n    userDeleteFail: (state, action) => {\n      state.success = false;\n      state.errors.errorDelete = action.payload;\n      state.loading = false;\n    },\n    // DELETE ALERTS\n    deleteAlert: (state) => {\n      state.success = false;\n      state.errors.errorLogin = null;\n      state.errors.errorRegister = null;\n      state.errors.errorDetails = null;\n      state.errors.errorUpdateDetails = null;\n      state.errors.errorUpdate = null;\n      state.errors.errorList = null;\n      state.errors.errorDelete = null;\n    },\n  },\n});\n\nexport const {\n  userLoginRequest,\n  userLoginSuccess,\n  userLoginFail,\n  userLogout,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userRegisterFail,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  userUpdateRequest,\n  userUpdateSuccess,\n  userUpdateFail,\n  userListRequest,\n  userListSuccess,\n  userListFail,\n  userDeleteRequest,\n  userDeleteSuccess,\n  userDeleteFail,\n  deleteAlert,\n} = userSlice.actions;\n\nexport const selectProfile = (state: RootState) => state.user.profile;\nexport const selectUserInfo = (state: RootState) => state.user.userInfo;\nexport const selectUsers = (state: RootState) => state.user.users;\nexport const selectLoading = (state: RootState) => state.user.loading;\nexport const selectSuccess = (state: RootState) => state.user.success;\n\nexport const selectErrorLogin = (state: RootState) =>\n  state.user.errors.errorLogin;\nexport const selectErrorRegister = (state: RootState) =>\n  state.user.errors.errorRegister;\nexport const selectErrorDetails = (state: RootState) =>\n  state.user.errors.errorDetails;\nexport const selectErrorUpdateDetails = (state: RootState) =>\n  state.user.errors.errorUpdateDetails;\nexport const selectErrorUpdate = (state: RootState) =>\n  state.user.errors.errorUpdate;\nexport const selectErrorList = (state: RootState) =>\n  state.user.errors.errorList;\nexport const selectErrorDelete = (state: RootState) =>\n  state.user.errors.errorDelete;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\ninterface OrderState {\n  orders: null | [{}];\n  order: null | {};\n  success: boolean;\n  error: null | {};\n  loading: boolean;\n}\n\nconst initialState: OrderState = {\n  orders: [{}],\n  order: null,\n  success: false,\n  error: null,\n  loading: false,\n};\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    // CREATE\n    orderCreateRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderCreateSuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderCreateFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    // DETAILS\n    orderDetailsRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderDetailsSuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderDetailsFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    // PAY\n    orderPayRequest: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = true;\n    },\n    orderPaySuccess: (state, action) => {\n      state.order = action.payload;\n      state.error = null;\n      state.success = true;\n      state.loading = false;\n    },\n    orderPayFail: (state, action) => {\n      state.order = null;\n      state.error = action.payload;\n      state.success = false;\n      state.loading = false;\n    },\n    orderPayReset: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = false;\n    },\n    // LIST MY\n    orderListMyRequest: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = true;\n    },\n    orderListMySuccess: (state, action) => {\n      state.orders = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    orderListMyFail: (state, action) => {\n      state.orders = null;\n      state.error = action.payload;\n      state.loading = false;\n    },\n    // CLEAR\n    clearOrder: (state) => {\n      state.order = null;\n      state.error = null;\n      state.success = false;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  orderCreateRequest,\n  orderCreateSuccess,\n  orderCreateFail,\n  orderDetailsRequest,\n  orderDetailsSuccess,\n  orderDetailsFail,\n  orderPayRequest,\n  orderPaySuccess,\n  orderPayFail,\n  orderPayReset,\n  orderListMyRequest,\n  orderListMySuccess,\n  orderListMyFail,\n  clearOrder,\n} = orderSlice.actions;\n\nexport const selectOrders = (state: RootState) => state.order.orders;\nexport const selectOrder = (state: RootState) => state.order.order;\nexport const selectLoading = (state: RootState) => state.order.loading;\nexport const selectSuccess = (state: RootState) => state.order.success;\nexport const selectError = (state: RootState) => state.order.error;\n\nexport default orderSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface OrderListState {\n  orders: null | [{}];\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: OrderListState = {\n  orders: null,\n  loading: false,\n  error: null,\n};\n\nexport const orderListSlice = createSlice({\n  name: 'orderList',\n  initialState,\n  reducers: {\n    orderListRequest: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = true;\n    },\n    orderListSuccess: (state, action) => {\n      state.orders = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    orderListFail: (state, action) => {\n      state.orders = null;\n      state.error = action.payload;\n      state.loading = false;\n    },\n    orderListReset: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  orderListRequest,\n  orderListSuccess,\n  orderListFail,\n  orderListReset,\n} = orderListSlice.actions;\n\nexport const selectOrderListOrders = (state: RootState) =>\n  state.orderList.orders;\nexport const selectOrderListLoading = (state: RootState) =>\n  state.orderList.loading;\n\nexport const selectOrderListError = (state: RootState) => state.orderList.error;\n\nexport default orderListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface OrderMyListState {\n  orders: null | [{}];\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: OrderMyListState = {\n  orders: null,\n  loading: false,\n  error: null,\n};\n\nexport const orderMyListSlice = createSlice({\n  name: 'orderMyList',\n  initialState,\n  reducers: {\n    orderMyListRequest: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = true;\n    },\n    orderMyListSuccess: (state, action) => {\n      state.orders = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    orderMyListFail: (state, action) => {\n      state.orders = null;\n      state.error = action.payload;\n      state.loading = false;\n    },\n    orderMyListReset: (state) => {\n      state.orders = null;\n      state.error = null;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  orderMyListRequest,\n  orderMyListSuccess,\n  orderMyListFail,\n  orderMyListReset,\n} = orderMyListSlice.actions;\n\nexport const selectOrderMyListOrders = (state: RootState) =>\n  state.orderMyList.orders;\nexport const selectOrderMyListLoading = (state: RootState) =>\n  state.orderMyList.loading;\n\nexport const selectOrderMyListError = (state: RootState) =>\n  state.orderMyList.error;\n\nexport default orderMyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface OrderDeliverState {\n  success: boolean;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: OrderDeliverState = {\n  success: false,\n  loading: false,\n  error: null,\n};\n\nexport const orderDeliverSlice = createSlice({\n  name: 'orderDeliver',\n  initialState,\n  reducers: {\n    orderDeliverRequest: (state) => {\n      state.success = false;\n      state.error = null;\n      state.loading = true;\n    },\n    orderDeliverSuccess: (state) => {\n      state.success = true;\n      state.error = null;\n      state.loading = false;\n    },\n    orderDeliverFail: (state, action) => {\n      state.success = false;\n      state.error = action.payload;\n      state.loading = false;\n    },\n    orderDeliverReset: (state) => {\n      state.success = false;\n      state.error = null;\n      state.loading = false;\n    },\n  },\n});\n\nexport const {\n  orderDeliverRequest,\n  orderDeliverSuccess,\n  orderDeliverFail,\n  orderDeliverReset,\n} = orderDeliverSlice.actions;\n\nexport const selectOrderDeliverSuccess = (state: RootState) =>\n  state.orderDeliver.success;\nexport const selectOrderDeliverLoading = (state: RootState) =>\n  state.orderDeliver.loading;\n\nexport const selectOrderDeliverError = (state: RootState) =>\n  state.orderDeliver.error;\n\nexport default orderDeliverSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../store/configureStore';\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems') || '{}')\n  : [];\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress') || '{}')\n  : null;\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod') || '{}')\n  : null;\n\ninterface CartState {\n  cartItems: object[];\n  shippingAddress: null | {};\n  paymentMethod: null | {};\n}\n\nconst initialState: CartState = {\n  cartItems: cartItemsFromStorage,\n  shippingAddress: shippingAddressFromStorage,\n  paymentMethod: paymentMethodFromStorage,\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    cartAddItem: (state, action) => {\n      const item = action.payload;\n\n      const existItem: any = state.cartItems.find(\n        (x: any) => x.product === item.product\n      );\n\n      if (existItem) {\n        state.cartItems = state.cartItems.map((x: any) =>\n          x.product === existItem.product ? item : x\n        ) as [];\n      } else {\n        state.cartItems.push(item);\n      }\n    },\n    cartRemoveItem: (state, action) => {\n      state.cartItems = state.cartItems.filter(\n        (x: any) => x.product !== action.payload\n      );\n    },\n    cartSaveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n    },\n    cartSavePaymentMethod: (state, action) => {\n      state.paymentMethod = action.payload;\n    },\n    clearCart: (state) => {\n      state.cartItems = [];\n      state.shippingAddress = null;\n      state.paymentMethod = null;\n    },\n    // READY FOR CHECKOUT PROCESS\n    clearCartReadyForCheckoutProcess: (state) => {\n      state.shippingAddress = null;\n      state.paymentMethod = null;\n    },\n  },\n});\n\nexport const {\n  cartAddItem,\n  cartRemoveItem,\n  cartSaveShippingAddress,\n  cartSavePaymentMethod,\n  clearCart,\n  clearCartReadyForCheckoutProcess,\n} = cartSlice.actions;\n\nexport const selectCartItems = (state: RootState) => state.cart.cartItems;\nexport const selectShippingAddress = (state: RootState) =>\n  state.cart.shippingAddress;\nexport const selectPaymentMethod = (state: RootState) =>\n  state.cart.paymentMethod;\n\nexport default cartSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface ProductListState {\n  products: null | [];\n  pages: null | number;\n  page: null | number;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: ProductListState = {\n  products: null,\n  pages: null,\n  page: null,\n  loading: false,\n  error: null,\n};\n\nexport const productListSlice = createSlice({\n  name: 'productList',\n  initialState,\n  reducers: {\n    productListRequest: (state) => {\n      state.products = null;\n      state.pages = null;\n      state.page = null;\n      state.loading = true;\n      state.error = null;\n    },\n    productListSuccess: (state, action) => {\n      state.products = action.payload.products;\n      state.pages = action.payload.pages;\n      state.page = action.payload.page;\n      state.loading = false;\n      state.error = null;\n    },\n    productListFail: (state, action) => {\n      state.products = null;\n      state.pages = null;\n      state.page = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    productListReset: (state) => {\n      state.products = null;\n      state.pages = null;\n      state.page = null;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n  productListReset,\n} = productListSlice.actions;\n\nexport const selectProductListProducts = (state: RootState) =>\n  state.productList.products;\nexport const selectProductListPages = (state: RootState) =>\n  state.productList.pages;\nexport const selectProductListPage = (state: RootState) =>\n  state.productList.page;\nexport const selectProductListLoading = (state: RootState) =>\n  state.productList.loading;\n\nexport const selectProductListError = (state: RootState) =>\n  state.productList.error;\n\nexport default productListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface Product {\n  _id: string;\n  name: string;\n  image: string;\n  description: string;\n  brand: string;\n  category: string;\n  price: number;\n  countInStock: number;\n  rating: number;\n  numReviews: number;\n  reviews: [];\n}\n\ninterface ProductDetailsState {\n  product: null | Product;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: ProductDetailsState = {\n  product: null,\n  loading: false,\n  error: null,\n};\n\nexport const productDetailsSlice = createSlice({\n  name: 'productDetails',\n  initialState,\n  reducers: {\n    productDetailsRequest: (state) => {\n      state.product = null;\n      state.loading = true;\n      state.error = null;\n    },\n    productDetailsSuccess: (state, action) => {\n      state.product = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    productDetailsFail: (state, action) => {\n      state.product = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    productDetailsReset: (state) => {\n      state.product = null;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  productDetailsRequest,\n  productDetailsSuccess,\n  productDetailsFail,\n  productDetailsReset,\n} = productDetailsSlice.actions;\n\nexport const selectProductDetailsProduct = (state: RootState) =>\n  state.productDetails.product;\nexport const selectProductDetailsLoading = (state: RootState) =>\n  state.productDetails.loading;\n\nexport const selectProductDetailsError = (state: RootState) =>\n  state.productDetails.error;\n\nexport default productDetailsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface ProductDeleteState {\n  success: boolean;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: ProductDeleteState = {\n  success: false,\n  loading: false,\n  error: null,\n};\n\nexport const productDeleteSlice = createSlice({\n  name: 'productDelete',\n  initialState,\n  reducers: {\n    productDeleteRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n      state.error = null;\n    },\n    productDeleteSuccess: (state) => {\n      state.success = true;\n      state.loading = false;\n      state.error = null;\n    },\n    productDeleteFail: (state, action) => {\n      state.success = false;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    productDeleteReset: (state) => {\n      state.success = false;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  productDeleteRequest,\n  productDeleteSuccess,\n  productDeleteFail,\n  productDeleteReset,\n} = productDeleteSlice.actions;\n\nexport const selectProductDeleteSuccess = (state: RootState) =>\n  state.productDelete.success;\nexport const selectProductDeleteLoading = (state: RootState) =>\n  state.productDelete.loading;\n\nexport const selectProductDeleteError = (state: RootState) =>\n  state.productDelete.error;\n\nexport default productDeleteSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface ProductCreateState {\n  success: boolean;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: ProductCreateState = {\n  success: false,\n  loading: false,\n  error: null,\n};\n\nexport const productCreateSlice = createSlice({\n  name: 'productCreate',\n  initialState,\n  reducers: {\n    productCreateRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n      state.error = null;\n    },\n    productCreateSuccess: (state) => {\n      state.success = true;\n      state.loading = false;\n      state.error = null;\n    },\n    productCreateFail: (state, action) => {\n      state.success = false;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    productCreateReset: (state) => {\n      state.success = false;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  productCreateRequest,\n  productCreateSuccess,\n  productCreateFail,\n  productCreateReset,\n} = productCreateSlice.actions;\n\nexport const selectProductCreateSuccess = (state: RootState) =>\n  state.productCreate.success;\nexport const selectProductCreateLoading = (state: RootState) =>\n  state.productCreate.loading;\n\nexport const selectProductCreateError = (state: RootState) =>\n  state.productCreate.error;\n\nexport default productCreateSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { RootState } from '../../store/configureStore';\n\ninterface ProductUpdateState {\n  success: boolean;\n  loading: boolean;\n  error: null | string;\n}\n\nconst initialState: ProductUpdateState = {\n  success: false,\n  loading: false,\n  error: null,\n};\n\nexport const productUpdateSlice = createSlice({\n  name: 'productUpdate',\n  initialState,\n  reducers: {\n    productUpdateRequest: (state) => {\n      state.success = false;\n      state.loading = true;\n      state.error = null;\n    },\n    productUpdateSuccess: (state) => {\n      state.success = true;\n      state.loading = false;\n      state.error = null;\n    },\n    productUpdateFail: (state, action) => {\n      state.success = false;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    productUpdateReset: (state) => {\n      state.success = false;\n      state.loading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const {\n  productUpdateRequest,\n  productUpdateSuccess,\n  productUpdateFail,\n  productUpdateReset,\n} = productUpdateSlice.actions;\n\nexport const selectProductUpdateSuccess = (state: RootState) =>\n  state.productUpdate.success;\nexport const selectProductUpdateLoading = (state: RootState) =>\n  state.productUpdate.loading;\n\nexport const selectProductUpdateError = (state: RootState) =>\n  state.productUpdate.error;\n\nexport default productUpdateSlice.reducer;\n","// Redux\nimport { configureStore } from '@reduxjs/toolkit';\n\n// Redux - Slices\nimport { userSlice } from '../slices/user';\nimport { orderSlice } from '../slices/order';\nimport { orderListSlice } from '../slices/order/orderList';\nimport { orderMyListSlice } from '../slices/order/orderMyList';\nimport { orderDeliverSlice } from '../slices/order/orderDeliver';\nimport { cartSlice } from '../slices/cart';\nimport { productListSlice } from '../slices/product/productList';\nimport { productDetailsSlice } from '../slices/product/productDetails';\nimport { productDeleteSlice } from '../slices/product/productDelete';\nimport { productCreateSlice } from '../slices/product/productCreate';\nimport { productUpdateSlice } from '../slices/product/productUpdate';\n\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    cart: cartSlice.reducer,\n\n    order: orderSlice.reducer,\n\n    orderList: orderListSlice.reducer,\n    orderMyList: orderMyListSlice.reducer,\n    orderDeliver: orderDeliverSlice.reducer,\n\n    productList: productListSlice.reducer,\n    productDetails: productDetailsSlice.reducer,\n    productDelete: productDeleteSlice.reducer,\n    productCreate: productCreateSlice.reducer,\n    productUpdate: productUpdateSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;\n","import styled from 'styled-components';\n\nexport const HomeScreenStyled = styled.section``;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > h2 {\n    text-transform: uppercase;\n  }\n\n  & > button {\n    width: auto;\n    padding: 0 20px;\n  }\n`;\n","// Axios\nimport axios from 'axios';\n\nexport default axios.create({\n  // baseURL: 'http://localhost:5000',\n  baseURL: 'https://shop-backend-api.herokuapp.com',\n});\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  productListRequest,\n  productListSuccess,\n  productListFail,\n} from '../../slices/product/productList';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch: any\n) => {\n  try {\n    dispatch(productListRequest());\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    dispatch(productListSuccess(data));\n  } catch (error) {\n    dispatch(\n      productListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const ProductListStyled = styled.section`\n  & > .ant-pagination {\n    padding-top: 20px;\n  }\n`;\n\nexport const ProductListContent = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","export const color = {\n  // colorPrimary: '#181b32',\n  colorPrimary: 'red', // test //\n\n  // colorGreyLight1: '#E8EAF0',\n  colorGreyLight1: 'blue', // test //\n  // colorGreyLight2: '#F6F7F9',\n  colorGreyLight2: 'peru', // test //\n  // colorGreyLight3: '#8D8D9D',\n  colorGreyLight3: 'green', // test //\n  // colorGreyLight4: '#DFE1E6',\n  colorGreyLight4: 'yellow', // test //\n  // colorGreyLight5: '#878FB8',\n  colorGreyLight5: 'purple', // test //\n\n  colorWhite: '#fff',\n  colorBlack: '#000',\n};\n","import styled from 'styled-components';\nimport { color } from '../../../../theme/variables';\n\nexport const ProductListItemStyled = styled.li`\n  border: 1px solid ${color.colorBlack};\n  padding: 10px;\n`;\n\nexport const ProductImage = styled.figure`\n  margin-bottom: 20px;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`;\n\nexport const ProductDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > p {\n    font-size: 16px;\n    line-height: 20px;\n    margin-bottom: 10px;\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  & > div {\n    & > ul {\n      font-size: 12px;\n    }\n    & > span {\n      margin-left: 10px;\n      font-size: 12px;\n    }\n  }\n\n  & > h3 {\n    display: inline-block;\n    margin-top: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { ProductListItemStyled, ProductDetails, ProductImage } from './Styles';\n\n// Types\nimport { Product } from '../../../../data/products';\n\n// Antd Components\nimport { Rate } from 'antd';\n\nconst ProductListItem: React.FC<Product> = ({\n  _id,\n  name,\n  image,\n  price,\n  rating,\n  numReviews,\n}) => {\n  const history = useHistory();\n\n  const productDetails = () => {\n    history.push(`/product/${_id}`);\n  };\n  return (\n    <ProductListItemStyled>\n      <ProductImage onClick={productDetails}>\n        <img src={image} alt={name} />\n      </ProductImage>\n\n      <ProductDetails>\n        <p onClick={productDetails}>{name}</p>\n        <div>\n          <Rate allowHalf disabled defaultValue={rating} />\n          <span>{numReviews} reviews</span>\n        </div>\n        <h3>${price?.toFixed(2)}</h3>\n      </ProductDetails>\n    </ProductListItemStyled>\n  );\n};\n\nexport default ProductListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProducts } from '../../../actions/product/productList';\n\n// Redux - Slices\nimport {\n  selectProductListProducts,\n  selectProductListLoading,\n  selectProductListError,\n  selectProductListPages,\n  selectProductListPage,\n  productListReset,\n} from '../../../slices/product/productList';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport { ProductListStyled, ProductListContent } from './Styles';\n\n// Types\nimport { Product } from '../../../data/products';\n\n// Antd Components\nimport { Alert, Spin, Pagination } from 'antd';\n\n// Components\nimport ProductListItem from './product-list-item/ProductListItem';\n\ninterface Props {}\n\nconst ProductList: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const productList = useSelector(selectProductListProducts);\n  const pages = useSelector(selectProductListPages);\n  const page = useSelector(selectProductListPage);\n  const loading = useSelector(selectProductListLoading);\n  const error = useSelector(selectProductListError);\n\n  const { keyword } = useParams() as { keyword: string };\n  const { pageNumber } = (useParams() as { pageNumber: string }) || 1;\n\n  const changePage = (pageNumber: number, keyword = '') => {\n    if (keyword) {\n      history.push(`/search/${keyword}/page/${pageNumber}`);\n    } else {\n      history.push(`/page/${pageNumber}`);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n\n    return () => {\n      dispatch(productListReset());\n    };\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <Spin spinning={loading} delay={0}>\n      <ProductListStyled>\n        <ProductListContent>\n          {productList && (\n            <>\n              {productList.map((product: Product) => (\n                <ProductListItem key={product._id} {...product} />\n              ))}\n            </>\n          )}\n        </ProductListContent>\n        {productList && pages && page && (\n          <Pagination\n            onChange={(e) => changePage(e, keyword)}\n            current={page}\n            total={pages * productList.length}\n          />\n        )}\n      </ProductListStyled>\n\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default ProductList;\n","// React\nimport React from 'react';\n\n// Styles\nimport { HomeScreenStyled, Header } from './Styles';\n\n// Components\nimport ProductList from '../../components/home/product-list/ProductList';\n\ninterface Props {}\n\nconst HomeScreen: React.FC<Props> = () => {\n  return (\n    <HomeScreenStyled>\n      <Header>\n        <h2>Products</h2>\n      </Header>\n      <ProductList />\n    </HomeScreenStyled>\n  );\n};\n\nexport default HomeScreen;\n","import styled from 'styled-components';\n\nexport const ProductScreenStyled = styled.section``;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > h2 {\n    text-transform: uppercase;\n  }\n\n  & > button {\n    width: auto;\n    padding: 0 20px;\n  }\n`;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  productDetailsRequest,\n  productDetailsSuccess,\n  productDetailsFail,\n} from '../../slices/product/productDetails';\n\nexport const listProductDetails = (productId: string) => async (\n  dispatch: any\n) => {\n  try {\n    dispatch(productDetailsRequest());\n\n    const { data } = await axios.get(`/api/products/${productId}`);\n\n    dispatch(productDetailsSuccess(data));\n  } catch (error) {\n    dispatch(\n      productDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const ProductDetailsStyled = styled.section``;\n\nexport const Header = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Main = styled.div`\n  display: grid;\n  grid-template-columns: 35% 1fr 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Image = styled.div`\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Description = styled.div`\n  & > div {\n    padding: 10px 20px;\n  }\n\n  & > div:nth-child(1) {\n    font-size: 18px;\n    line-height: 35px;\n    padding: 0 20px 20px;\n  }\n\n  & > div:nth-child(2) {\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    display: flex;\n    align-items: center;\n\n    & > ul {\n      font-size: 15px;\n    }\n\n    & > p {\n      margin-left: 15px;\n    }\n  }\n\n  & > div:nth-child(3) {\n    border-bottom: 1px solid black;\n    font-size: 14px;\n  }\n\n  & > div:nth-child(4) {\n    font-size: 14px;\n  }\n`;\n\nexport const AddToCart = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(3) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(4) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\ninterface Props {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nexport const ButtonStyled = styled.button<Props>`\n  width: ${(p) => p.width};\n  height: ${(p) => p.height};\n  cursor: ${(p) => (p.loading ? 'not-allowed' : 'pointer')};\n  background-color: ${color.colorBlack};\n  color: ${color.colorWhite};\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n\n  & > div {\n    height: 100%;\n\n    & > .ant-spin-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100%;\n\n      & > span {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 0;\n\n        & > span {\n          margin: 0;\n        }\n\n        & > p {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n\n  &:disabled {\n    background-color: black;\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n","// React\nimport React, { ButtonHTMLAttributes, forwardRef, Ref } from 'react';\n\n// Styles\nimport { ButtonStyled } from './Styles';\n\n// Components\nimport { Spin } from 'antd';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  height?: string;\n  width?: string;\n  loading?: boolean;\n}\n\nconst Button = forwardRef(\n  (\n    {\n      children,\n      disabled,\n      height = '2.7rem',\n      width = '9rem',\n      loading = false,\n      ...props\n    }: Props,\n    ref: Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <ButtonStyled\n        ref={ref}\n        disabled={disabled}\n        height={height}\n        width={width}\n        loading={loading}\n        {...props}\n      >\n        <Spin spinning={loading} delay={500}>\n          <span>{children}</span>\n        </Spin>\n      </ButtonStyled>\n    );\n  }\n);\n\nexport default Button;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProductDetails } from '../../../actions/product/productDetails';\n\n// Redux - Slices\nimport {\n  selectProductDetailsProduct,\n  selectProductDetailsLoading,\n  selectProductDetailsError,\n  productDetailsReset,\n} from '../../../slices/product/productDetails';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport {\n  ProductDetailsStyled,\n  Header,\n  Main,\n  Image,\n  Description,\n  AddToCart,\n} from './Styles';\n\n// Antd Components\nimport { InputNumber, Rate } from 'antd';\n\n// Antd Components\nimport { Alert, Button as ButtonAnt, Spin } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst ProductDetails: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const product = useSelector(selectProductDetailsProduct) as {\n    _id: string;\n    name: string;\n    image: string;\n    description: string;\n    price: number;\n    countInStock: number;\n    rating: number;\n    numReviews: number;\n  };\n  const loading = useSelector(selectProductDetailsLoading);\n  const error = useSelector(selectProductDetailsError);\n\n  const [quantity, setQuantity] = useState<number>();\n  const { productID } = useParams() as { productID: string };\n\n  useEffect(() => {\n    dispatch(listProductDetails(productID));\n  }, [dispatch, productID]);\n\n  useEffect(() => {\n    if (product) {\n      setQuantity(product.countInStock);\n    }\n  }, [product]);\n\n  const onChange = (value: number) => setQuantity(value);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${product._id}?qty=${quantity}`);\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(productDetailsReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      {product && (\n        <ProductDetailsStyled>\n          <Header>\n            <Button onClick={() => history.goBack()}>Go Back</Button>\n          </Header>\n\n          <Main>\n            <Image>\n              <img src={product.image} alt={product.name} />\n            </Image>\n\n            <Description>\n              <div>\n                <h2>{product.name}</h2>\n              </div>\n              <div>\n                <Rate disabled defaultValue={product.rating} />\n                <p>{product.numReviews} reviews</p>\n              </div>\n              <div>\n                <p>Price: ${product.price.toFixed(2)}</p>\n              </div>\n              <div>\n                <p>{product.description}</p>\n              </div>\n            </Description>\n\n            <AddToCart>\n              <div>\n                <span>Price:</span>\n                <span>${product.price.toFixed(2)}</span>\n              </div>\n              <div>\n                <span>Status:</span>\n                <span>\n                  {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                </span>\n              </div>\n              <div>\n                <span>Quantity:</span>\n                <InputNumber\n                  min={1}\n                  max={product.countInStock}\n                  defaultValue={product.countInStock}\n                  onChange={onChange}\n                />\n              </div>\n              <div>\n                <Button\n                  width=\"100%\"\n                  disabled={product.countInStock === 0}\n                  onClick={addToCartHandler}\n                >\n                  Add to cart\n                </Button>\n              </div>\n            </AddToCart>\n          </Main>\n        </ProductDetailsStyled>\n      )}\n      {error && (\n        <Alert\n          message={error}\n          type=\"error\"\n          showIcon\n          banner\n          action={\n            <ButtonAnt\n              size=\"small\"\n              type=\"primary\"\n              onClick={() => history.push('/')}\n            >\n              Go Home\n            </ButtonAnt>\n          }\n        />\n      )}\n    </Spin>\n  );\n};\n\nexport default ProductDetails;\n","// React\nimport React from 'react';\n\n// Styles\nimport { ProductScreenStyled, Header } from './Styles';\n\n// Components\nimport ProductDetails from '../../components/product/product-details/ProductDetails';\n\ninterface Props {}\n\nconst ProductScreen: React.FC<Props> = () => {\n  return (\n    <ProductScreenStyled>\n      <Header>\n        <h2>Product Details</h2>\n      </Header>\n      <ProductDetails />\n    </ProductScreenStyled>\n  );\n};\n\nexport default ProductScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  cartAddItem,\n  cartRemoveItem,\n  cartSaveShippingAddress,\n  cartSavePaymentMethod,\n  clearCart,\n  clearCartReadyForCheckoutProcess,\n} from '../slices/cart';\n\nexport const addToCart = (productId: string, qty: number) => async (\n  dispatch: any,\n  getState: any\n) => {\n  const { data } = await axios.get(`/api/products/${productId}`);\n\n  dispatch(\n    cartAddItem({\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    })\n  );\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (productId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch(cartRemoveItem(productId));\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data: {\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n}) => async (dispatch: any) => {\n  dispatch(cartSaveShippingAddress(data));\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data: string) => async (dispatch: any) => {\n  dispatch(cartSavePaymentMethod(data));\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n\nexport const clearAllCart = () => async (dispatch: any) => {\n  dispatch(clearCart());\n\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n};\n\nexport const readyForCheckoutProcess = () => async (dispatch: any) => {\n  dispatch(clearCartReadyForCheckoutProcess());\n\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n};\n","import styled from 'styled-components';\n\nexport const CartScreenStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  grid-column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Left = styled.div`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Right = styled.div``;\n","import styled from 'styled-components';\n\nexport const CartListStyled = styled.ul``;\n","import styled from 'styled-components';\n\nexport const CartListItemStyled = styled.li`\n  display: grid;\n  grid-template-columns: 15% 1fr 10% 15% 15%;\n  grid-column-gap: 20px;\n\n  padding: 10px 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    grid-template-columns: 15% 27% 18% 15% 1fr;\n    grid-column-gap: 10px;\n  }\n`;\n\nexport const Image = styled.div`\n  cursor: pointer;\n  overflow: hidden;\n\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const Name = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > h3 {\n    font-size: 14px;\n    line-height: 18px;\n    cursor: pointer;\n  }\n\n  @media (max-width: 768px) {\n    & > h3 {\n      font-size: 11px;\n      line-height: 16px;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const Price = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Quantity = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Remove = styled.div`\n  padding: 15px;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart, removeFromCart } from '../../../../actions/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  CartListItemStyled,\n  Image,\n  Name,\n  Price,\n  Quantity,\n  Remove,\n} from './Styles';\n\n// Antd Icons\nimport { DeleteFilled } from '@ant-design/icons';\n\n// Antd Components\nimport { InputNumber } from 'antd';\n\n// Components\nimport Button from '../../../button/Button';\n\ninterface Props {\n  product: string;\n  name: string;\n  image: string;\n  price: number;\n  countInStock: number;\n  qty: number;\n}\n\nconst CartListItem: React.FC<Props> = ({\n  product,\n  name,\n  image,\n  price,\n  countInStock,\n  qty,\n}) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = (productId: string) => {\n    dispatch(removeFromCart(productId));\n  };\n\n  const goToProduct = () => {\n    history.push(`/product/${product}`);\n  };\n\n  return (\n    <CartListItemStyled>\n      <Image onClick={goToProduct}>\n        <img src={image} alt={name} />\n      </Image>\n\n      <Name>\n        <h3 onClick={goToProduct}>{name}</h3>\n      </Name>\n\n      <Price>\n        <p>${price.toFixed(2)}</p>\n      </Price>\n\n      <Quantity>\n        <InputNumber\n          min={1}\n          max={countInStock}\n          defaultValue={qty}\n          value={qty}\n          onChange={(currentQty: number) =>\n            dispatch(addToCart(product, currentQty))\n          }\n        />\n      </Quantity>\n\n      <Remove>\n        <Button\n          width=\"100%\"\n          height=\"100%\"\n          onClick={() => removeFromCartHandler(product)}\n        >\n          <DeleteFilled />\n        </Button>\n      </Remove>\n    </CartListItemStyled>\n  );\n};\n\nexport default CartListItem;\n","// React\nimport React from 'react';\n\n// Styles\nimport { CartListStyled } from './Styles';\n\n// Components\nimport CartListItem from './cart-list-item/CartListItem';\n\ninterface Props {\n  productList: {}[];\n}\n\nconst CartList: React.FC<Props> = ({ productList }) => {\n  return (\n    <CartListStyled>\n      {productList.map((product: any) => (\n        <CartListItem key={product.product} {...product} />\n      ))}\n    </CartListStyled>\n  );\n};\n\nexport default CartList;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  orderCreateRequest,\n  orderCreateSuccess,\n  orderCreateFail,\n  clearOrder,\n  orderDetailsRequest,\n  orderDetailsSuccess,\n  orderDetailsFail,\n  orderPayRequest,\n  orderPaySuccess,\n  orderPayFail,\n  orderListMyRequest,\n  orderListMySuccess,\n  orderListMyFail,\n} from '../slices/order';\n\nexport const createOrder = (order: any) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderCreateRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.post('/api/orders', order, config);\n\n    dispatch(orderCreateSuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderCreateFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const getOrderDetails = (orderId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${orderId}`, config);\n\n    dispatch(orderDetailsSuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const payOrder = (orderId: string, paymentResult: any) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderPayRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch(orderPaySuccess(data));\n\n    localStorage.setItem('order', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderPayFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const listMyOrders = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(orderListMyRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch(orderListMySuccess(data));\n\n    localStorage.setItem('orders', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      orderListMyFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const clearAllOrder = () => async (dispatch: any) => {\n  dispatch(clearOrder());\n\n  localStorage.removeItem('order');\n  localStorage.removeItem('orders');\n};\n","import styled from 'styled-components';\n\nexport const CartSubtotalStyled = styled.div`\n  border: 1px solid black;\n`;\nexport const Summary = styled.div`\n  border-bottom: 1px solid black;\n  padding: 10px 20px;\n\n  & > h3 {\n    font-size: 25px;\n    text-transform: uppercase;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Checkout = styled.div`\n  padding: 10px 20px;\n\n  & > button {\n    text-transform: uppercase;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { clearAllOrder } from '../../../actions/order';\nimport { readyForCheckoutProcess } from '../../../actions/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { CartSubtotalStyled, Summary, Checkout } from './Styles';\n\n// Component\nimport Button from '../../button/Button';\n\ninterface Props {\n  quantityItems: number;\n  totalAmount: number;\n}\n\nconst CartSubtotal: React.FC<Props> = ({ quantityItems, totalAmount }) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const checkoutHandler = () => {\n    history.push(`/checkout-process`);\n    dispatch(clearAllOrder());\n    dispatch(readyForCheckoutProcess());\n  };\n\n  return (\n    <CartSubtotalStyled>\n      <Summary>\n        <h3>Subtotal ({quantityItems}) items</h3>\n        <p>${totalAmount.toFixed(2)}</p>\n      </Summary>\n\n      <Checkout>\n        <Button\n          width=\"100%\"\n          disabled={quantityItems === 0}\n          onClick={checkoutHandler}\n        >\n          Proceed to checkout\n        </Button>\n      </Checkout>\n    </CartSubtotalStyled>\n  );\n};\n\nexport default CartSubtotal;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { addToCart } from '../../actions/cart';\n\n// Redux - Slices\nimport { selectCartItems } from '../../slices/cart';\n\n// React Router\nimport { useHistory, useLocation, useParams } from 'react-router';\n\n// Styles\nimport { CartScreenStyled, Left, Right } from './Styles';\n\n// Antd Components\nimport { Alert, Button } from 'antd';\n\n// Components\nimport CartList from '../../components/cart/cart-list/CartList';\nimport CartSubtotal from '../../components/cart/cart-subtotal/CartSubtotal';\n\ninterface Props {}\n\nconst CartScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Location\n  const location = useLocation();\n\n  // Selector\n  const productList = useSelector(selectCartItems);\n\n  const { productID } = useParams() as { productID: string };\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  useEffect(() => {\n    if (productID) {\n      dispatch(addToCart(productID, qty));\n    }\n  }, [dispatch, productID, qty]);\n\n  const getQuantityItems = () =>\n    productList.reduce((acc, item: any) => acc + item.qty, 0);\n\n  const getTotalAmount = () =>\n    productList.reduce((acc, item: any) => acc + item.price * item.qty, 0);\n\n  return (\n    <CartScreenStyled>\n      <Left>\n        <h2>Shopping cart</h2>\n\n        {getQuantityItems() === 0 ? (\n          <Alert\n            message=\"Your cart is empty\"\n            type=\"error\"\n            showIcon\n            banner\n            action={\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => history.push('/')}\n              >\n                Go Home\n              </Button>\n            }\n          />\n        ) : (\n          <CartList productList={productList} />\n        )}\n      </Left>\n\n      <Right>\n        <CartSubtotal\n          quantityItems={getQuantityItems()}\n          totalAmount={getTotalAmount()}\n        />\n      </Right>\n    </CartScreenStyled>\n  );\n};\n\nexport default CartScreen;\n","// Axios\nimport axios from '../axios/index';\n\n// Redux - Slices\nimport {\n  userLoginFail,\n  userLoginRequest,\n  userLoginSuccess,\n  userLogout,\n  userRegisterFail,\n  userRegisterRequest,\n  userRegisterSuccess,\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userUpdateProfileRequest,\n  userUpdateProfileSuccess,\n  userUpdateProfileFail,\n  userListRequest,\n  userListSuccess,\n  userListFail,\n  deleteAlert,\n  userDeleteRequest,\n  userDeleteSuccess,\n  userDeleteFail,\n  userUpdateRequest,\n  userUpdateSuccess,\n  userUpdateFail,\n} from '../slices/user';\nimport { clearAllOrder } from './order';\nimport { clearAllCart } from './cart';\n\nexport const deleteAlerts = () => (dispatch: any) => {\n  setTimeout(() => {\n    dispatch(deleteAlert());\n  }, 3000);\n};\n\nexport const login = ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userLoginRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userLoginFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('__paypal_storage__');\n  dispatch(userLogout());\n  dispatch(clearAllOrder());\n  dispatch(clearAllCart());\n};\n\nexport const register = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any) => {\n  try {\n    dispatch(userRegisterRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userRegisterSuccess(data));\n    dispatch(userLoginSuccess(data));\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      userRegisterFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const getUserDetails = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/users/profile', config);\n\n    dispatch(userDetailsSuccess(data));\n  } catch (error) {\n    dispatch(\n      userDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const getUserById = (userId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(userDetailsRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${userId}`, config);\n\n    dispatch(userDetailsSuccess(data));\n  } catch (error) {\n    dispatch(\n      userDetailsFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const updateUser = ({\n  userId,\n  name,\n  email,\n  isAdmin,\n}: {\n  userId: string;\n  name: string;\n  email: string;\n  isAdmin: boolean;\n}) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userUpdateRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/${userId}`,\n      { userId, name, email, isAdmin },\n      config\n    );\n\n    dispatch(userUpdateSuccess(data));\n\n    dispatch(deleteAlerts());\n  } catch (error) {\n    dispatch(\n      userUpdateFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const listUsers = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userListRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/users', config);\n\n    dispatch(userListSuccess(data));\n  } catch (error) {\n    dispatch(\n      userListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const deleteUser = (userId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(userDeleteRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${userId}`, config);\n\n    dispatch(userDeleteSuccess());\n  } catch (error) {\n    dispatch(\n      userDeleteFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n\nexport const updateUserProfile = ({\n  name,\n  email,\n  password,\n}: {\n  name: string;\n  email: string;\n  password: string;\n}) => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(userUpdateProfileRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      '/api/users/profile',\n      { name, email, password },\n      config\n    );\n\n    dispatch(userUpdateProfileSuccess(data));\n    dispatch(getUserDetails());\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(deleteAlerts());\n  } catch (error) {\n    dispatch(\n      userUpdateProfileFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n\n    dispatch(deleteAlerts());\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoginScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoRegister = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../theme/variables';\n\nexport const InputStyled = styled.label`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n\n  & > p {\n    margin-bottom: 5px;\n  }\n\n  & > input {\n    outline: none;\n    width: 100%;\n    padding: 10px 0 10px 10px;\n  }\n`;\n\nexport const Error = styled.p`\n  margin-top: 6px;\n  color: ${color.colorBlack};\n`;\n","// React\nimport { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\n// Styles\nimport { InputStyled, Error } from './Styles';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  type?: string;\n}\n\nconst Input = forwardRef(\n  (\n    { label, error, type = 'text', ...props }: Props,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    return (\n      <InputStyled>\n        <p>{label}</p>\n        <input type={type} {...props} ref={ref} />\n        {error && <Error>{error}</Error>}\n      </InputStyled>\n    );\n  }\n);\n\nexport default Input;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { login } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorLogin,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { LoginScreenStyled, Form, GoRegister } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst LoginScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorLogin);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.goBack();\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleSignIn = handleSubmit(\n    (data: { email: string; password: string }) => {\n      dispatch(login(data));\n    }\n  );\n\n  return (\n    <LoginScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignIn}>\n          <h2>Sign in</h2>\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN IN</Button>\n\n          <GoRegister>\n            New Customer?\n            <span onClick={() => history.push('/register')}>Register</span>\n          </GoRegister>\n        </Form>\n      </Spin>\n    </LoginScreenStyled>\n  );\n};\n\nexport default LoginScreen;\n","import styled from 'styled-components';\n\nexport const RegisterScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n\nexport const GoLogin = styled.p`\n  margin-top: 20px;\n\n  & > span {\n    font-weight: bold;\n    cursor: pointer;\n    margin-left: 7px;\n  }\n\n  & > span:hover {\n    text-decoration: underline;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { register as registerUser } from '../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorRegister,\n  selectLoading,\n  selectUserInfo,\n} from '../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { RegisterScreenStyled, Form, GoLogin } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst RegisterScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErrorRegister);\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(registerUser(data));\n    }\n  );\n\n  return (\n    <RegisterScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleSignUp}>\n          <h2>Sign up</h2>\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Your name\"\n            error={errors.name?.message}\n            ref={register({\n              required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 20,\n                message: 'Name must not be greater than 20 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Your email\"\n            error={errors.email?.message}\n            ref={register({\n              required: 'Email is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Email is in wrong format',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            placeholder=\"Your password\"\n            error={errors.password?.message}\n            ref={register({\n              required: 'Password is required',\n              minLength: {\n                value: 6,\n                message: 'Password must be at least 6 characters',\n              },\n              maxLength: {\n                value: 50,\n                message: 'Password must not be greater than 50 characters',\n              },\n            })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password_repeat\"\n            label=\"Confirm Password\"\n            placeholder=\"Confirm password\"\n            error={errors.password_repeat?.message}\n            ref={register({\n              validate: (value) =>\n                value === password.current || 'The passwords do not match',\n            })}\n          />\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n          <Button width=\"100%\">SIGN UP</Button>\n\n          <GoLogin>\n            Already have an acount?\n            <span onClick={() => history.push('/login')}>Login</span>\n          </GoLogin>\n        </Form>\n      </Spin>\n    </RegisterScreenStyled>\n  );\n};\n\nexport default RegisterScreen;\n","import styled from 'styled-components';\n\nexport const ProfileScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect, useRef } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getUserDetails, updateUserProfile } from '../../actions/user';\n\n// Redux - Slices\nimport {\n  selectErrorDetails,\n  selectErrorUpdateDetails,\n  selectLoading,\n  selectProfile,\n  selectUserInfo,\n  selectSuccess,\n} from '../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ProfileScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Input from '../../components/input/Input';\nimport Button from '../../components/button/Button';\n\ninterface Props {}\n\nconst ProfileScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n  const user = useSelector(selectProfile) as {\n    name: string;\n    email: string;\n  };\n\n  const success = useSelector(selectSuccess);\n  const errorDetails = useSelector(selectErrorDetails);\n  const errorUpdateDetails = useSelector(selectErrorUpdateDetails);\n  const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch]);\n\n  const { register, errors, handleSubmit, watch } = useForm();\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      name: string;\n      email: string;\n      password: string;\n      password_repeat: string;\n    }) => {\n      dispatch(updateUserProfile(data));\n    }\n  );\n\n  return (\n    <ProfileScreenStyled>\n      <Spin spinning={loading}>\n        {user && (\n          <Form onSubmit={handleSignUp}>\n            <h2>User profile</h2>\n            <Input\n              name=\"name\"\n              label=\"Name\"\n              defaultValue={user && user.name}\n              placeholder=\"Your name\"\n              error={errors.name?.message}\n              ref={register({\n                required: 'Name is required',\n                minLength: {\n                  value: 3,\n                  message: 'Name must be at least 3 characters',\n                },\n                maxLength: {\n                  value: 20,\n                  message: 'Name must not be greater than 20 characters',\n                },\n              })}\n            />\n            <Input\n              name=\"email\"\n              label=\"Email\"\n              defaultValue={user && user.email}\n              placeholder=\"Your email\"\n              error={errors.email?.message}\n              ref={register({\n                required: 'Email is required',\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: 'Email is in wrong format',\n                },\n              })}\n            />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Enter password\"\n              error={errors.password?.message}\n              ref={register({\n                minLength: {\n                  value: 6,\n                  message: 'Password must be at least 6 characters',\n                },\n                maxLength: {\n                  value: 50,\n                  message: 'Password must not be greater than 50 characters',\n                },\n              })}\n            />\n            <Input\n              type=\"password\"\n              name=\"password_repeat\"\n              label=\"Confirm Password\"\n              placeholder=\"Confirm password\"\n              error={errors.password_repeat?.message}\n              ref={register({\n                validate: (value) =>\n                  value === password.current || 'The passwords do not match',\n              })}\n            />\n            {errorDetails && (\n              <Alert message={errorDetails} type=\"error\" showIcon banner />\n            )}\n            {errorUpdateDetails && (\n              <Alert\n                message={errorUpdateDetails}\n                type=\"error\"\n                showIcon\n                banner\n              />\n            )}\n            {success && (\n              <Alert message=\"Updated\" type=\"success\" showIcon banner />\n            )}\n            <Button width=\"100%\">UPDATE</Button>\n          </Form>\n        )}\n      </Spin>\n    </ProfileScreenStyled>\n  );\n};\n\nexport default ProfileScreen;\n","import styled from 'styled-components';\n\nexport const CheckoutProcessScreenStyled = styled.section``;\n\nexport const Container = styled.div`\n  padding: 30px 0;\n`;\n","import styled from 'styled-components';\n\nexport const ShippingStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { saveShippingAddress } from '../../../actions/cart';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ShippingStyled, Form } from './Styles';\n\n// Components\nimport Input from '../../../components/input/Input';\nimport Button from '../../../components/button/Button';\n\ninterface Props {}\n\nconst Shipping: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleSignUp = handleSubmit(\n    (data: {\n      address: string;\n      city: string;\n      postalCode: string;\n      country: string;\n    }) => {\n      dispatch(saveShippingAddress(data));\n    }\n  );\n\n  return (\n    <ShippingStyled>\n      <Form onSubmit={handleSignUp}>\n        <h2>Shipping</h2>\n        <Input\n          name=\"address\"\n          label=\"Address\"\n          placeholder=\"Your Address\"\n          error={errors.address?.message}\n          ref={register({\n            required: 'Address is required',\n            minLength: {\n              value: 3,\n              message: 'Address must be at least 3 characters',\n            },\n            maxLength: {\n              value: 200,\n              message: 'Address must not be greater than 200 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"city\"\n          label=\"City\"\n          placeholder=\"Your City\"\n          error={errors.city?.message}\n          ref={register({\n            required: 'City is required',\n            minLength: {\n              value: 3,\n              message: 'City must be at least 3 characters',\n            },\n            maxLength: {\n              value: 100,\n              message: 'City must not be greater than 100 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"postalCode\"\n          label=\"Postal Code\"\n          placeholder=\"Your Postal Code\"\n          error={errors.postalCode?.message}\n          ref={register({\n            required: 'Postal Code is required',\n            minLength: {\n              value: 3,\n              message: 'Postal Code must be at least 3 characters',\n            },\n            maxLength: {\n              value: 15,\n              message: 'Postal Code must not be greater than 15 characters',\n            },\n          })}\n        />\n        <Input\n          name=\"country\"\n          label=\"Country\"\n          placeholder=\"Your Country\"\n          error={errors.country?.message}\n          ref={register({\n            required: 'Country is required',\n            minLength: {\n              value: 3,\n              message: 'Country must be at least 3 characters',\n            },\n            maxLength: {\n              value: 100,\n              message: 'Country must not be greater than 100 characters',\n            },\n          })}\n        />\n        <Button width=\"100%\">CONTINUE</Button>\n      </Form>\n    </ShippingStyled>\n  );\n};\n\nexport default Shipping;\n","import styled from 'styled-components';\n\nexport const PaymentStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useState } from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { savePaymentMethod } from '../../../actions/cart';\n\n// Styles\nimport { PaymentStyled, Form } from './Styles';\n\n// Antd Components\nimport { Radio } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst Payment: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const [currentValue, setCurrentValue] = useState<string>();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    if (currentValue) {\n      dispatch(savePaymentMethod(currentValue));\n    }\n  };\n\n  return (\n    <PaymentStyled>\n      <Form onSubmit={handleSubmit}>\n        <h2>Payment method</h2>\n        <Radio.Group\n          onChange={(e) => setCurrentValue(e.target.value)}\n          value={currentValue}\n        >\n          <Radio value=\"Paypal\">Paypal</Radio>\n          <Radio value=\"Credit Card\">Credit Card</Radio>\n        </Radio.Group>\n        <Button width=\"100%\">CONTINUE</Button>\n      </Form>\n    </PaymentStyled>\n  );\n};\n\nexport default Payment;\n","import styled from 'styled-components';\n\nexport const PlaceOrderStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Details = styled.div`\n  width: 100%;\n\n  h2 {\n    font-size: 22px;\n    margin-bottom: 10px;\n    text-transform: uppercase;\n  }\n\n  & > div:first-child {\n    padding-top: 0px;\n  }\n\n  & > div {\n    padding-top: 10px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:last-child {\n    padding-bottom: 0px;\n    border-bottom: none;\n  }\n`;\n\nexport const OrderList = styled.ul`\n  padding: 0 25px;\n`;\n\nexport const OrderItem = styled.li`\n  display: grid;\n  grid-template-columns: 8% 1fr 30%;\n  grid-auto-rows: 30px;\n  grid-column-gap: 30px;\n  padding: 8px 20px;\n  border-bottom: 1px solid black;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const OrderImage = styled.div`\n  width: 100%;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const OrderName = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  & > p:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const OrderCant = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const OrderSummary = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    & > h2 {\n      text-transform: uppercase;\n    }\n\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2),\n  div:nth-child(3),\n  div:nth-child(4),\n  div:nth-child(5),\n  div:nth-child(6) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { createOrder } from '../../../actions/order';\n\n// Redux - Slices\nimport {\n  selectCartItems,\n  selectPaymentMethod,\n  selectShippingAddress,\n} from '../../../slices/cart';\nimport {\n  selectError,\n  selectLoading,\n  selectOrder,\n  selectSuccess,\n} from '../../../slices/order';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  PlaceOrderStyled,\n  Details,\n  OrderSummary,\n  OrderItem,\n  OrderList,\n  OrderImage,\n  OrderName,\n  OrderCant,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\n\ninterface Props {}\n\nconst PlaceOrder: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const products = useSelector(selectCartItems);\n  const shippingAddress = useSelector(selectShippingAddress) as {\n    address: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n  const paymentMethod = useSelector(selectPaymentMethod);\n  const order = useSelector(selectOrder) as {\n    _id: string;\n  };\n  const loading = useSelector(selectLoading);\n  const success = useSelector(selectSuccess);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success, order]);\n\n  const itemsPrice = products.reduce(\n    (acc, item: any) => acc + item.price * item.qty,\n    0\n  );\n\n  const shippingPrice = itemsPrice > 100 ? 0 : 100;\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2));\n  const totalPrice = Number(\n    (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\n  );\n\n  const placeOrderHanlder = () => {\n    dispatch(\n      createOrder({\n        orderItems: products,\n        shippingAddress,\n        paymentMethod,\n        itemsPrice,\n        taxPrice,\n        shippingPrice,\n        totalPrice,\n      })\n    );\n  };\n\n  return (\n    <Spin spinning={loading}>\n      <PlaceOrderStyled>\n        <Details>\n          <div>\n            <h2>Shipping</h2>\n            <p>\n              Address:{' '}\n              <span>\n                {shippingAddress.address}, {shippingAddress.city},{' '}\n                {shippingAddress.postalCode}, {shippingAddress.country}\n              </span>\n            </p>\n          </div>\n          <div>\n            <h2>Payment method</h2>\n            <p>\n              Method: <span>{paymentMethod}</span>\n            </p>\n          </div>\n          <div>\n            <h2>Order items</h2>\n            <OrderList>\n              {products.map((product: any) => (\n                <OrderItem key={product.product}>\n                  <OrderImage\n                    onClick={() => history.push(`/product/${product.product}`)}\n                  >\n                    <img src={product.image} alt={product.name} />\n                  </OrderImage>\n                  <OrderName>\n                    <p\n                      onClick={() =>\n                        history.push(`/product/${product.product}`)\n                      }\n                    >\n                      {product.name}\n                    </p>\n                  </OrderName>\n                  <OrderCant>\n                    <p>\n                      {product.qty} x ${product.price} = $\n                      {product.qty * product.price}\n                    </p>\n                  </OrderCant>\n                </OrderItem>\n              ))}\n            </OrderList>\n          </div>\n        </Details>\n\n        <OrderSummary>\n          <div>\n            <h2>Order Summary</h2>\n          </div>\n          <div>\n            <span>Items:</span>\n            <span>${itemsPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Shipping:</span>\n            <span>${shippingPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Tax:</span>\n            <span>${taxPrice.toFixed(2)}</span>\n          </div>\n          <div>\n            <span>Total:</span>\n            <span>${totalPrice}</span>\n          </div>\n          <div>\n            <Button\n              width=\"100%\"\n              onClick={placeOrderHanlder}\n              disabled={products.length === 0}\n            >\n              Place order\n            </Button>\n          </div>\n          {error && <Alert message={error} type=\"error\" showIcon banner />}\n        </OrderSummary>\n      </PlaceOrderStyled>\n    </Spin>\n  );\n};\n\nexport default PlaceOrder;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\nimport { selectShippingAddress, selectPaymentMethod } from '../../slices/cart';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { CheckoutProcessScreenStyled, Container } from './Styles';\n\n// Antd Components\nimport { Steps } from 'antd';\n\n// Components\nimport Shipping from '../../components/checkout-process/shipping/Shipping';\nimport Payment from '../../components/checkout-process/payment/Payment';\nimport PlaceOrder from '../../components/checkout-process/place-order/PlaceOrder';\n\ninterface Props {}\n\nconst CheckoutProcessScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n  const shippingAddress = useSelector(selectShippingAddress);\n  const paymentMethod = useSelector(selectPaymentMethod);\n\n  const { Step } = Steps;\n\n  const [currentProcess, setCurrentProcess] = useState(0);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (shippingAddress) {\n      setCurrentProcess(1);\n    }\n  }, [shippingAddress]);\n\n  useEffect(() => {\n    if (paymentMethod) {\n      setCurrentProcess(2);\n    }\n  }, [paymentMethod]);\n\n  const steps = [\n    {\n      title: 'Shipping',\n      content: <Shipping />,\n    },\n    {\n      title: 'Payment',\n      content: <Payment />,\n    },\n    {\n      title: 'Place Order',\n      content: <PlaceOrder />,\n    },\n  ];\n\n  return (\n    <CheckoutProcessScreenStyled>\n      <Steps\n        size=\"small\"\n        current={currentProcess}\n        className=\"site-navigation-steps\"\n      >\n        {steps.map((item) => (\n          <Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n\n      <Container>{steps[currentProcess].content}</Container>\n    </CheckoutProcessScreenStyled>\n  );\n};\n\nexport default CheckoutProcessScreen;\n","import styled from 'styled-components';\n\nexport const OrderScreenStyled = styled.section`\n  display: grid;\n  grid-template-columns: 60% 1fr;\n  column-gap: 40px;\n\n  @media (max-width: 1000px) {\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    column-gap: 0;\n    row-gap: 30px;\n  }\n`;\n\nexport const Details = styled.div`\n  width: 100%;\n\n  h2 {\n    font-size: 22px;\n    margin-bottom: 10px;\n    text-transform: uppercase;\n  }\n\n  & > div:first-child {\n    padding-top: 0px;\n  }\n\n  & > div {\n    padding-top: 10px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid black;\n\n    & > p {\n      margin-bottom: 8px;\n    }\n  }\n\n  & > div:last-child {\n    padding-bottom: 0px;\n    border-bottom: none;\n  }\n`;\n\nexport const OrderList = styled.ul`\n  padding: 0 25px;\n`;\n\nexport const OrderItem = styled.li`\n  display: grid;\n  grid-template-columns: 8% 1fr 30%;\n  grid-auto-rows: 30px;\n  grid-column-gap: 30px;\n  padding: 8px 20px;\n  border-bottom: 1px solid black;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const OrderImage = styled.div`\n  width: 100%;\n  cursor: pointer;\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const OrderName = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  & > p:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const OrderCant = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const OrderSummary = styled.div`\n  & > div {\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  & > div:nth-child(1) {\n    & > h2 {\n      text-transform: uppercase;\n    }\n\n    border-top: 1px solid black;\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n\n  & > div:nth-child(2),\n  div:nth-child(3),\n  div:nth-child(4),\n  div:nth-child(5),\n  div:nth-child(6) {\n    border-left: 1px solid black;\n    border-right: 1px solid black;\n    border-bottom: 1px solid black;\n  }\n`;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Axios\nimport axios from '../../axios/index';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getOrderDetails, payOrder } from '../../actions/order';\nimport { deliverOrder } from '../../actions/order/orderDeliver';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\nimport {\n  selectOrderDeliverSuccess,\n  orderDeliverReset,\n} from '../../slices/order/orderDeliver';\n\nimport { selectError, selectLoading, selectOrder } from '../../slices/order';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport {\n  OrderScreenStyled,\n  Details,\n  OrderSummary,\n  OrderItem,\n  OrderList,\n  OrderImage,\n  OrderName,\n  OrderCant,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Component\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Button from '../../components/button/Button';\n\ninterface Props {}\n\nconst OrderScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const order = useSelector(selectOrder) as {\n    _id: string;\n    taxPrice: number;\n    shippingPrice: number;\n    totalPrice: number;\n    isPaid: boolean;\n    isDelivered: boolean;\n    orderItems: [\n      {\n        _id: string;\n        image: string;\n        name: string;\n        price: number;\n        product: string;\n        qty: number;\n      }\n    ];\n    paymentMethod: string;\n    shippingAddress: {\n      address: string;\n      city: string;\n      postalCode: string;\n      country: string;\n    };\n    user: {\n      _id: string;\n      name: string;\n      email: string;\n    };\n    paidAt: string;\n    deliveredAt: string;\n  };\n  const userInfo = useSelector(selectUserInfo) as {\n    isAdmin: boolean;\n  };\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const successDeliver = useSelector(selectOrderDeliverSuccess);\n\n  const { orderId } = useParams() as { orderId: string };\n\n  const [, setSdkReady] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n\n  const addPayPalScript = async () => {\n    const { data: clientId } = await axios.get('/api/config/paypal');\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    dispatch(getOrderDetails(orderId));\n  }, [dispatch, orderId, successDeliver]);\n\n  useEffect(() => {\n    if (order) {\n      if (!order.isPaid) {\n        if (!(window as any).paypal) {\n          addPayPalScript();\n          console.log('paypal script added');\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [order]);\n\n  const itemsPrice =\n    order &&\n    order.orderItems.reduce((acc, item: any) => acc + item.price * item.qty, 0);\n\n  const handlerSuccessPayment = (paymentResult: any) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const handleDeliver = (orderId: string) => {\n    dispatch(deliverOrder(orderId));\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(orderDeliverReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      {order && (\n        <OrderScreenStyled>\n          <Details>\n            <h2>ORDER {order._id}</h2>\n            <div>\n              <h2>Shipping</h2>\n              <p>Name: {order.user.name}</p>\n              <p>Email: {order.user.email}</p>\n              <p>\n                Address:{' '}\n                <span>\n                  {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                  {order.shippingAddress.postalCode},{' '}\n                  {order.shippingAddress.country}\n                </span>\n              </p>\n              {!order.isDelivered ? (\n                <Alert message=\"Not Delivered\" type=\"error\" />\n              ) : (\n                <Alert message={`Paided ${order.deliveredAt}`} type=\"success\" />\n              )}\n            </div>\n            <div>\n              <h2>Payment method</h2>\n              <p>\n                Method: <span>{order.paymentMethod}</span>\n              </p>\n              {!order.isPaid ? (\n                <Alert message=\"Not Paid\" type=\"error\" />\n              ) : (\n                <Alert message={`Paid on ${order.paidAt}`} type=\"success\" />\n              )}\n            </div>\n            <div>\n              <h2>Order items</h2>\n              <OrderList>\n                {order.orderItems.map((product: any) => (\n                  <OrderItem key={product.product}>\n                    <OrderImage\n                      onClick={() =>\n                        history.push(`/product/${product.product}`)\n                      }\n                    >\n                      <img src={product.image} alt={product.name} />\n                    </OrderImage>\n                    <OrderName>\n                      <p\n                        onClick={() =>\n                          history.push(`/product/${product.product}`)\n                        }\n                      >\n                        {product.name}\n                      </p>\n                    </OrderName>\n                    <OrderCant>\n                      <p>\n                        {product.qty} x ${product.price} = $\n                        {product.qty * product.price}\n                      </p>\n                    </OrderCant>\n                  </OrderItem>\n                ))}\n              </OrderList>\n            </div>\n          </Details>\n\n          <OrderSummary>\n            <div>\n              <h2>Order Summary</h2>\n            </div>\n            <div>\n              <span>Items:</span>\n              <span>${itemsPrice}</span>\n            </div>\n            <div>\n              <span>Shipping:</span>\n              <span>${order.shippingPrice}</span>\n            </div>\n            <div>\n              <span>Tax:</span>\n              <span>${order.taxPrice}</span>\n            </div>\n            <div>\n              <span>Total:</span>\n              <span>${order.totalPrice}</span>\n            </div>\n            {!order.isPaid && (\n              <div>\n                <PayPalButton\n                  amount={order.totalPrice}\n                  onSuccess={handlerSuccessPayment}\n                />\n              </div>\n            )}\n            {userInfo.isAdmin && (\n              <Button onClick={() => handleDeliver(orderId)} width=\"100%\">\n                Deliver\n              </Button>\n            )}\n            <Button onClick={() => history.goBack()} width=\"100%\">\n              Go Back\n            </Button>\n          </OrderSummary>\n        </OrderScreenStyled>\n      )}\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default OrderScreen;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  orderDeliverRequest,\n  orderDeliverSuccess,\n  orderDeliverFail,\n} from '../../slices/order/orderDeliver';\n\nexport const deliverOrder = (orderId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(orderDeliverRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n\n    dispatch(orderDeliverSuccess());\n  } catch (error) {\n    dispatch(\n      orderDeliverFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const MyOrdersScreenStyled = styled.section`\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const OrderListStyled = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const OrderListItemStyled = styled.li`\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Header = styled.div`\n  padding-bottom: 10px;\n\n  & > h3 {\n    font-weight: bold;\n    font-size: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const Body = styled.div`\n  & > p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > p:first-child {\n    margin-bottom: 5px;\n  }\n\n  & > p > span {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0;\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { OrderListItemStyled, Header, Body, Footer } from './Styles';\n\n// Antd Components\nimport { Alert } from 'antd';\n\n// Components\nimport Button from '../../../button/Button';\n\ninterface Props {\n  _id: string;\n  createdAt: string;\n  totalPrice: number;\n  isPaid: boolean;\n  isDelivered: boolean;\n}\n\nconst OrderListItem: React.FC<Props> = ({\n  _id,\n  createdAt,\n  totalPrice,\n  isPaid,\n  isDelivered,\n}) => {\n  // History\n  const history = useHistory();\n\n  const handleGoToOrder = (orderId: string) => {\n    history.push(`/order/${orderId}`);\n  };\n\n  return (\n    <OrderListItemStyled>\n      <Header>\n        <h3>{_id}</h3>\n      </Header>\n      <Body>\n        <p>\n          <span>Date:</span> {createdAt.substring(0, 10)}\n        </p>\n        <p>\n          <span>Total Price:</span> ${totalPrice}\n        </p>\n      </Body>\n      <Footer>\n        {isPaid ? (\n          <Alert message=\"Paid\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not paid\" type=\"error\" showIcon />\n        )}\n        {isDelivered ? (\n          <Alert message=\"Delivered\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not delivered\" type=\"error\" showIcon />\n        )}\n      </Footer>\n      <Button width=\"100%\" onClick={() => handleGoToOrder(_id)}>\n        Details\n      </Button>\n    </OrderListItemStyled>\n  );\n};\n\nexport default OrderListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listMyOrders } from '../../../actions/order/orderMyList';\n\n// Redux - Slices\nimport {\n  selectOrderMyListOrders,\n  selectOrderMyListLoading,\n  selectOrderMyListError,\n  orderMyListReset,\n} from '../../../slices/order/orderMyList';\n\n// Styles\nimport { OrderListStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport OrderListItem from './order-list-item/OrderListItem';\n\ninterface Props {}\n\nconst OrderList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const myOrders = useSelector(selectOrderMyListOrders);\n  const loading = useSelector(selectOrderMyListLoading);\n  const error = useSelector(selectOrderMyListError);\n\n  useEffect(() => {\n    dispatch(listMyOrders());\n  }, [dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(orderMyListReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      <OrderListStyled>\n        {myOrders &&\n          myOrders.map((order: any) => (\n            <OrderListItem key={order._id + 1} {...order} />\n          ))}\n      </OrderListStyled>\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default OrderList;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  orderMyListRequest,\n  orderMyListSuccess,\n  orderMyListFail,\n} from '../../slices/order/orderMyList';\n\nexport const listMyOrders = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(orderMyListRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch(orderMyListSuccess(data));\n  } catch (error) {\n    dispatch(\n      orderMyListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { MyOrdersScreenStyled } from './Styles';\n\n// Components\nimport OrderList from '../../components/my-orders/order-list/OrderList';\n\ninterface Props {}\n\nconst MyOrdersScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    }\n  }, [history, userInfo]);\n\n  return (\n    <MyOrdersScreenStyled>\n      <h2>My Orders</h2>\n      <OrderList />\n    </MyOrdersScreenStyled>\n  );\n};\n\nexport default MyOrdersScreen;\n","import styled from 'styled-components';\n\nexport const UserListScreenStyled = styled.section``;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > h2 {\n    text-transform: uppercase;\n  }\n\n  & > button {\n    width: auto;\n    padding: 0 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const UserListStyled = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const UserListItemStyled = styled.li`\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Header = styled.div`\n  padding-bottom: 10px;\n\n  & > h3 {\n    font-weight: bold;\n    font-size: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const Body = styled.div`\n  & > p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > p:first-child {\n    margin-bottom: 5px;\n  }\n\n  & > p > span {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0;\n`;\n\nexport const ActionsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","// React\nimport React from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\n// Redux - Actions\nimport { deleteUser } from '../../../../../actions/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  UserListItemStyled,\n  Header,\n  Body,\n  Footer,\n  ActionsContainer,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Popconfirm } from 'antd';\n\n// Components\nimport Button from '../../../../button/Button';\n\ninterface Props {\n  _id: string;\n  isAdmin: string;\n  name: number;\n  email: boolean;\n}\n\nconst UserListItem: React.FC<Props> = ({ _id, isAdmin, name, email }) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  const handleDelete = (userId: string) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const handleGoToUpdate = (userId: string) => {\n    history.push(`/admin/${userId}/edit`);\n  };\n\n  return (\n    <UserListItemStyled>\n      <Header>\n        <h3>{_id}</h3>\n      </Header>\n      <Body>\n        <p>\n          <span>Name:</span> {name}\n        </p>\n        <p>\n          <span>Email:</span> {email}\n        </p>\n      </Body>\n      <Footer>\n        {isAdmin ? (\n          <Alert message=\"Admin\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"User\" type=\"warning\" showIcon />\n        )}\n      </Footer>\n      <ActionsContainer>\n        <Button width=\"48%\" onClick={() => handleGoToUpdate(_id)}>\n          Edit\n        </Button>\n        <Popconfirm\n          title=\"Are you sure to delete this user?\"\n          onConfirm={() => handleDelete(_id)}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Button width=\"48%\">Delete</Button>\n        </Popconfirm>\n      </ActionsContainer>\n    </UserListItemStyled>\n  );\n};\n\nexport default UserListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listUsers } from '../../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectUsers,\n  selectSuccess,\n  selectErrorList,\n  selectErrorDelete,\n  selectLoading,\n} from '../../../../slices/user';\n\n// Styles\nimport { UserListStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport UserListItem from './user-list-item/UserListItem';\n\ninterface Props {}\n\nconst UserList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const users = useSelector(selectUsers);\n  const success = useSelector(selectSuccess);\n  const loading = useSelector(selectLoading);\n  const errorList = useSelector(selectErrorList);\n  const errorDelete = useSelector(selectErrorDelete);\n\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch, success]);\n\n  return (\n    <Spin spinning={loading}>\n      <UserListStyled>\n        {users &&\n          users.map((order: any) => (\n            <UserListItem key={order._id} {...order} />\n          ))}\n      </UserListStyled>\n      {users && (errorList || errorDelete) && (\n        <Alert\n          message={errorList || errorDelete}\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n    </Spin>\n  );\n};\n\nexport default UserList;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { UserListScreenStyled, Header } from './Styles';\n\n// Components\nimport UserList from '../../../../components/admin/users/user-list/UserList';\n\ninterface Props {}\n\nconst UserListScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n    isAdmin: boolean;\n    token: string;\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  return (\n    <UserListScreenStyled>\n      <Header>\n        <h2>User list</h2>\n      </Header>\n      <UserList />\n    </UserListScreenStyled>\n  );\n};\n\nexport default UserListScreen;\n","import styled from 'styled-components';\n\nexport const UserEditScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { getUserById, updateUser } from '../../../../actions/user';\n\n// Redux - Slices\nimport {\n  selectUserInfo,\n  selectProfile,\n  selectSuccess,\n  selectErrorDetails,\n  selectErrorUpdate,\n  selectLoading,\n} from '../../../../slices/user';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { UserEditScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin, Switch } from 'antd';\n\n// Components\nimport Button from '../../../../components/button/Button';\nimport Input from '../../../../components/input/Input';\n\ninterface Props {}\n\nconst UserEditScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    isAdmin: boolean;\n  };\n  const profile = useSelector(selectProfile) as {\n    email: string;\n    name: string;\n    isAdmin: boolean;\n  };\n  const success = useSelector(selectSuccess);\n  const loading = useSelector(selectLoading);\n  const errorDetails = useSelector(selectErrorDetails);\n  const errorUpdate = useSelector(selectErrorUpdate);\n\n  const { userId } = useParams() as { userId: string };\n\n  const [admin, setAdmin] = useState(false);\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleUpdate = handleSubmit((data: { name: string; email: string }) => {\n    dispatch(\n      updateUser({\n        userId,\n        ...data,\n        isAdmin: admin,\n      })\n    );\n  });\n\n  useEffect(() => {\n    dispatch(getUserById(userId));\n  }, [dispatch, userId]);\n\n  useEffect(() => {\n    if (profile) {\n      setAdmin(profile.isAdmin);\n    }\n  }, [profile]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  return (\n    <UserEditScreenStyled>\n      <Spin spinning={loading}>\n        {profile && (\n          <Form onSubmit={handleUpdate}>\n            <h2>Edit user</h2>\n\n            <Input\n              name=\"name\"\n              label=\"Name\"\n              defaultValue={profile && profile.name}\n              placeholder=\"Enter name\"\n              error={errors.name?.message}\n              ref={register({\n                required: 'Name is required',\n                minLength: {\n                  value: 3,\n                  message: 'Name must be at least 3 characters',\n                },\n                maxLength: {\n                  value: 100,\n                  message: 'Name must not be greater than 200 characters',\n                },\n              })}\n            />\n            <Input\n              name=\"email\"\n              label=\"Email Address\"\n              defaultValue={profile && profile.email}\n              placeholder=\"Enter email\"\n              error={errors.email?.message}\n              ref={register({\n                required: 'Email is required',\n                minLength: {\n                  value: 3,\n                  message: 'Email must be at least 3 characters',\n                },\n                maxLength: {\n                  value: 200,\n                  message: 'Email must not be greater than 100 characters',\n                },\n              })}\n            />\n            {profile && (\n              <Switch\n                checkedChildren=\"Admin\"\n                unCheckedChildren=\"User\"\n                defaultChecked={profile.isAdmin}\n                onChange={() => setAdmin(!admin)}\n              />\n            )}\n            {success && (\n              <Alert message=\"Updated\" type=\"success\" showIcon banner />\n            )}\n            <Button width=\"100%\" type=\"submit\">\n              Update\n            </Button>\n            <Button width=\"100%\" type=\"button\" onClick={() => history.goBack()}>\n              Go Back\n            </Button>\n          </Form>\n        )}\n        {errorDetails && (\n          <Alert message={errorDetails} type=\"error\" showIcon banner />\n        )}\n        {errorUpdate && (\n          <Alert message={errorUpdate} type=\"error\" showIcon banner />\n        )}\n      </Spin>\n    </UserEditScreenStyled>\n  );\n};\n\nexport default UserEditScreen;\n","import styled from 'styled-components';\n\nexport const ProductListScreenStyled = styled.section``;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > h2 {\n    text-transform: uppercase;\n  }\n\n  & > button {\n    width: auto;\n    padding: 0 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ProductListStyled = styled.section`\n  & > .ant-pagination {\n    padding-top: 20px;\n  }\n`;\n\nexport const ProductListContent = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const ProductListItemStyled = styled.li`\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Header = styled.div`\n  padding-bottom: 10px;\n\n  & > h3 {\n    font-weight: bold;\n    font-size: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const Body = styled.div`\n  & > p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > p:first-child {\n    margin-bottom: 5px;\n  }\n\n  & > p > span {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0;\n`;\n\nexport const ActionsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { deleteProduct } from '../../../../../actions/product/productDelete';\n\n// Redux - Slices\nimport {\n  selectProductDeleteLoading,\n  selectProductDeleteError,\n  productDeleteReset,\n} from '../../../../../slices/product/productDelete';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  ProductListItemStyled,\n  Header,\n  Body,\n  Footer,\n  ActionsContainer,\n} from './Styles';\n\n// Antd Components\nimport { Alert, Spin, Popconfirm } from 'antd';\n\n// Components\nimport Button from '../../../../button/Button';\n\ninterface Props {\n  _id: string;\n  name: string;\n  price: number;\n  category: boolean;\n  brand: string;\n  countInStock: number;\n}\n\nconst ProductListItem: React.FC<Props> = ({\n  _id,\n  name,\n  price,\n  category,\n  brand,\n  countInStock,\n}) => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectProductDeleteLoading);\n  const error = useSelector(selectProductDeleteError);\n\n  const handleDelete = (productId: string) => {\n    dispatch(deleteProduct(productId));\n  };\n\n  const handleGoToUpdate = (productId: string) => {\n    history.push(`/admin/products/${productId}/edit`);\n  };\n\n  useEffect(() => {\n    return () => {\n      dispatch(productDeleteReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      <ProductListItemStyled>\n        <Header>\n          <h3>{_id}</h3>\n        </Header>\n        <Body>\n          <p>\n            <span>Name:</span> {name}\n          </p>\n          <p>\n            <span>Price:</span> ${price}\n          </p>\n          <p>\n            <span>Category:</span> {category}\n          </p>\n          <p>\n            <span>Brand:</span> {brand}\n          </p>\n          <p>\n            <span>Stock:</span> {countInStock}\n          </p>\n        </Body>\n        <Footer>\n          {countInStock === 0 ? (\n            <Alert message=\"Out of Stock\" type=\"error\" showIcon />\n          ) : (\n            <Alert message=\"In Stock\" type=\"success\" showIcon />\n          )}\n        </Footer>\n        <ActionsContainer>\n          <Button width=\"48%\" onClick={() => handleGoToUpdate(_id)}>\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure to delete this product?\"\n            onConfirm={() => handleDelete(_id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button width=\"48%\">Delete</Button>\n          </Popconfirm>\n        </ActionsContainer>\n      </ProductListItemStyled>\n\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default ProductListItem;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  productDeleteRequest,\n  productDeleteSuccess,\n  productDeleteFail,\n} from '../../slices/product/productDelete';\n\nexport const deleteProduct = (productId: string) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(productDeleteRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${productId}`, config);\n\n    dispatch(productDeleteSuccess());\n  } catch (error) {\n    dispatch(\n      productDeleteFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProducts } from '../../../../actions/product/productList';\n\n// Redux - Slices\nimport {\n  selectProductListProducts,\n  selectProductListPages,\n  selectProductListPage,\n  selectProductListLoading,\n  selectProductListError,\n  productListReset,\n} from '../../../../slices/product/productList';\nimport { selectProductDeleteSuccess } from '../../../../slices/product/productDelete';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// Styles\nimport { ProductListStyled, ProductListContent } from './Styles';\n\n// Antd Components\nimport { Alert, Spin, Pagination } from 'antd';\n\n// Components\nimport ProductListItem from './product-list-item/ProductListItem';\n\ninterface Props {}\n\nconst ProductList: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const productList = useSelector(selectProductListProducts);\n  const pages = useSelector(selectProductListPages);\n  const page = useSelector(selectProductListPage);\n  const loading = useSelector(selectProductListLoading);\n  const error = useSelector(selectProductListError);\n\n  const success = useSelector(selectProductDeleteSuccess);\n\n  const { pageNumber } = (useParams() as { pageNumber: string }) || 1;\n\n  const changePage = (pageNumber: number) => {\n    history.push(`/admin/productlist/${pageNumber}`);\n  };\n\n  useEffect(() => {\n    dispatch(listProducts('', pageNumber));\n  }, [dispatch, success, pageNumber]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(productListReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      <ProductListStyled>\n        <ProductListContent>\n          {productList &&\n            productList.map((product: any) => (\n              <ProductListItem key={product._id} {...product} />\n            ))}\n        </ProductListContent>\n\n        {productList && pages && page && (\n          <Pagination\n            onChange={changePage}\n            current={page}\n            total={pages * productList.length}\n          />\n        )}\n      </ProductListStyled>\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default ProductList;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { ProductListScreenStyled, Header } from './Styles';\n\n// Antd Icons\nimport { FileAddOutlined } from '@ant-design/icons';\n\n// Components\nimport ProductList from '../../../../components/admin/products/product-list/ProductList';\nimport Button from '../../../../components/button/Button';\n\ninterface Props {}\n\nconst ProductListScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n    isAdmin: boolean;\n    token: string;\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  const handleCreateProduct = () => {\n    history.push('/admin/products');\n  };\n\n  return (\n    <ProductListScreenStyled>\n      <Header>\n        <h2>Product list</h2>\n        <Button onClick={() => handleCreateProduct()}>\n          <p>Create Product</p>\n          <FileAddOutlined />\n        </Button>\n      </Header>\n      <ProductList />\n    </ProductListScreenStyled>\n  );\n};\n\nexport default ProductListScreen;\n","import styled from 'styled-components';\n\nexport const ProductCreateScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { createProduct } from '../../../../actions/product/productCreate';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../../../slices/user';\nimport {\n  selectProductCreateSuccess,\n  selectProductCreateLoading,\n  selectProductCreateError,\n  productCreateReset,\n} from '../../../../slices/product/productCreate';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ProductCreateScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Button from '../../../../components/button/Button';\nimport Input from '../../../../components/input/Input';\n\ninterface Props {}\n\nconst ProductCreateScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    isAdmin: boolean;\n  };\n  const success = useSelector(selectProductCreateSuccess);\n  const loading = useSelector(selectProductCreateLoading);\n  const error = useSelector(selectProductCreateError);\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleCreate = handleSubmit((data: { name: string; email: string }) => {\n    dispatch(createProduct());\n  });\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (success) {\n      history.push('/admin/productlist');\n    }\n  }, [history, success]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(productCreateReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <ProductCreateScreenStyled>\n      <Spin spinning={loading}>\n        <Form onSubmit={handleCreate}>\n          <h2>Create product</h2>\n\n          <Input\n            name=\"name\"\n            label=\"Name\"\n            placeholder=\"Enter name\"\n            error={errors.name?.message}\n            ref={register({\n              // required: 'Name is required',\n              minLength: {\n                value: 3,\n                message: 'Name must be at least 3 characters',\n              },\n              maxLength: {\n                value: 100,\n                message: 'Name must not be greater than 200 characters',\n              },\n            })}\n          />\n          <Input\n            name=\"email\"\n            label=\"Email Address\"\n            placeholder=\"Enter email\"\n            error={errors.email?.message}\n            ref={register({\n              // required: 'Email is required',\n              minLength: {\n                value: 3,\n                message: 'Email must be at least 3 characters',\n              },\n              maxLength: {\n                value: 200,\n                message: 'Email must not be greater than 100 characters',\n              },\n            })}\n          />\n          <Button width=\"100%\" type=\"submit\">\n            Create product\n          </Button>\n          <Button width=\"100%\" type=\"button\" onClick={() => history.goBack()}>\n            GO BACK\n          </Button>\n        </Form>\n        {error && <Alert message={error} type=\"error\" showIcon banner />}\n      </Spin>\n    </ProductCreateScreenStyled>\n  );\n};\n\nexport default ProductCreateScreen;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  productCreateRequest,\n  productCreateSuccess,\n  productCreateFail,\n} from '../../slices/product/productCreate';\n\nexport const createProduct = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(productCreateRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.post('/api/products', {}, config);\n\n    dispatch(productCreateSuccess());\n  } catch (error) {\n    dispatch(\n      productCreateFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const ProductEditScreenStyled = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Form = styled.form`\n  max-width: 40%;\n  margin: 0 auto;\n\n  & > h2 {\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n\n  & > button {\n    margin-top: 15px;\n  }\n\n  @media (max-width: 1000px) {\n    max-width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 95%;\n  }\n`;\n","// React\nimport React, { useEffect, useState } from 'react';\n\n// Axios\nimport axios from '../../../../axios';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listProductDetails } from '../../../../actions/product/productDetails';\nimport { updateProduct } from '../../../../actions/product/productUpdate';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../../../slices/user';\nimport {\n  selectProductDetailsProduct,\n  selectProductDetailsLoading,\n  productDetailsReset,\n} from '../../../../slices/product/productDetails';\nimport {\n  selectProductUpdateSuccess,\n  selectProductUpdateLoading,\n  selectProductUpdateError,\n  productUpdateReset,\n} from '../../../../slices/product/productUpdate';\n\n// React Router\nimport { useHistory, useParams } from 'react-router';\n\n// React Hook Form\nimport { useForm } from 'react-hook-form';\n\n// Styles\nimport { ProductEditScreenStyled, Form } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport Button from '../../../../components/button/Button';\nimport Input from '../../../../components/input/Input';\n\ninterface Props {}\n\nconst ProductEditScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    isAdmin: boolean;\n  };\n\n  const product = useSelector(selectProductDetailsProduct);\n  const loadingProductDetails = useSelector(selectProductDetailsLoading);\n\n  const loadingProductUpdate = useSelector(selectProductUpdateLoading);\n\n  const successUpdate = useSelector(selectProductUpdateSuccess);\n  const error = useSelector(selectProductUpdateError);\n\n  const { productId } = useParams() as { productId: string };\n\n  const { register, errors, handleSubmit } = useForm();\n\n  const handleCreate = handleSubmit(\n    ({\n      name,\n      price,\n      image,\n      brand,\n      countInStock,\n      category,\n      description,\n    }: {\n      name: string;\n      price: number;\n      image: string;\n      brand: string;\n      countInStock: number;\n      category: string;\n      description: string;\n    }) => {\n      dispatch(\n        updateProduct(productId, {\n          name,\n          price: Number(price),\n          image,\n          brand,\n          countInStock: Number(countInStock),\n          category,\n          description,\n        })\n      );\n    }\n  );\n\n  const [image, setImage] = useState();\n\n  const uploadFileHandler = async (e: any) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n\n      const { data } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(listProductDetails(productId));\n  }, [dispatch, productId, successUpdate]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(productUpdateReset());\n      dispatch(productDetailsReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <ProductEditScreenStyled>\n      <Spin spinning={loadingProductDetails || loadingProductUpdate}>\n        {product && (\n          <Form onSubmit={handleCreate}>\n            <h2>Edit product</h2>\n            <Input\n              name=\"name\"\n              label=\"Name\"\n              defaultValue={product.name}\n              placeholder=\"Enter name\"\n              error={errors.name?.message}\n              ref={register({\n                required: 'Name is required',\n                minLength: {\n                  value: 3,\n                  message: 'Name must be at least 3 characters',\n                },\n                maxLength: {\n                  value: 100,\n                  message: 'Name must not be greater than 200 characters',\n                },\n              })}\n            />\n            <Input\n              type=\"number\"\n              name=\"price\"\n              label=\"Price\"\n              defaultValue={product.price}\n              placeholder=\"Enter price\"\n              error={errors.price?.message}\n              ref={register({\n                required: 'Price is required',\n              })}\n            />\n            <Input\n              name=\"image\"\n              label=\"Image\"\n              defaultValue={product.image}\n              value={image}\n              placeholder=\"Enter image\"\n              error={errors.image?.message}\n              ref={register({\n                required: 'Image is required',\n              })}\n            />\n            <Input\n              type=\"file\"\n              name=\"imageUpload\"\n              label=\"Image Upload\"\n              onChange={uploadFileHandler}\n              placeholder=\"Enter imageUpload\"\n              error={errors.imageUpload?.message}\n              ref={register({})}\n            />\n            <Input\n              name=\"brand\"\n              label=\"Brand\"\n              defaultValue={product.brand}\n              placeholder=\"Enter brand\"\n              error={errors.brand?.message}\n              ref={register({\n                required: 'Brand is required',\n              })}\n            />\n            <Input\n              type=\"number\"\n              name=\"countInStock\"\n              label=\"Count In Stock\"\n              defaultValue={product.countInStock}\n              placeholder=\"Enter count in stock\"\n              error={errors.countInStock?.message}\n              ref={register({\n                required: 'Count In Stock is required',\n              })}\n            />\n            <Input\n              name=\"category\"\n              label=\"Category\"\n              defaultValue={product.category}\n              placeholder=\"Enter category\"\n              error={errors.category?.message}\n              ref={register({\n                required: 'Category is required',\n              })}\n            />\n            <Input\n              name=\"description\"\n              label=\"Description\"\n              defaultValue={product.description}\n              placeholder=\"Enter description\"\n              error={errors.description?.message}\n              ref={register({\n                required: 'Description is required',\n              })}\n            />\n            {successUpdate && (\n              <Alert message=\"Updated\" type=\"success\" showIcon banner />\n            )}\n            <Button width=\"100%\" type=\"submit\">\n              Update\n            </Button>\n            <Button width=\"100%\" type=\"button\" onClick={() => history.goBack()}>\n              Go Back\n            </Button>\n          </Form>\n        )}\n        {error && <Alert message={error} type=\"error\" showIcon banner />}\n      </Spin>\n    </ProductEditScreenStyled>\n  );\n};\n\nexport default ProductEditScreen;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  productUpdateRequest,\n  productUpdateSuccess,\n  productUpdateFail,\n} from '../../slices/product/productUpdate';\n\nexport const updateProduct = (productId: string, product: any) => async (\n  dispatch: any,\n  getState: any\n) => {\n  try {\n    dispatch(productUpdateRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    await axios.put(`/api/products/${productId}`, product, config);\n\n    dispatch(productUpdateSuccess());\n  } catch (error) {\n    dispatch(\n      productUpdateFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const OrderListScreenStyled = styled.section``;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > h2 {\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const OrderListStyled = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-auto-rows: auto;\n  grid-column-gap: 20px;\n  grid-row-gap: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const OrderListItemStyled = styled.li`\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nexport const Header = styled.div`\n  padding-bottom: 10px;\n\n  & > h3 {\n    font-weight: bold;\n    font-size: 20px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const Body = styled.div`\n  & > p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  & > p:first-child {\n    margin-bottom: 5px;\n  }\n\n  & > p > span {\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0;\n`;\n\nexport const ActionsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","// React\nimport React from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport {\n  OrderListItemStyled,\n  Header,\n  Body,\n  Footer,\n  ActionsContainer,\n} from './Styles';\n\n// Antd Components\nimport { Alert } from 'antd';\n\n// Components\nimport Button from '../../../../button/Button';\n\ninterface Props {\n  _id: string;\n  createdAt: string;\n  totalPrice: number;\n  isPaid: boolean;\n  isDelivered: boolean;\n}\n\nconst OrderListItem: React.FC<Props> = ({\n  _id,\n  createdAt,\n  totalPrice,\n  isPaid,\n  isDelivered,\n}) => {\n  // History\n  const history = useHistory();\n\n  const handleGoToOrder = (orderId: string) => {\n    history.push(`/order/${orderId}`);\n  };\n\n  return (\n    <OrderListItemStyled>\n      <Header>\n        <h3>{_id}</h3>\n      </Header>\n      <Body>\n        <p>\n          <span>Date:</span> {createdAt.substring(0, 10)}\n        </p>\n        <p>\n          <span>Total Price:</span> ${totalPrice}\n        </p>\n      </Body>\n      <Footer>\n        {isPaid ? (\n          <Alert message=\"Paid\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not paid\" type=\"error\" showIcon />\n        )}\n        {isDelivered ? (\n          <Alert message=\"Delivered\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Not delivered\" type=\"error\" showIcon />\n        )}\n      </Footer>\n      <ActionsContainer>\n        <Button width=\"100%\" onClick={() => handleGoToOrder(_id)}>\n          Details\n        </Button>\n      </ActionsContainer>\n    </OrderListItemStyled>\n  );\n};\n\nexport default OrderListItem;\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { listOrders } from '../../../../actions/order/orderList';\n\n// Redux - Slices\nimport {\n  selectOrderListOrders,\n  selectOrderListLoading,\n  selectOrderListError,\n  orderListReset,\n} from '../../../../slices/order/orderList';\n\n// Styles\nimport { OrderListStyled } from './Styles';\n\n// Antd Components\nimport { Alert, Spin } from 'antd';\n\n// Components\nimport OrderListItem from './order-list-item/OrderListItem';\n\ninterface Props {}\n\nconst OrderList: React.FC<Props> = () => {\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const orders = useSelector(selectOrderListOrders);\n  const loading = useSelector(selectOrderListLoading);\n  const error = useSelector(selectOrderListError);\n\n  useEffect(() => {\n    dispatch(listOrders());\n  }, [dispatch]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(orderListReset());\n    };\n  }, [dispatch]);\n\n  return (\n    <Spin spinning={loading}>\n      <OrderListStyled>\n        {orders &&\n          orders.map((order: any) => (\n            <OrderListItem key={order._id} {...order} />\n          ))}\n      </OrderListStyled>\n      {error && <Alert message={error} type=\"error\" showIcon banner />}\n    </Spin>\n  );\n};\n\nexport default OrderList;\n","// Axios\nimport axios from '../../axios/index';\n\n// Redux - Slices\nimport {\n  orderListRequest,\n  orderListSuccess,\n  orderListFail,\n} from '../../slices/order/orderList';\n\nexport const listOrders = () => async (dispatch: any, getState: any) => {\n  try {\n    dispatch(orderListRequest());\n\n    const {\n      user: {\n        userInfo: { token },\n      },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders`, config);\n\n    dispatch(orderListSuccess(data));\n  } catch (error) {\n    dispatch(\n      orderListFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n","// React\nimport React, { useEffect } from 'react';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Redux - Slices\nimport { selectUserInfo } from '../../../../slices/user';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { OrderListScreenStyled, Header } from './Styles';\n\n// Components\nimport OrderList from '../../../../components/admin/orders/order-list/OrderList';\n\ninterface Props {}\n\nconst OrderListScreen: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Selector\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n    isAdmin: boolean;\n    token: string;\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/');\n    } else {\n      if (!userInfo.isAdmin) {\n        history.push('/');\n      }\n    }\n  }, [history, userInfo]);\n\n  return (\n    <OrderListScreenStyled>\n      <Header>\n        <h2>Order list</h2>\n      </Header>\n      <OrderList />\n    </OrderListScreenStyled>\n  );\n};\n\nexport default OrderListScreen;\n","// React\nimport React from 'react';\n\n// React Router\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\n// Components\nimport HomeScreen from '../pages/home/HomeScreen';\nimport ProductScreen from '../pages/product/ProductScreen';\nimport CartScreen from '../pages/cart/CartScreen';\nimport LoginScreen from '../pages/auth/login/LoginScreen';\nimport RegisterScreen from '../pages/auth/register/RegisterScreen';\nimport ProfileScreen from '../pages/profile/ProfileScreen';\nimport CheckoutProcessScreen from '../pages/checkout-process/CheckoutProcessScreen';\nimport OrderScreen from '../pages/order/OrderScreen';\nimport MyOrdersScreen from '../pages/my-orders/MyOrdersScreen';\nimport UserListScreen from '../pages/admin/users/user-list/UserListScreen';\nimport UserEditScreen from '../pages/admin/users/user-edit/UserEditScreen';\nimport ProductListScreen from '../pages/admin/products/product-list/ProductListScreen';\nimport ProductCreateScreen from '../pages/admin/products/product-create/ProductCreateScreen';\nimport ProductEditScreen from '../pages/admin/products/product-edit/ProductEditScreen';\nimport OrderListScreen from '../pages/admin/orders/order-list/OrderListScreen';\n\ninterface Props {}\n\nconst Routes: React.FC<Props> = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/search/:keyword\" component={HomeScreen} />\n      <Route exact path=\"/page/:pageNumber\" component={HomeScreen} />\n      <Route\n        exact\n        path=\"/search/:keyword/page/:pageNumber\"\n        component={HomeScreen}\n      />\n      <Route exact path=\"/\" component={HomeScreen} />\n\n      <Route exact path=\"/product/:productID\" component={ProductScreen} />\n      <Route exact path=\"/cart/:productID?\" component={CartScreen} />\n      <Route exact path=\"/login\" component={LoginScreen} />\n      <Route exact path=\"/register\" component={RegisterScreen} />\n      <Route exact path=\"/profile\" component={ProfileScreen} />\n      <Route exact path=\"/checkout-process\" component={CheckoutProcessScreen} />\n      <Route exact path=\"/myorders\" component={MyOrdersScreen} />\n      <Route exact path=\"/order/:orderId\" component={OrderScreen} />\n\n      <Route exact path=\"/admin/userlist\" component={UserListScreen} />\n      <Route exact path=\"/admin/:userId/edit\" component={UserEditScreen} />\n\n      <Route exact path=\"/admin/productlist\" component={ProductListScreen} />\n      <Route\n        exact\n        path=\"/admin/productlist/:pageNumber\"\n        component={ProductListScreen}\n      />\n      <Route exact path=\"/admin/orderlist\" component={OrderListScreen} />\n\n      <Route exact path=\"/admin/products\" component={ProductCreateScreen} />\n      <Route\n        exact\n        path=\"/admin/products/:productId/edit\"\n        component={ProductEditScreen}\n      />\n\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: Arial, Helvetica, sans-serif;\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    margin: 0;\n    list-style: none;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0px;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const Container = styled.main`\n  max-width: 1000px;\n  padding: 30px 0;\n  margin: 0 auto;\n  background-color: ${color.colorWhite};\n\n  @media (max-width: 1000px) {\n    padding: 30px 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from '../../../theme/variables';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.colorBlack};\n  height: 72px;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1000px;\n  width: 1000px;\n  height: 40px;\n\n  @media (max-width: 1000px) {\n    padding: 0 20px;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\n\nexport const Logo = styled.div`\n  & > a > h2 {\n    color: ${color.colorWhite};\n  }\n`;\n\nexport const DrawerStyled = styled.div`\n  display: none;\n\n  & > button {\n    background: white;\n    color: black;\n    width: auto;\n    padding: 0 20px;\n  }\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nexport const Navbar = styled.nav`\n  height: 100%;\n  display: flex;\n\n  button {\n    height: 100%;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nexport const Profile = styled.div`\n  & > button:first-child {\n    margin-right: 10px;\n  }\n\n  & > button {\n    background-color: ${color.colorWhite};\n    color: ${color.colorBlack};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SearchBoxStyled = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n\n  & > form {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    & > input {\n      height: 100%;\n      max-width: 200px;\n      width: 300px;\n      padding: 0px 0 0px 15px;\n      outline: none;\n      border-radius: 4px;\n      margin-right: 10px;\n      border: none;\n    }\n\n    & > button {\n      background-color: white;\n      color: black;\n      width: auto;\n      padding: 0 20px;\n      height: 100%;\n    }\n  }\n\n  @media (max-width: 1000px) {\n    display: none;\n  }\n`;\n","// React\nimport React, { useState } from 'react';\n\n// React Router\nimport { useHistory } from 'react-router';\n\n// Styles\nimport { SearchBoxStyled } from './Styles';\n\n// Antd Icons\nimport { SearchOutlined } from '@ant-design/icons';\n\n// Components\nimport Button from '../button/Button';\n\ninterface Props {}\n\nconst SearchBox: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  const [keyword, setKeyword] = useState('');\n\n  const submitHandler = (e: any) => {\n    e.preventDefault();\n\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push('/');\n    }\n  };\n\n  return (\n    <SearchBoxStyled>\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          placeholder=\"Search Products...\"\n          onChange={(e) => {\n            setKeyword(e.target.value);\n          }}\n        />\n        <Button>\n          <SearchOutlined />\n        </Button>\n      </form>\n    </SearchBoxStyled>\n  );\n};\n\nexport default SearchBox;\n","// React\nimport React, { useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Redux - Actions\nimport { logout } from '../../../actions/user';\n\n// Redux - Slices\nimport { selectLoading, selectUserInfo } from '../../../slices/user';\n\n// React Router\nimport { NavLink, useHistory } from 'react-router-dom';\n\n// Styles\nimport {\n  HeaderStyled,\n  Logo,\n  Navbar,\n  Profile,\n  HeaderContainer,\n  DrawerStyled,\n} from './Styles';\n\n// Antd Icons\nimport {\n  DownOutlined,\n  ProfileOutlined,\n  LogoutOutlined,\n  ShoppingCartOutlined,\n  MenuOutlined,\n  TeamOutlined,\n  DeploymentUnitOutlined,\n  InboxOutlined,\n} from '@ant-design/icons';\n\n// Antd Components\nimport { Drawer, Dropdown, Menu } from 'antd';\n\n// Components\nimport Button from '../../button/Button';\nimport SearchBox from '../../search-box/SearchBox';\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  // History\n  const history = useHistory();\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // Selector\n  const loading = useSelector(selectLoading);\n  const userInfo = useSelector(selectUserInfo) as {\n    name: string;\n    isAdmin: boolean;\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item\n        key=\"1\"\n        icon={<ProfileOutlined />}\n        onClick={() => history.push('/profile')}\n      >\n        Profile\n      </Menu.Item>\n\n      <Menu.Divider />\n\n      <Menu.Item\n        key=\"2\"\n        icon={<DeploymentUnitOutlined />}\n        onClick={() => history.push('/myorders')}\n      >\n        My orders\n      </Menu.Item>\n\n      {userInfo && userInfo.isAdmin && (\n        <>\n          <Menu.Divider />\n\n          <Menu.Item\n            key=\"3\"\n            icon={<TeamOutlined />}\n            onClick={() => history.push('/admin/userlist')}\n          >\n            Users\n          </Menu.Item>\n\n          <Menu.Divider />\n\n          <Menu.Item\n            key=\"4\"\n            icon={<InboxOutlined />}\n            onClick={() => history.push('/admin/productlist')}\n          >\n            Products\n          </Menu.Item>\n\n          <Menu.Divider />\n\n          <Menu.Item\n            key=\"5\"\n            icon={<DeploymentUnitOutlined />}\n            onClick={() => history.push('/admin/orderlist')}\n          >\n            Orders\n          </Menu.Item>\n        </>\n      )}\n\n      <Menu.Divider />\n\n      <Menu.Item key=\"999\" icon={<LogoutOutlined />} onClick={handleLogout}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <HeaderStyled>\n      <HeaderContainer>\n        <Logo>\n          <NavLink to=\"/\">\n            <h2>Awesome Shop</h2>\n          </NavLink>\n        </Logo>\n\n        <SearchBox />\n\n        {/* MOBILE */}\n        <DrawerStyled>\n          <Button onClick={showDrawer}>\n            <MenuOutlined />\n          </Button>\n\n          <Drawer\n            title={userInfo?.name}\n            placement=\"left\"\n            closable={false}\n            onClose={onClose}\n            visible={visible}\n          >\n            <Menu onClick={onClose}>\n              {userInfo ? (\n                <>{menu}</>\n              ) : (\n                <>\n                  <Menu.Item key=\"1\">\n                    <Button width=\"100%\" onClick={() => history.push('/login')}>\n                      Sign in\n                    </Button>\n                  </Menu.Item>\n                  <Menu.Divider />\n                  <Menu.Item key=\"2\">\n                    <Button\n                      width=\"100%\"\n                      onClick={() => history.push('/register')}\n                    >\n                      Sign up\n                    </Button>\n                  </Menu.Item>\n                </>\n              )}\n              <Menu.Item key=\"3\">\n                <Button width=\"100%\" onClick={() => history.push('/cart')}>\n                  <p>Cart</p>\n                  <ShoppingCartOutlined />\n                </Button>\n              </Menu.Item>\n            </Menu>\n          </Drawer>\n        </DrawerStyled>\n\n        {/* DESKTOP */}\n        <Navbar>\n          <Button onClick={() => history.push('/cart')}>\n            <p>Cart</p>\n            <ShoppingCartOutlined />\n          </Button>\n          <Profile>\n            {userInfo ? (\n              <Dropdown overlay={menu} trigger={['click']}>\n                <Button loading={loading} disabled={loading}>\n                  <p>{userInfo.name}</p> <DownOutlined />\n                </Button>\n              </Dropdown>\n            ) : (\n              <>\n                <Button onClick={() => history.push('/login')}>Sign in</Button>\n                <Button onClick={() => history.push('/register')}>\n                  Sign up\n                </Button>\n              </>\n            )}\n          </Profile>\n        </Navbar>\n      </HeaderContainer>\n    </HeaderStyled>\n  );\n};\n\nexport default Header;\n","// React\nimport React from 'react';\n\n// Styles\nimport { Container } from './Styles';\n\n// Components\nimport Header from '../header/Header';\n\ninterface Props {}\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <>\n      <Header />\n\n      <Container>{children}</Container>\n    </>\n  );\n};\n\nexport default Layout;\n","// React\nimport React from 'react';\n\n// React Router\nimport { HashRouter } from 'react-router-dom';\nimport Routes from './routes/Routes';\n\n// Styles\nimport 'antd/dist/antd.css';\nimport GlobalStyle from './theme/globalStyle';\n\n// Components\nimport Layout from './components/layout/layout/Layout';\n\ninterface Props {}\n\nconst App: React.FC<Props> = () => {\n  return (\n    <HashRouter>\n      <GlobalStyle />\n      <Layout>\n        <Routes />\n      </Layout>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\n// Components\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}